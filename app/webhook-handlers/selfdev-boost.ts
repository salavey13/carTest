import { WebhookHandler } from "./types";
import { sendTelegramMessage } from "../actions";

export const selfDevBoostHandler: WebhookHandler = {
  canHandle: (invoice) => invoice.type === "selfdev_boost",
  handle: async (invoice, userId, userData, totalAmount, supabase, telegramToken, adminChatId) => {
    const boostType = invoice.metadata?.boost_type;
    const updates: Record<string, any> = {};

    const boostEffects = {
      priority_review: { has_priority_review: true, message: "PR –≤–ª–µ—Ç–∞–µ—Ç –≤ –ø—Ä–æ–¥ –∑–∞ 24 —á–∞—Å–∞!" },
      cyber_extractor_pro: { has_cyber_extractor_pro: true, message: "–î–µ—Ä–µ–≤–æ —Ñ–∞–π–ª–æ–≤ –∏ AI-–ø–æ–¥—Å–∫–∞–∑–∫–∏ —Ç–≤–æ–∏!" },
      custom_command: { has_custom_command: true, message: "–ù–∞–ø–∏—à–∏ –º–Ω–µ, —á—Ç–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ –±–æ—Ç–∞!" },
      ai_code_review: { has_ai_code_review: true, message: "Grok —Ç–µ–ø–µ—Ä—å —Ç–≤–æ–π —Ä–µ–≤—å—é–µ—Ä!" },
      neon_avatar: { has_neon_avatar: true, message: "–¢–≤–æ–π –∞–≤–∞—Ç–∞—Ä —Ç–µ–ø–µ—Ä—å —Å–≤–µ—Ç–∏—Ç—Å—è –Ω–µ–æ–Ω–æ–º!" },
      vibe_session: { has_vibe_session: true, message: "–°–∫–æ—Ä–æ —Å–æ–∑–≤–æ–Ω–∏–º—Å—è –ø–æ VIBE!" },
      ar_tour_generator: { has_ar_tour_generator: true, message: "AR-—Ç—É—Ä—ã –¥–ª—è —Ç–∞—á–µ–∫ –≤ –¥–µ–ª–µ!" },
      code_warp_drive: { has_code_warp_drive: true, message: "–ë–æ—Ç –ø–∏—à–µ—Ç —Ñ–∏—á—É –∑–∞ 12 —á–∞—Å–æ–≤!" },
      cyber_garage_key: { has_cyber_garage_key: true, message: "VIP-–¥–æ—Å—Ç—É–ø –∫ –≥–∞—Ä–∞–∂—É –æ—Ç–∫—Ä—ã—Ç!" },
      tsunami_rider: { has_tsunami_rider: true, message: "–¢—ã —Ç–µ–ø–µ—Ä—å Tsunami Rider, —ç–ª–∏—Ç–∞!" },
      bot_overclock: { has_bot_overclock: true, message: "–ë–æ—Ç –Ω–∞ –¥–≤–æ–π–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏ 30 –¥–Ω–µ–π!" },
      neural_tuner: { has_neural_tuner: true, message: "–ù–µ–π—Ä–æ—Å–µ—Ç—å –ø–æ–¥–±–∏—Ä–∞–µ—Ç —Ç–∞—á–∫–∏ –ø–æ –≤–∞–π–±—É!" },
      repo_stealth_mode: { has_repo_stealth_mode: true, message: "–¢–≤–æ–∏ PR —Ç–µ–ø–µ—Ä—å –≤ —Å—Ç–µ–ª—Å-—Ä–µ–∂–∏–º–µ!" },
      glitch_fx_pack: { has_glitch_fx_pack: true, message: "–ì–ª–∏—Ç—á-—ç—Ñ—Ñ–µ–∫—Ç—ã –¥–ª—è UI –≤ –∫–∞—Ä–º–∞–Ω–µ!" },
      infinite_extract: { has_infinite_extract: true, message: "–≠–∫—Å—Ç—Ä–∞–∫—Ü–∏—è –±–µ–∑ –ª–∏–º–∏—Ç–æ–≤!" },
    };

    const effect = boostEffects[boostType];
    if (!effect) throw new Error(`Unknown boost type: ${boostType}`);

    // Update user metadata
    await supabase
      .from("users")
      .update({
        metadata: {
          ...userData.metadata,
          ...effect,
        },
      })
      .eq("user_id", userId);

    // Notify user
    await sendTelegramMessage(telegramToken, `üî• ${effect.message} –¢—ã –≤ –∏–≥—Ä–µ, –±—Ä–∞—Ç–∞–Ω!`, [], undefined, userId);

    // Notify admin
    await sendTelegramMessage(
      telegramToken,
      `ü§ë ${userData.username || userId} –∫—É–ø–∏–ª ${boostType} –∑–∞ ${totalAmount} XTR!`,
      [],
      undefined,
      adminChatId
    );
  },
};