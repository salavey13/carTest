import { sendComplexMessage } from "../actions/sendComplexMessage";
import { logger } from "@/lib/logger";

export async function howtoCommand(chatId: number, userId: number) {
  logger.info(`[HOWTO_V11_RENTAL] User ${userId} triggered /howto command.`);

  const botUrl = process.env.TELEGRAM_BOT_LINK || "https://t.me/oneSitePlsBot/app";

  const message = "–ü—Ä–∏–≤–µ—Ç, –≥–æ–Ω—â–∏–∫! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ **Paddock Protocol**. –≠—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –∞—Ä–µ–Ω–¥–∞, —ç—Ç–æ ‚Äî —Ç–≤–æ—è –≥–æ–Ω–æ—á–Ω–∞—è –∫–∞—Ä—å–µ—Ä–∞. –í–æ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–æ—á–∫–∏ –≤—Ö–æ–¥–∞ –≤ –Ω–∞—à—É —ç–∫–æ—Å–∏—Å—Ç–µ–º—É:";

  // Curated buttons based on the "Trilogy" plan for the rental platform
  const buttons = [
    [
      { text: "üèçÔ∏è –ê—Ä–µ–Ω–¥–æ–≤–∞—Ç—å –ë–∞–π–∫", url: `${botUrl}?startapp=rent-bike` },
      { text: "üèÜ –¢–∞–±–ª–∏—Ü–∞ –õ–∏–¥–µ—Ä–æ–≤", url: `${botUrl}?startapp=leaderboard` },
    ],
    [
      { text: "üë• –í—Å—Ç—É–ø–∏—Ç—å –≤ –≠–∫–∏–ø–∞–∂", url: `${botUrl}?startapp=crews` },
      { text: "‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–π –ë–∞–π–∫", url: `${botUrl}?startapp=admin` },
    ],
  ];

  try {
    const result = await sendComplexMessage(
      chatId,
      message,
      buttons,
      "motorcycle, neon, city, night, racing" // Updated image query for relevance
    );
    
    if (!result.success) {
      throw new Error(result.error || "Unknown error sending message.");
    }
    
    logger.info(`[HOWTO_V11_RENTAL] Rental-focused interactive guide sent successfully to user ${userId}.`);

  } catch (error) {
    logger.error("[HOWTO_V11_RENTAL] Failed to send interactive guide:", error);
    await sendComplexMessage(
        chatId,
        "üö® –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ç–∞–∂. –°–µ—Ä–≤–µ—Ä–∞, –≤–æ–∑–º–æ–∂–Ω–æ, –Ω–∞ –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–µ. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ."
    );
  }
}