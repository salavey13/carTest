import { sendComplexMessage } from "../actions/sendComplexMessage";
import { logger } from "@/lib/logger";

export async function howtoCommand(chatId: number, userId: number) {
  logger.info(`[HOWTO_V12_COMBO] User ${userId} triggered /howto command.`);

  const botUrl = process.env.TELEGRAM_BOT_LINK || "https://t.me/oneSitePlsBot/app";

  const message = `–ê–≥–µ–Ω—Ç, —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞. –≠—Ç–æ **–∫–æ–º–±–æ-–≤–æ–º–±–æ**: —Ç—ã –º–æ–∂–µ—à—å –±—ã—Ç—å **–ó–≤–µ–∑–¥–æ–π –¢—Ä–µ–∫–∞** –∏–ª–∏ **–ê—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä–æ–º –¶–∏—Ñ—Ä—ã**. –ò–ª–∏ –∏ —Ç–µ–º, –∏ –¥—Ä—É–≥–∏–º.

--- üèÜ **–ü–£–¢–¨ –ì–û–ù–©–ò–ö–ê** ---
–î–æ–º–∏–Ω–∏—Ä—É–π –Ω–∞ —É–ª–∏—Ü–∞—Ö, —Å–æ–∑–¥–∞–≤–∞–π —ç–∫–∏–ø–∞–∂–∏, –≤–ø–∏—à–∏ —Å–≤–æ–µ –∏–º—è –≤ –∏—Å—Ç–æ—Ä–∏—é.

--- üõ†Ô∏è **–ü–£–¢–¨ –ê–†–•–ò–¢–ï–ö–¢–û–†–ê** ---
–°–æ–∑–¥–∞–≤–∞–π —Ç–∞–∫–∏–µ –∂–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –ø—Ä–æ–∫–∞—á–∏–≤–∞–π VIBE, —Å—Ç–∞–Ω—å –ª–µ–≥–µ–Ω–¥–æ–π-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º.

–í—ã–±–µ—Ä–∏ —Å–≤–æ–π –ø—É—Ç—å. –ò–ª–∏ –ø—Ä–æ–π–¥–∏ –æ–±–∞.`;

  const buttons = [
    // Racer's Path
    [
      { text: "üèçÔ∏è –ê—Ä–µ–Ω–¥–æ–≤–∞—Ç—å –ë–∞–π–∫", url: `${botUrl}?startapp=rent-bike` },
      { text: "üèÜ –¢–∞–±–ª–∏—Ü–∞ –õ–∏–¥–µ—Ä–æ–≤", url: `${botUrl}?startapp=leaderboard` },
    ],
    [
      { text: "üë• –ú–æ–∏ –≠–∫–∏–ø–∞–∂–∏", url: `${botUrl}?startapp=crews` },
      { text: "‚õΩ –ú–æ–π –ì–∞—Ä–∞–∂", url: `${botUrl}?startapp=paddock` },
    ],
    // Architect's Path
    [
      { text: "üì± VIBE Studio (IDE)", url: `${botUrl}?startapp=repo-xml` },
      { text: "üöÄ –ü—Ä–æ–∫–∞—á–∫–∞ (CyberDev OS)", url: `${botUrl}?startapp=start-training` },
    ],
    [
      { text: "üé® –ì–∞–π–¥ –ø–æ –°—Ç–∏–ª—é", url: `${botUrl}?startapp=style-guide` },
      { text: "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ OS", url: `${botUrl}?startapp=settings` },
    ]
  ];

  try {
    const result = await sendComplexMessage(
      chatId,
      message,
      buttons,
      "cyberpunk motorcycle, racing, neon city, data streams, code" // Combo image query
    );
    
    if (!result.success) {
      throw new Error(result.error || "Unknown error sending message.");
    }
    
    logger.info(`[HOWTO_V12_COMBO] Combo Racer/Architect guide sent successfully to user ${userId}.`);

  } catch (error) {
    logger.error("[HOWTO_V12_COMBO] Failed to send interactive guide:", error);
    await sendComplexMessage(
        chatId,
        "üö® –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ç–∞–∂. –°–µ—Ä–≤–µ—Ä–∞, –≤–æ–∑–º–æ–∂–Ω–æ, –Ω–∞ –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–µ. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ."
    );
  }
}