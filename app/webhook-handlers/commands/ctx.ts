import { sendTelegramMessage, sendTelegramDocument } from "@/app/actions";
import { logger } from "@/lib/logger";
import { fetchRepoContents } from "@/app/actions_github/actions";

const REPO_URL = process.env.NEXT_PUBLIC_REPO_URL;

export async function ctxCommand(chatId: number, userId: number) {
  logger.info(`[Ctx Command] User ${userId} triggered the /ctx command.`);
  
  if (!REPO_URL) {
      logger.error("[Ctx Command] REPO_URL is not defined in environment variables.");
      await sendTelegramMessage("üö® –û—à–∏–±–∫–∞: URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", [], undefined, chatId.toString());
      return;
  }

  await sendTelegramMessage("üåå –°–æ–±–∏—Ä–∞—é –≤–µ—Å—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–æ–µ–∫—Ç–∞ –≤ –æ–¥–∏–Ω –∞—Å—Ç—Ä–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è.", [], undefined, chatId.toString());

  try {
      const { success, files, error } = await fetchRepoContents(REPO_URL);

      if (!success || !files) {
          throw new Error(error || "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å —Ñ–∞–π–ª—ã —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è.");
      }

      const combinedContent = files
          .map(file => `// File: ${file.path}\n\n${file.content}\n\n// --- END OF FILE: ${file.path} ---\n\n`)
          .join('');
      
      const fileName = `VibeContext_${new Date().toISOString().split('T')[0]}.ts`;

      const sendDocResult = await sendTelegramDocument(String(chatId), combinedContent, fileName);

      if (!sendDocResult.success) {
          throw new Error(sendDocResult.error || "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º.");
      }

      logger.info(`[Ctx Command] Successfully sent full context file to user ${userId}.`);

  } catch(e) {
      logger.error("[Ctx Command] Error fetching or sending context file:", e);
      const errorMessage = e instanceof Error ? e.message : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞.";
      await sendTelegramMessage(`üö® –ü—Ä–æ–≤–∞–ª –æ–ø–µ—Ä–∞—Ü–∏–∏. –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–±—Ä–∞—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç.\n–ü—Ä–∏—á–∏–Ω–∞: ${errorMessage}`, [], undefined, chatId.toString());
  }
}