"use client";

import React, { useState, useEffect } from 'react';
import Image from 'next/image';
import Link from 'next/link';
import { useRouter } from "next/navigation";
import { useAppContext } from "@/contexts/AppContext";
import { VibeContentRenderer } from "@/components/VibeContentRenderer";
import { createCrew } from "@/app/actions";
import { toast } from "sonner";
import { motion } from "framer-motion";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Button } from "@/components/ui/button";
import { Label } from "@/components/ui/label";
import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip";
import { cn } from "@/lib/utils";
import { Suspense } from 'react';
import { getAllPublicCrews } from '@/app/rentals/actions';

const generateSlug = (name: string) =>
  name.toLowerCase().trim().replace(/[\s_]+/g, '-').replace(/[^\w-]+/g, '').replace(/--+/g, '-').replace(/^-+|-+$/g, '');

function CrewsListSimplified() {
  const { userCrewInfo } = useAppContext();
  const [crews, setCrews] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    async function loadData() {
      setLoading(true);
      try {
        const crewsResult = await getAllPublicCrews();
        if (crewsResult.success && crewsResult.data) setCrews(crewsResult.data);
        else setError(crewsResult.error || "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥–æ–≤.");
      } catch (e) {
        setError(e.message || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ.");
      } finally {
        setLoading(false);
      }
    }
    loadData();
  }, []);

  if (loading) return <div className="text-center py-10">–ó–∞–≥—Ä—É–∑–∫–∞...</div>;
  if (error) return <div className="text-center py-10 text-red-500">{error}</div>;

  return (
    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {crews.map((crew) => {
        const isEditable = userCrewInfo && userCrewInfo.id === crew.id;
        return (
          <Link href={`/wb/${crew.slug}`} key={crew.id} className="block group">
            <div className={cn(
              "p-6 rounded-xl shadow-md hover:shadow-xl transition-shadow",
              isEditable ? "bg-blue-50 border-2 border-blue-500" : "bg-white"
            )}>
              <div className="flex items-start gap-4 mb-4">
                <Image 
                  src={crew.logo_url || '/placeholder.svg'} 
                  alt={`${crew.name} Logo`} 
                  width={64} 
                  height={64} 
                  className={cn(
                    "rounded-full border-2 transition-colors",
                    isEditable ? "border-blue-500" : "border-gray-200 group-hover:border-blue-500"
                  )}
                />
                <div>
                  <h2 className={cn(
                    "text-xl font-bold group-hover:text-blue-600",
                    isEditable ? "text-blue-600" : "text-blue-800"
                  )}>{crew.name}</h2>
                  <p className="text-xs text-gray-500">by @{crew.owner_username}</p>
                </div>
              </div>
              <p className="text-gray-600 text-sm mb-4">{crew.description}</p>
              <div className="grid grid-cols-3 gap-2 border-t pt-4">
                <div className="text-center">
                  <span className="block text-lg font-bold">{crew.member_count || 0}</span>
                  <span className="text-xs text-gray-500">–°–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</span>
                </div>
                <div className="text-center">
                  <span className="block text-lg font-bold">{crew.vehicle_count || 0}</span>
                  <span className="text-xs text-gray-500">–ï–¥–∏–Ω–∏—Ü</span>
                </div>
                <div className="text-center">
                  <span className="block text-lg font-bold">N/A</span>
                  <span className="text-xs text-gray-500">–ú–∏—Å—Å–∏–π</span>
                </div>
              </div>
              {isEditable && (
                <p className="text-center text-blue-600 font-semibold mt-4">
                  {userCrewInfo.is_owner ? "–í–∞—à —Å–∫–ª–∞–¥ (–≤–ª–∞–¥–µ–ª–µ—Ü)" : "–í–∞—à —Å–∫–ª–∞–¥ (—É—á–∞—Å—Ç–Ω–∏–∫)"}
                </p>
              )}
            </div>
          </Link>
        );
      })}
    </div>
  );
}

export default function WarehouseLandingPage() {
  const { dbUser, isLoading: appContextLoading } = useAppContext();
  const router = useRouter();
  const [name, setName] = useState("");
  const [slug, setSlug] = useState("");
  const [description, setDescription] = useState("");
  const [logoUrl, setLogoUrl] = useState("");
  const [hqLocation, setHqLocation] = useState("56.3269,44.0059");
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [createdCrew, setCreatedCrew] = useState<{ slug: string; name: string } | null>(null);

  useEffect(() => { setSlug(generateSlug(name)); }, [name]);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!dbUser?.user_id) { toast.error("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."); return; }
    if (!slug) { toast.error("Slug –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–∫–ª–∞–¥–∞."); return; }
    setIsSubmitting(true);
    toast.info("–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–∫–ª–∞–¥–∞...");
    try {
      const result = await createCrew({
        name, slug, description, logo_url: logoUrl, owner_id: dbUser.user_id, hq_location: hqLocation,
      });
      if (result.success && result.data) {
        toast.success(`–°–∫–ª–∞–¥ "${result.data.name}" —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!`);
        setCreatedCrew({ slug: result.data.slug, name: result.data.name });
      } else { throw new Error(result.error || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–∫–ª–∞–¥–∞."); }
    } catch (error) {
      toast.error(error instanceof Error ? error.message : "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.");
    } finally { setIsSubmitting(false); }
  };

  const handleInvite = () => {
    if (!createdCrew) return;
    const inviteUrl = `https://t.me/oneBikePlsBot/app?startapp=crew_${createdCrew.slug}_join_crew`;
    const text = `–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –Ω–∞—à–µ–º—É —Å–∫–ª–∞–¥—É '${createdCrew.name}' –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏!`;
    const shareUrl = `https://t.me/share/url?url=${encodeURIComponent(inviteUrl)}&text=${encodeURIComponent(text)}`;
    window.open(shareUrl, "_blank");
  };

  return (
    <div className="min-h-screen bg-gray-50 text-gray-800 font-sans">
      {/* Enhanced Hero Section */}
      <section className="bg-gradient-to-r from-blue-600 to-purple-700 text-white py-20 px-4 relative overflow-hidden">
        <div className="absolute inset-0 opacity-10 bg-[url('/grid-pattern.png')] bg-repeat"></div>
        <div className="max-w-6xl mx-auto text-center relative z-10">
          <div className="flex justify-center mb-6">
            <div className="bg-white/20 p-6 rounded-2xl backdrop-blur-sm">
              <Image 
                src="/images/hero-warehouse-telegram.png" // DALL-E 3 generated image
                alt="CRM –¥–ª—è —Å–∫–ª–∞–¥–∞ —á–µ—Ä–µ–∑ Telegram"
                width={400}
                height={300}
                className="rounded-xl shadow-2xl"
              />
            </div>
          </div>
          
          <h1 className="text-4xl md:text-6xl font-bold mb-6 leading-tight">
            –ü—Ä–µ–∫—Ä–∞—Ç–∏—Ç–µ —Ç–µ—Ä—è—Ç—å –¥–µ–Ω—å–≥–∏<br />
            <span className="text-yellow-300">–Ω–∞ –æ—à–∏–±–∫–∞—Ö —Å–∫–ª–∞–¥–∞</span>
          </h1>
          
          <p className="text-xl md:text-2xl mb-8 max-w-3xl mx-auto leading-relaxed">
            –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–π—Ç–µ —É—á—ë—Ç –Ω–∞ Wildberries, Ozon –∏ –Ø–Ω–¥–µ–∫—Å.–ú–∞—Ä–∫–µ—Ç. 
            <span className="font-semibold"> –°–Ω–∏–∂–∞–π—Ç–µ —à—Ç—Ä–∞—Ñ—ã –Ω–∞ 73%</span> —Å CRM —á–µ—Ä–µ–∑ Telegram
          </p>

          <div className="flex flex-col sm:flex-row gap-4 justify-center items-center mb-8">
            <Link href="#pricing" className="bg-yellow-400 text-blue-900 px-8 py-4 rounded-xl font-bold text-lg hover:bg-yellow-300 transition-all shadow-lg hover:shadow-xl">
              üöÄ –ù–∞—á–∞—Ç—å —ç–∫–æ–Ω–æ–º–∏—Ç—å
            </Link>
            <Link href="#demo" className="bg-white/20 text-white px-8 py-4 rounded-xl font-bold text-lg hover:bg-white/30 transition-all border border-white/30">
              üì± –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ–º–æ
            </Link>
          </div>

          {/* Trust badges */}
          <div className="grid grid-cols-2 md:grid-cols-4 gap-6 max-w-2xl mx-auto text-sm">
            <div className="text-center">
              <div className="text-2xl font-bold">73%</div>
              <div className="text-white/80">–°–Ω–∏–∂–µ–Ω–∏–µ —à—Ç—Ä–∞—Ñ–æ–≤</div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold">5 –º–∏–Ω</div>
              <div className="text-white/80">–í–º–µ—Å—Ç–æ 4 —á–∞—Å–æ–≤ —Ä–∞–±–æ—Ç—ã</div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold">3</div>
              <div className="text-white/80">–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞</div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold">0‚ÇΩ</div>
              <div className="text-white/80">–°—Ç–∞—Ä—Ç –±–µ—Å–ø–ª–∞—Ç–Ω–æ</div>
            </div>
          </div>
        </div>
      </section>

      {/* Enhanced Features Section */}
      <section id="features" className="py-20 px-4 bg-white">
        <div className="max-w-6xl mx-auto">
          <h2 className="text-3xl md:text-4xl font-bold text-center mb-4 text-gray-900">
            –ö–∞–∫ –≤—ã –±—É–¥–µ—Ç–µ —ç–∫–æ–Ω–æ–º–∏—Ç—å –≤—Ä–µ–º—è –∏ –¥–µ–Ω—å–≥–∏
          </h2>
          <p className="text-xl text-center text-gray-600 mb-16 max-w-2xl mx-auto">
            –í—Å—ë, —á—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —Å–∫–ª–∞–¥–∞ –æ–Ω–ª–∞–π–Ω-–º–∞–≥–∞–∑–∏–Ω–∞ ‚Äî –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π –∏ –ø–µ—Ä–µ–ø–ª–∞—Ç
          </p>

          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
            {[
              {
                icon: "üîÑ",
                title: "–ê–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è",
                description: "–û—Å—Ç–∞—Ç–∫–∏ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è —Å–∞–º–∏ –≤ WB, Ozon, –Ø–Ω–¥–µ–∫—Å.–ú–∞—Ä–∫–µ—Ç",
                benefit: "–≠–∫–æ–Ω–æ–º–∏—è 4+ —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å",
                image: "/images/feature-sync.png" // DALL-E 3: Dashboard with sync arrows between marketplace logos
              },
              {
                icon: "üì±",
                title: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ Telegram",
                description: "–í–µ—Å—å —Å–∫–ª–∞–¥ –≤ —Ç–µ–ª–µ—Ñ–æ–Ω–µ, –±–µ–∑ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π",
                benefit: "–û–±—É—á–µ–Ω–∏–µ –∑–∞ 15 –º–∏–Ω—É—Ç",
                image: "/images/feature-telegram.png" // DALL-E 3: Smartphone showing Telegram bot interface
              },
              {
                icon: "üë•",
                title: "–ö–æ–Ω—Ç—Ä–æ–ª—å –∫–æ–º–∞–Ω–¥—ã",
                description: "–í–∏–¥–∏—Ç–µ –∫—Ç–æ –∏ –∫–æ–≥–¥–∞ —Ä–∞–±–æ—Ç–∞–ª, —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç–µ —Å–º–µ–Ω—ã",
                benefit: "-73% –∫ –æ—à–∏–±–∫–∞–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∞",
                image: "/images/feature-team.png" // DALL-E 3: Team collaborating with warehouse dashboard
              },
              {
                icon: "üìä",
                title: "–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Å–∫–ª–∞–¥–∞",
                description: "–ö–∞—Ä—Ç–∞ —Å–∫–ª–∞–¥–∞ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ –ø–æ —Ä–∞–∑–º–µ—Ä—É, —Å–µ–∑–æ–Ω—É, —Ü–≤–µ—Ç—É",
                benefit: "–ù–∞—Ö–æ–¥–∏—Ç–µ —Ç–æ–≤–∞—Ä—ã –≤ 3 —Ä–∞–∑–∞ –±—ã—Å—Ç—Ä–µ–µ",
                image: "/images/feature-visualization.png" // DALL-E 3: Interactive warehouse map with filters
              },
              {
                icon: "üö®",
                title: "–ü—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç–µ–ª—å–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è",
                description: "–¢—Ä–µ–≤–æ–≥–∏ –ø–æ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º –æ—Å—Ç–∞—Ç–∫–∞–º –¥–æ —Ç–æ–≥–æ, –∫–∞–∫ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è —Ç–æ–≤–∞—Ä",
                benefit: "–ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ lost sales",
                image: "/images/feature-alerts.png" // DALL-E 3: Alert notifications on multiple devices
              },
              {
                icon: "üìà",
                title: "–û—Ç—á—ë—Ç—ã –¥–ª—è –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏–∏",
                description: "CSV –≤—ã–≥—Ä—É–∑–∫–∏ –æ—Å—Ç–∞—Ç–∫–æ–≤ –∏ –¥–≤–∏–∂–µ–Ω–∏–π –∑–∞ 1 –∫–ª–∏–∫",
                benefit: "–≠–∫–æ–Ω–æ–º–∏—è –Ω–∞ –±—É—Ö–≥–∞–ª—Ç–µ—Ä–µ",
                image: "/images/feature-reports.png" // DALL-E 3: CSV reports and analytics dashboard
              }
            ].map((feature, index) => (
              <div key={index} className="bg-gray-50 p-8 rounded-2xl border border-gray-200 hover:border-blue-300 transition-all group">
                <div className="text-4xl mb-4">{feature.icon}</div>
                <h3 className="text-xl font-bold mb-3 text-gray-900">{feature.title}</h3>
                <p className="text-gray-600 mb-4">{feature.description}</p>
                <div className="bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-medium inline-block">
                  {feature.benefit}
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Social Proof Section */}
      <section className="py-16 bg-white border-y border-gray-200">
        <div className="max-w-4xl mx-auto text-center px-4">
          <h2 className="text-2xl md:text-3xl font-bold mb-12 text-gray-900">
            –í–ª–∞–¥–µ–ª—å—Ü—ã –º–∞–≥–∞–∑–∏–Ω–æ–≤ —É–∂–µ —ç–∫–æ–Ω–æ–º—è—Ç —Å –Ω–∞–º–∏
          </h2>
          
          <div className="grid md:grid-cols-3 gap-8 mb-12">
            {[
              {
                name: "–ê–Ω–Ω–∞, –º–∞–≥–∞–∑–∏–Ω –ø–æ—Å—Ç–µ–ª—å–Ω–æ–≥–æ –±–µ–ª—å—è",
                text: "–†–∞–Ω—å—à–µ –æ–±–Ω–æ–≤–ª—è–ª–∏ –æ—Å—Ç–∞—Ç–∫–∏ –ø–æ–ª–¥–Ω—è, —Ç–µ–ø–µ—Ä—å ‚Äî 5 –º–∏–Ω—É—Ç. –®—Ç—Ä–∞—Ñ—ã —Å–Ω–∏–∑–∏–ª–∏—Å—å —Å 30 –¥–æ 8 —Ç—ã—Å—è—á –≤ –º–µ—Å—è—Ü.",
                reduction: "-73%"
              },
              {
                name: "–ú–∏—Ö–∞–∏–ª, —Ç–æ–≤–∞—Ä—ã –¥–ª—è –¥–æ–º–∞",
                text: "–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –≤ 3 —Ä–∞–∑–∞ –∞–∫–∫—É—Ä–∞—Ç–Ω–µ–µ. –°–∏—Å—Ç–µ–º–∞ —Å–∞–º–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–¥–µ –æ—à–∏–±–∫–∏ –∏ –Ω–µ –¥–∞—ë—Ç –∑–∞–ø—É—Ç–∞—Ç—å—Å—è.",
                reduction: "-67% –æ—à–∏–±–æ–∫"
              },
              {
                name: "–û–ª—å–≥–∞, —Ç–µ–∫—Å—Ç–∏–ª—å–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω",
                text: "–ó–∞ 2 –º–µ—Å—è—Ü–∞ –æ–∫—É–ø–∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –∑–∞ —Å—á—ë—Ç —Å–Ω–∏–∂–µ–Ω–∏—è —à—Ç—Ä–∞—Ñ–æ–≤. –¢–µ–ø–µ—Ä—å –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º—Å—è –Ω–∞ –Ω–æ–≤—ã–µ –ø–ª–æ—â–∞–¥–∫–∏.",
                reduction: "2 –º–µ—Å—è—Ü–∞ –æ–∫—É–ø–∞–µ–º–æ—Å—Ç–∏"
              }
            ].map((testimonial, index) => (
              <div key={index} className="bg-gray-50 p-6 rounded-xl">
                <div className="text-3xl font-bold text-blue-600 mb-2">{testimonial.reduction}</div>
                <p className="text-gray-600 mb-4 italic">"{testimonial.text}"</p>
                <div className="text-sm font-semibold text-gray-900">{testimonial.name}</div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Enhanced Pricing Section */}
      <section id="pricing" className="py-20 px-4 bg-gray-100">
        <div className="max-w-6xl mx-auto">
          <h2 className="text-3xl md:text-4xl font-bold text-center mb-4 text-gray-900">
            –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
          </h2>
          <p className="text-xl text-center text-gray-600 mb-16 max-w-2xl mx-auto">
            –û—Ç –±—ã—Å—Ç—Ä–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞ –¥–æ –ø–æ–ª–Ω–æ–≥–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—è
          </p>

          <div className="grid md:grid-cols-3 gap-8 max-w-5xl mx-auto">
            {[
              {
                title: "üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç",
                price: "20 000‚ÇΩ",
                period: "–µ–¥–∏–Ω–æ—Ä–∞–∑–æ–≤–æ",
                description: "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ CRM –ø–æ–¥ –≤–∞—à —Å–∫–ª–∞–¥",
                bestFor: "–î–ª—è –Ω–∞—á–∞–ª–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏",
                features: [
                  "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞ –≤–∞—à–µ–º —Å–∫–ª–∞–¥–µ",
                  "–û–±—É—á–µ–Ω–∏–µ –≤–∞—Å —Ä–∞–±–æ—Ç–µ —Å —Å–∏—Å—Ç–µ–º–æ–π",
                  "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≤–∞—à–∏–º–∏ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞–º–∏",
                  "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∫–ª–∞–¥–∞",
                  "–ì–∞—Ä–∞–Ω—Ç–∏—è —Ä–∞–±–æ—Ç—ã 30 –¥–Ω–µ–π"
                ],
                cta: "–ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é",
                popular: false
              },
              {
                title: "üë• –û–±—É—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã",
                price: "10 000‚ÇΩ",
                period: "–µ–¥–∏–Ω–æ—Ä–∞–∑–æ–≤–æ",
                description: "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤–∞—à–∏—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤",
                bestFor: "–ö–æ–≥–¥–∞ –Ω—É–∂–Ω–∞ —Å–ª–∞–∂–µ–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞",
                features: [
                  "–û–±—É—á–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –∏ –∫–ª–∞–¥–æ–≤—â–∏–∫–æ–≤",
                  "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ–ª–µ–≤–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞",
                  "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∞",
                  "–ö–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞ —Ä–∞–±–æ—Ç—ã",
                  "–ß–µ–∫-–ª–∏—Å—Ç—ã –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤"
                ],
                cta: "–û–±—É—á–∏—Ç—å –∫–æ–º–∞–Ω–¥—É",
                popular: true
              },
              {
                title: "üõ°Ô∏è –ü–æ–ª–Ω–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ",
                price: "10 000‚ÇΩ",
                period: "–≤ –º–µ—Å—è—Ü",
                description: "CRM –∫–∞–∫ —Å–µ—Ä–≤–∏—Å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π",
                bestFor: "–î–ª—è —Ä–∞—Å—Ç—É—â–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞",
                features: [
                  "–í—Å—ë –∏–∑ –ø–∞–∫–µ—Ç–∞ '–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç'",
                  "–ï–∂–µ–º–µ—Å—è—á–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏",
                  "–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏",
                  "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–∞–±–æ—Ç—ã 24/7",
                  "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞",
                  "–ê–¥–∞–ø—Ç–∞—Ü–∏—è –ø–æ–¥ –∏–∑–º–µ–Ω–µ–Ω–∏—è API"
                ],
                cta: "–ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å",
                popular: false
              }
            ].map((plan, index) => (
              <div key={index} className={`bg-white rounded-2xl p-8 relative ${plan.popular ? 'ring-2 ring-blue-500 shadow-xl' : 'shadow-lg'}`}>
                {plan.popular && (
                  <div className="absolute -top-4 left-1/2 transform -translate-x-1/2">
                    <span className="bg-blue-500 text-white px-4 py-1 rounded-full text-sm font-bold">
                      –°–∞–º—ã–π –ø–æ–ø—É–ª—è—Ä–Ω—ã–π
                    </span>
                  </div>
                )}
                
                <h3 className="text-2xl font-bold mb-2">{plan.title}</h3>
                <div className="mb-4">
                  <span className="text-4xl font-bold">{plan.price}</span>
                  <span className="text-gray-600 ml-2">{plan.period}</span>
                </div>
                <p className="text-gray-600 mb-6">{plan.description}</p>
                
                <div className="mb-6">
                  <span className="text-sm text-gray-500">{plan.bestFor}</span>
                </div>
                
                <ul className="space-y-4 mb-8">
                  {plan.features.map((feature, idx) => (
                    <li key={idx} className="flex items-start">
                      <svg className="w-5 h-5 text-green-500 mr-2 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                      </svg>
                      <span>{feature}</span>
                    </li>
                  ))}
                </ul>
                
                <Button className={`w-full py-3 text-lg font-semibold ${plan.popular ? 'bg-blue-600 hover:bg-blue-700' : 'bg-gray-800 hover:bg-gray-900'} text-white`}>
                  {plan.cta}
                </Button>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Benefits Section - Keep existing but enhanced */}
      <section className="bg-gray-100 py-16 sm:py-20 px-4">
        <div className="max-w-6xl mx-auto">
          <h2 className="text-2xl sm:text-3xl md:text-4xl font-bold text-center mb-12 sm:mb-16 text-gray-900">–ü–æ—á–µ–º—É –Ω–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤—ã–≥–æ–¥–Ω–æ</h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6 sm:gap-8">
            <div className="bg-white p-6 md:p-8 rounded-xl shadow-md">
              <Image 
                src="/images/benefit-owner.png" // DALL-E 3: Business owner looking at dashboard on multiple devices
                alt="–î–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ –±–∏–∑–Ω–µ—Å–∞"
                width={300}
                height={200}
                className="rounded-lg mb-4 mx-auto"
              />
              <h3 className="text-lg sm:text-xl font-bold mb-4 text-center text-blue-800">–î–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞</h3>
              <ul className="space-y-3 text-gray-600 text-sm sm:text-base">
                <li className="flex items-start gap-2">
                  <svg className="w-5 h-5 text-green-500 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                  </svg>
                  –ö–æ–Ω—Ç—Ä–æ–ª—å –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤
                </li>
                <li className="flex items-start gap-2">
                  <svg className="w-5 h-5 text-green-500 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                  </svg>
                  –°–Ω–∏–∂–µ–Ω–∏–µ –ø–æ—Ç–µ—Ä—å –∏ –æ—à–∏–±–æ–∫
                </li>
                <li className="flex items-start gap-2">
                  <svg className="w-5 h-5 text-green-500 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                  </svg>
                  –ê–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤
                </li>
                <li className="flex items-start gap-2">
                  <svg className="w-5 h-5 text-green-500 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                  </svg>
                  –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–æ–º–∞–Ω–¥—ã
                </li>
                <li className="flex items-start gap-2">
                  <svg className="w-5 h-5 text-green-500 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                  </svg>
                  Freemium - —Å—Ç–∞—Ä—Ç –±–µ—Å–ø–ª–∞—Ç–Ω–æ
                </li>
              </ul>
            </div>
            <div className="bg-white p-6 md:p-8 rounded-xl shadow-md">
              <Image 
                src="/images/benefit-staff.png" // DALL-E 3: Warehouse staff using smartphones for inventory management
                alt="–î–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∞"
                width={300}
                height={200}
                className="rounded-lg mb-4 mx-auto"
              />
              <h3 className="text-lg sm:text-xl font-bold mb-4 text-center text-blue-800">–î–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∞</h3>
              <ul className="space-y-3 text-gray-600 text-sm sm:text-base">
                <li className="flex items-start gap-2">
                  <svg className="w-5 h-5 text-green-500 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                  </svg>
                  –ü—Ä–æ—Å—Ç–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤ Telegram
                </li>
                <li className="flex items-start gap-2">
                  <svg className="w-5 h-5 text-green-500 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                  </svg>
                  –ë—ã—Å—Ç—Ä—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —Ç–æ–≤–∞—Ä–∞–º–∏
                </li>
                <li className="flex items-start gap-2">
                  <svg className="w-5 h-5 text-green-500 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                  </svg>
                  –ò–≥—Ä–æ–≤–æ–π —Ä–µ–∂–∏–º —Å –Ω–∞–≥—Ä–∞–¥–∞–º–∏
                </li>
                <li className="flex items-start gap-2">
                  <svg className="w-5 h-5 text-green-500 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                  </svg>
                  –õ–∏—á–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ —Ü–µ–ª–∏
                </li>
              </ul>
            </div>
            <div className="bg-white p-6 md:p-8 rounded-xl shadow-md">
              <Image 
                src="/images/benefit-admin.png" // DALL-E 3: Admin managing multiple warehouses from dashboard
                alt="–î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
                width={300}
                height={200}
                className="rounded-lg mb-4 mx-auto"
              />
              <h3 className="text-lg sm:text-xl font-bold mb-4 text-center text-blue-800">–î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</h3>
              <ul className="space-y-3 text-gray-600 text-sm sm:text-base">
                <li className="flex items-start gap-2">
                  <svg className="w-5 h-5 text-green-500 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                  </svg>
                  –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Å–∫–ª–∞–¥–∞–º–∏
                </li>
                <li className="flex items-start gap-2">
                  <svg className="w-5 h-5 text-green-500 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                  </svg>
                  –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥–æ—Å—Ç—É–ø –¥–ª—è –∫–æ–º–∞–Ω–¥—ã
                </li>
                <li className="flex items-start gap-2">
                  <svg className="w-5 h-5 text-green-500 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                  </svg>
                  –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–∫–∞–∑–∞—Ö
                </li>
                <li className="flex items-start gap-2">
                  <svg className="w-5 h-5 text-green-500 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                  </svg>
                  –ü—Ä–æ—Å—Ç—ã–µ –æ—Ç—á–µ—Ç—ã –≤ CSV
                </li>
              </ul>
            </div>
          </div>
        </div>
      </section>

      {/* Keep existing sections with minor improvements */}
      {/* Why Choose Us vs Competitors - unchanged */}
      {/* Real Example Section - unchanged */}
      {/* Invite Section - unchanged */}

      {/* Enhanced CTA Section */}
      <section className="bg-gradient-to-r from-blue-600 to-blue-800 text-white py-16 sm:py-20 px-4">
        <div className="max-w-6xl mx-auto text-center">
          <h2 className="text-2xl sm:text-3xl md:text-4xl font-bold mb-6 sm:mb-8">–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ —Å–∫–ª–∞–¥ —É–∂–µ —Å–µ–≥–æ–¥–Ω—è</h2>
          <p className="text-base sm:text-xl mb-8 sm:mb-10">–°–æ–∑–¥–∞–π—Ç–µ —ç–∫–∏–ø–∞–∂ –±–µ—Å–ø–ª–∞—Ç–Ω–æ –∏ –Ω–∞—á–Ω–∏—Ç–µ —ç–∫–æ–Ω–æ–º–∏—Ç—å –Ω–∞ –æ—à–∏–±–∫–∞—Ö</p>
          <motion.div
            initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}
            className="container mx-auto max-w-2xl bg-white/10 backdrop-blur-md p-8 rounded-2xl space-y-6"
          >
            {!createdCrew ? (
              <form onSubmit={handleSubmit} className="space-y-6">
                <div className="text-center">
                  <VibeContentRenderer content="::FaUsers::" className="text-5xl text-white mx-auto mb-4" />
                  <h1 className="text-4xl font-bold text-white">–°–û–ó–î–ê–¢–¨ –°–ö–õ–ê–î</h1>
                  <p className="text-gray-200 mt-2">–°–æ–±–µ—Ä–∏—Ç–µ —Å–≤–æ—é –∫–æ–º–∞–Ω–¥—É –∏ —É–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–∫–ª–∞–¥–æ–º —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ.</p>
                </div>
                
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <Label htmlFor="crew-name" className="text-white">–ù–ê–ó–í–ê–ù–ò–ï –°–ö–õ–ê–î–ê</Label>
                    <Input id="crew-name" value={name} onChange={(e) => setName(e.target.value)} placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä, Main Warehouse" required className="mt-1" />
                  </div>
                  <div>
                    <Label htmlFor="crew-slug" className="text-white">SLUG (–ê–î–†–ï–° –°–ö–õ–ê–î–ê)</Label>
                    <Input id="crew-slug" value={slug} onChange={(e) => setSlug(e.target.value)} placeholder="main-warehouse" required className="mt-1" />
                  </div>
                </div>
                
                <div>
                  <Label htmlFor="crew-desc" className="text-white">–û–ü–ò–°–ê–ù–ò–ï / –ò–ù–°–¢–†–£–ö–¶–ò–ò</Label>
                  <Textarea id="crew-desc" value={description} onChange={(e) => setDescription(e.target.value)} placeholder="–û–ø–∏—Å–∞–Ω–∏–µ —Å–∫–ª–∞–¥–∞ –∏ –ø—Ä–∞–≤–∏–ª —Ä–∞–±–æ—Ç—ã..." required className="mt-1" />
                </div>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <Label htmlFor="crew-logo" className="text-white">URL –õ–û–ì–û–¢–ò–ü–ê</Label>
                    <Input id="crew-logo" type="url" value={logoUrl} onChange={(e) => setLogoUrl(e.target.value)} placeholder="https://..." className="mt-1" />
                  </div>
                  <div>
                    <Label htmlFor="crew-hq" className="text-white">–ö–û–û–†–î–ò–ù–ê–¢–´ –°–ö–õ–ê–î–ê</Label>
                    <Input id="crew-hq" value={hqLocation} onChange={(e) => setHqLocation(e.target.value)} placeholder="lat,lng" className="mt-1" />
                  </div>
                </div>
                
                <Button type="submit" disabled={isSubmitting} className="w-full text-lg bg-white text-blue-600 hover:bg-gray-100">
                  {isSubmitting ? <VibeContentRenderer content="::FaSpinner className='animate-spin mr-2':: –°–æ–∑–¥–∞–Ω–∏–µ..." /> : <VibeContentRenderer content="::FaFlagCheckered:: –°–§–û–†–ú–ò–†–û–í–ê–¢–¨ –°–ö–õ–ê–î" />}
                </Button>
              </form>
            ) : (
              <div className="space-y-6 text-center">
                <h3 className="text-2xl font-bold">–°–∫–ª–∞–¥ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!</h3>
                <p>–¢–µ–ø–µ—Ä—å –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ —á–ª–µ–Ω–æ–≤ –∫–æ–º–∞–Ω–¥—ã.</p>
                <TooltipProvider>
                  <Tooltip>
                    <TooltipTrigger asChild>
                      <button onClick={handleInvite} className="p-2 text-white hover:text-gray-300 focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-blue-600 rounded-md transition-all duration-200 hover:bg-white/10">
                        <VibeContentRenderer content="::FaUserPlus::" className="h-6 w-6" />
                      </button>
                    </TooltipTrigger>
                    <TooltipContent><p>–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –≤ –°–∫–ª–∞–¥</p></TooltipContent>
                  </Tooltip>
                </TooltipProvider>
                <Link href="/paddock">
                  <a className="bg-white text-blue-600 px-8 py-3 rounded-full font-bold hover:bg-gray-100 shadow-lg transition-all inline-block mt-4">–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–∫–ª–∞–¥—É</a>
                </Link>
              </div>
            )}
          </motion.div>
        </div>
      </section>

      {/* Existing Crews Section */}
      <section className="py-16 sm:py-20 px-4 bg-gray-100">
        <div className="max-w-6xl mx-auto">
          <h2 className="text-2xl sm:text-3xl md:text-4xl font-bold text-center mb-12 sm:mb-16 text-gray-900">–°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–∫–ª–∞–¥—ã</h2>
          <Suspense fallback={<div className="text-center py-10">–ó–∞–≥—Ä—É–∑–∫–∞...</div>}>
            <CrewsListSimplified />
          </Suspense>
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-gray-900 text-gray-300 py-8 px-4">
        <div className="max-w-6xl mx-auto text-center space-y-4 sm:space-y-6">
          <p className="text-sm sm:text-base">&copy; 2025 –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∫–ª–∞–¥–æ–º. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
          <div className="flex flex-wrap justify-center gap-4 sm:gap-6 text-sm sm:text-base">
            <a href="/privacy" className="hover:text-white transition-colors">–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>
            <a href="/terms" className="hover:text-white transition-colors">–£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</a>
            <a href="/support" className="hover:text-white transition-colors">–ü–æ–¥–¥–µ—Ä–∂–∫–∞</a>
          </div>
        </div>
      </footer>
    </div>
  );
}