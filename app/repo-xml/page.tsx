"use client";
import React, { Suspense, useRef, useImperativeHandle } from "react";
import RepoTxtFetcher from "@/components/RepoTxtFetcher";
import AICodeAssistant from "@/components/AICodeAssistant";
import { RepoXmlPageProvider } from '@/contexts/RepoXmlPageContext'; // Import the provider
import { FaRobot, FaFileCode, FaCode } from "react-icons/fa";
import { motion } from "framer-motion";

// Forward Refs for child components to expose methods
const ForwardedRepoTxtFetcher = React.forwardRef((props, ref) => {
  // Assuming RepoTxtFetcher exposes methods via useImperativeHandle
  return <RepoTxtFetcher {...props} ref={ref} />;
});
ForwardedRepoTxtFetcher.displayName = 'ForwardedRepoTxtFetcher';

const ForwardedAICodeAssistant = React.forwardRef((props, ref) => {
  // Assuming AICodeAssistant exposes methods via useImperativeHandle
  return <AICodeAssistant {...props} ref={ref} />;
});
ForwardedAICodeAssistant.displayName = 'ForwardedAICodeAssistant';


export default function RepoXmlPage() {
  const fetcherRef = useRef<any>(null); // Ref for RepoTxtFetcher methods
  const assistantRef = useRef<any>(null); // Ref for AICodeAssistant methods
  const kworkInputRef = useRef<HTMLTextAreaElement>(null);
  const aiResponseInputRef = useRef<HTMLTextAreaElement>(null);
  const prSectionRef = useRef<HTMLElement>(null); // Ref for the PR section element

  // Original scrollToSection remains for the side nav
  const scrollToSectionNav = (id: string) => {
    const element = document.getElementById(id);
    if (element) {
      element.scrollIntoView({ behavior: "smooth", block: "start" }); // Use start for nav
    } else {
      console.error(`Element with id "${id}" not found.`);
    }
  };

  return (
    // Wrap the main content area with the Provider
    <RepoXmlPageProvider
        fetcherRef={fetcherRef}
        assistantRef={assistantRef}
        kworkInputRef={kworkInputRef}
        aiResponseInputRef={aiResponseInputRef}
        prSectionRef={prSectionRef}
    >
        <>
            <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=5.0, user-scalable=yes" />
            <div className="min-h-screen bg-gray-900 p-6 pt-24 text-white flex flex-col items-center relative overflow-y-auto">
                {/* Intro Section */}
                <section id="intro" className="mb-12 text-center max-w-2xl">
                    {/* ... (intro content remains the same) ... */}
                     <div className="flex justify-center mb-4">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 200 100" className="w-24 h-12">
                          <circle cx="50" cy="50" r="45" fill="none" stroke="url(#bgGlow)" strokeWidth="10" opacity="0.3" />
                          <circle cx="50" cy="50" r="20" fill="url(#robotFill)" stroke="url(#robotStroke)" strokeWidth="2" />
                          <circle cx="40" cy="45" r="3" fill="#E1FF01" />
                          <circle cx="60" cy="45" r="3" fill="#E1FF01" />
                          <rect x="37" y="53" width="26" height="3" fill="#E1FF01" />
                          <text x="100" y="60" fontSize="40" fill="url(#moneyFill)">üí∏</text>
                          <defs>
                            <radialGradient id="bgGlow">
                              <stop offset="0%" stopColor="#E1FF01" stopOpacity="1" />
                              <stop offset="100%" stopColor="#000" stopOpacity="0" />
                            </radialGradient>
                            <linearGradient id="robotFill" x1="0%" y1="0%" x2="100%" y2="100%">
                              <stop offset="0%" stopColor="#000" />
                              <stop offset="100%" stopColor="#E1FF01" />
                            </linearGradient>
                            <linearGradient id="robotStroke" x1="0%" y1="0%" x2="100%" y2="100%">
                              <stop offset="0%" stopColor="#E1FF01" />
                              <stop offset="100%" stopColor="#000" />
                            </linearGradient>
                            <linearGradient id="moneyFill" x1="0%" y1="0%" x2="100%" y2="100%">
                              <stop offset="0%" stopColor="#E1FF01" />
                              <stop offset="100%" stopColor="#000" />
                            </linearGradient>
                          </defs>
                        </svg>
                      </div>
                      <h1 className="text-4xl font-bold text-[#E1FF01] text-shadow-[0_0_10px_#E1FF01] animate-pulse">
                        –ì—Ä–æ–∫ –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª–Ω–∏—Ç—å –≤–∞—à–∏ –∫–æ–¥–æ–≤—ã–µ –º–µ—á—Ç—ã!
                      </h1>
                      <p className="text-lg text-gray-300 mt-2">
                        –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏! –≠—Ç–æ –¥–µ–º–æ –ø–æ–∫–∞–∂–µ—Ç, –∫–∞–∫ –ª–µ–≥–∫–æ –∏–∑–≤–ª–µ—á—å –∫–æ–¥ –∏–∑ GitHub –∏ —Å–æ–∑–¥–∞—Ç—å —á—Ç–æ-—Ç–æ –∫—Ä—É—Ç–æ–µ —Å –ø–æ–º–æ—â—å—é –±–æ—Ç–∞. –°—Ç—Ä–∞–Ω–∏—Ü—ã –ª–µ–∂–∞—Ç –≤ –ø–∞–ø–∫–µ `app`, –∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã ‚Äî –≤ `components`. –í—Å—ë –ø—Ä–æ—Å—Ç–æ, –ø—Ä–∞–≤–¥–∞?
                      </p>
                      <p className="text-sm text-red-400 mt-4 bg-gray-800 p-2 rounded-lg">
                        ‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –±–æ—Ç —Å–µ–π—á–∞—Å –±–µ–∑ –¥–µ–Ω–µ–≥, –ø–æ—ç—Ç–æ–º—É –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ{" "}
                        <a
                          href="https://t.me/oneSitePlsBot"
                          target="_blank"
                          rel="noopener noreferrer"
                          className="text-blue-400 underline hover:text-blue-300 transition"
                        >
                          t.me/oneSitePlsBot
                        </a>{" "}
                        –≤ Telegram (
                        <a
                          href="https://t.me/webanybot"
                          target="_blank"
                          rel="noopener noreferrer"
                          className="text-blue-400 underline hover:text-blue-300 transition"
                        >
                          t.me/webanybot
                        </a>
                        ), –∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ ‚Äî{" "}
                        <a
                          href="https://grok.com"
                          target="_blank"
                          rel="noopener noreferrer"
                          className="text-blue-400 underline hover:text-blue-300 transition"
                        >
                          Grok
                        </a>
                        . –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ! ;)
                      </p>
                </section>

                {/* Step 1: Formulate Request */}
                <section id="step1" className="mb-12 text-center max-w-2xl">
                    {/* ... (step 1 content remains the same) ... */}
                    <h2 className="text-2xl font-bold text-cyan-400 mb-4">
                        –®–∞–≥ 1: –°—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª—è –±–æ—Ç–∞ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
                    </h2>
                    <p className="text-gray-300 text-sm">
                        –°–Ω–∞—á–∞–ª–∞ –ø–æ–¥—É–º–∞–π—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å. –ù–∞–ø—Ä–∏–º–µ—Ä: "–î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∞ —Å–∞–π—Ç" –∏–ª–∏ "–ò—Å–ø—Ä–∞–≤–∏—Ç—å –±–∞–≥ –≤ –∫–æ–¥–µ". –ó–∞–ø–∏—à–∏—Ç–µ —ç—Ç–æ –≤ –ø–æ–ª–µ –Ω–∏–∂–µ –≤ "–í–≤–æ–¥ –∑–∞–ø—Ä–æ—Å–∞". –ß—Ç–æ–±—ã –±–æ—Ç –ø–æ–Ω—è–ª, –æ —á—ë–º —Ä–µ—á—å, –µ–º—É –Ω—É–∂–µ–Ω –∫–æ–Ω—Ç–µ–∫—Å—Ç ‚Äî –∫–æ–¥ –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞. –î–∞–≤–∞–π—Ç–µ –µ–≥–æ –∏–∑–≤–ª–µ—á—ë–º!
                    </p>
                </section>

                {/* RepoTxtFetcher Section with Suspense */}
                <Suspense fallback={<div className="text-white">–ó–∞–≥—Ä—É–∑–∫–∞...</div>}>
                    {/* Pass the ref here */}
                    <section id="extractor" className="mb-12 w-full max-w-2xl">
                        <ForwardedRepoTxtFetcher ref={fetcherRef} kworkInputRef={kworkInputRef} />
                    </section>
                </Suspense>

                {/* Step 2: Paste into Executor */}
                <section id="step2" className="mb-12 text-center max-w-2xl">
                   {/* ... (step 2 content remains the same) ... */}
                   <h2 className="text-2xl font-bold text-cyan-400 mb-4">
                        –®–∞–≥ 2: –í—Å—Ç–∞–≤—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –ë–æ—Ç–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
                    </h2>
                    <p className="text-gray-300 text-sm">
                        –ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –≤—ã –∏–∑–≤–ª–µ–∫–ª–∏ –∫–æ–¥ –∏ –ø–æ–ª—É—á–∏–ª–∏ –∞–Ω–∞–ª–∏–∑ –æ—Ç –±–æ—Ç–∞, —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –ó–∞—Ç–µ–º –≤—Å—Ç–∞–≤—å—Ç–µ –µ–≥–æ –Ω–∏–∂–µ (–∏–ª–∏ –≤ Grok!), —á—Ç–æ–±—ã –±–æ—Ç –Ω–∞–ø–∏—Å–∞–ª –Ω–æ–≤—ã–π –∫–æ–¥ ‚Äî –¥–∞–ª—å—à–µ —Å–æ–∑–¥–∞–π—Ç–µ Pull Request –Ω–∞ GitHub –≤ –æ–¥–∏–Ω –∫–ª–∏–∫. –í—Å—ë –≥–æ—Ç–æ–≤–æ –¥–ª—è –º–∞–≥–∏–∏!
                    </p>
                </section>

                {/* AICodeAssistant Section */}
                {/* Pass the ref here */}
                 {/* Assign the ref to the wrapping section for scrolling */}
                <section id="executor" ref={prSectionRef} className="mb-12 w-full max-w-2xl pb-16">
                     <ForwardedAICodeAssistant ref={assistantRef} aiResponseInputRef={aiResponseInputRef} />
                </section>

                {/* Fixed Navigation Icons */}
                <nav className="fixed right-2 top-1/2 transform -translate-y-1/2 flex flex-col space-y-4 z-13">
                    <button onClick={() => scrollToSectionNav("intro")} className="p-2 bg-gray-700 rounded-full hover:bg-gray-600 transition" title="–í–≤–µ–¥–µ–Ω–∏–µ"> <FaCode className="text-lg" /> </button>
                    <button onClick={() => scrollToSectionNav("step1")} className="p-2 bg-gray-700 rounded-full hover:bg-gray-600 transition" title="–®–∞–≥ 1: –ó–∞–ø—Ä–æ—Å"> <FaFileCode className="text-lg" /> </button>
                    <button onClick={() => scrollToSectionNav("extractor")} className="p-2 bg-gray-700 rounded-full hover:bg-gray-600 transition" title="–≠–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä –∫–æ–¥–∞"> <FaRobot className="text-lg" /> </button>
                    <button onClick={() => scrollToSectionNav("step2")} className="p-2 bg-gray-700 rounded-full hover:bg-gray-600 transition" title="–®–∞–≥ 2: –ò—Å–ø–æ–ª–Ω–µ–Ω–∏–µ"> <FaFileCode className="text-lg" /> </button>
                    <button onClick={() => scrollToSectionNav("executor")} className="p-2 bg-gray-700 rounded-full hover:bg-gray-600 transition" title="–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –∫–æ–¥–∞"> <FaRobot className="text-lg" /> </button>
                </nav>
            </div>
        </>
    </RepoXmlPageProvider> // End Provider
  );
}