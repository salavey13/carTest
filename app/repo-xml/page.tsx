"use client";
import React, { Suspense, useRef, useState, useEffect, ReactNode, useCallback, useMemo } from "react";
import { useSearchParams } from 'next/navigation';
import RepoTxtFetcher from "@/components/RepoTxtFetcher";
import AICodeAssistant from "@/components/AICodeAssistant";
import AutomationBuddy from "@/components/AutomationBuddy";
import {
    useRepoXmlPageContext, RepoXmlPageProvider,
    RepoTxtFetcherRef, AICodeAssistantRef, ImageReplaceTask,
    RepoXmlPageContextType, FileNode, TargetPrData, PendingFlowDetails
} from '@/contexts/RepoXmlPageContext';
import { useAppContext } from "@/contexts/AppContext";
import { debugLogger as logger } from "@/lib/debugLogger";
import { useAppToast } from "@/hooks/useAppToast";
import { Button } from "@/components/ui/button";
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card"; 
import {
    FaRobot, FaDownload, FaCircleInfo, FaGithub, FaWandMagicSparkles, FaUpLong,
    FaHandSparkles, FaArrowUpRightFromSquare, FaUserAstronaut, FaHeart, FaBullseye,
    FaAtom, FaBrain, FaCodeBranch, FaPlus, FaCopy, FaSpinner, FaBolt,
    FaToolbox, FaCode, FaVideo, FaDatabase, FaBug, FaMicrophone, FaLink, FaServer, FaRocket,
    FaMagnifyingGlass, FaMemory, FaKeyboard, FaBriefcase, FaMagnifyingGlassChart, FaTree, FaEye,
    FaUsers, FaQuoteLeft, FaQuoteRight, FaCircleXmark, FaAnglesDown, FaAnglesUp, FaVideoSlash, FaCommentDots
} from "react-icons/fa6";
import Link from "next/link";
import { motion } from 'framer-motion';
import VibeContentRenderer from '@/components/VibeContentRenderer';

const CYBERWTF_BADGE = "https://github.com/user-attachments/assets/7e7c6300-02dc-4314-be55-41005bfb247a";
const XUINITY_EMBLEM = "https://github.com/user-attachments/assets/910a623e-1c9d-4630-a8b4-7c361565dc97";

const onboardingBlocks = {
  en: {
    title: "üß¨ Welcome to CYBERVIBE STUDIO /repo-xml üß¨",
    badge: "CYBERWTF VIBE TRIBE",
    intro: `If you‚Äôre reading this, you‚Äôre not lost. You‚Äôre exactly where the next level starts.
This is not a regular dev page. This is your portal to the SUPERVIBE ENGINE:
- AI-powered
- Gamified
- 100% WTF
- Built for devs, dreamers, and reality remixers`,
    tldr: [
      "**Scroll.** Let your brain catch up‚Äîyes, it‚Äôs a lot.",
      "**Click ‚ÄúExtract Files‚Äù.** Instantly fetch source code to remix, patch, or build on.",
      "**Drop your AI request or idea.** Use the text box. Think: ‚ÄúAdd dark mode‚Äù, ‚ÄúFix this error‚Äù, ‚ÄúMake it cyberpunk‚Äù.",
      "**AI + YOU = PR** The bot will generate code, explain it, and let you instantly create a PR‚Äîno local setup, no git voodoo.",
      "**Level Up.** Every action unlocks perks, quests, and new features (tracked in your CyberFitness profile). See your progress, unlock achievements, and flex with the VIBE TRIBE."
    ],
    whatisit: `/repo-xml = AI-powered remix lab for this project.
SUPERVIBE ENGINE: Recursive workflow: Extract context ‚Üí Feed to AI ‚Üí Build, patch, merge ‚Üí Repeat
No install, no gatekeeping, just instant hacking and learning.`,
    youare: `You‚Äôre not just using a tool.  
You‚Äôre co-piloting an AI-powered, cyberpunk, recursive dev studio.  
You‚Äôre not asking ‚Äúhow do I code this?‚Äù  
You‚Äôre asking ‚Äúhow do I LEVEL UP?‚Äù`,
    levels: `üèÜ **BADGES, LEVELS, & QUESTS**
- Every PR, code fetch, or AI action = progress
- Quests like ‚ÄúFix a broken image‚Äù, ‚ÄúShip an idea‚Äù, ‚ÄúRemix the matrix‚Äù, ‚ÄúInception Swap‚Äù
- Your CyberFitness Profile evolves: Level up, unlock perks, collect badges, and see your ‚ÄúCognitive OS Version‚Äù change as you grow.`,
    faq: [
      { q: "Why does this look like a game?", a: "Because learning, shipping, and leveling up should feel like one." },
      { q: "Why is there a DNA helix and neon everywhere?", a: "Because you‚Äôre hacking the code of your DEV DNA‚Äîand it should look awesome." },
      { q: "Why is this better than a regular code editor?", a: "No setup, no fear, no gatekeeping. Just create, remix, and WIN." },
      { q: "What if I break something?", a: "You can‚Äôt. Everything is sandboxed, safe, and tracked. Every PR is reviewed before merging." },
      { q: `"I still don‚Äôt get it."`, a: "Scroll back up. Click something. You‚Äôll get it once you vibe." },
    ],
    tribe: [
      { label: "CYBERVIBE Sandbox (this page)", url: "https://github.com/salavey13/carTest/app/repo-xml" },
      { label: "Telegram entrypoint", url: "https://t.me/oneSitePlsBot" },
      { label: "CYBERFITNESS Engine (Gamified)", url: "https://t.me/oneSitePlsBot/app" },
      { label: "Full achievement history, perks, and code", url: "https://github.com/salavey13/carTest/blob/main/hooks/cyberFitnessSupabase.ts" },
    ],
    ready: "Ready? Let‚Äôs f*cking go. Welcome to CYBERVIBE."
  },
  ru: {
    title: "üß¨ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ CYBERVIBE STUDIO /repo-xml üß¨",
    badge: "CYBERWTF VIBE TRIBE",
    intro: `–ï—Å–ª–∏ —Ç—ã —ç—Ç–æ —á–∏—Ç–∞–µ—à—å ‚Äì —Ç—ã –Ω–µ –ø–æ—Ç–µ—Ä—è–ª—Å—è. –¢—ã –∏–º–µ–Ω–Ω–æ —Ç–∞–º, –≥–¥–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å.
–≠—Ç–æ –Ω–µ –æ–±—ã—á–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤. –≠—Ç–æ —Ç–≤–æ–π –ø–æ—Ä—Ç–∞–ª –≤ SUPERVIBE ENGINE:
- –ò–ò –≤–Ω—É—Ç—Ä–∏
- –ì–µ–π–º–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–æ
- 100% WTF
- –î–ª—è –∫–æ–¥–µ—Ä–æ–≤, –º–µ—á—Ç–∞—Ç–µ–ª–µ–π –∏ –≤—Å–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –±–µ–∑ –±–∞—Ä—å–µ—Ä–æ–≤`,
    tldr: [
      "**–ü—Ä–æ–∫—Ä—É—Ç–∏ –≤–Ω–∏–∑.** –ü—É—Å—Ç—å –º–æ–∑–≥ –ø—Ä–∏–≤—ã–∫–Ω–µ—Ç ‚Äì –¥–∞, —Ç—É—Ç –º–Ω–æ–≥–æ –Ω–æ–≤–æ–≥–æ.",
      "**–ñ–º–∏ ‚Äú–ò–∑–≤–ª–µ—á—å —Ñ–∞–π–ª—ã‚Äù.** –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ –ø–æ–ª—É—á–∏ –∏—Å—Ö–æ–¥–Ω–∏–∫–∏ —ç—Ç–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –¥–ª—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤, —Ñ–∏–∫—Å–æ–≤ –∏ –∞–ø–≥—Ä–µ–π–¥–æ–≤.",
      "**–û–ø–∏—à–∏ —Å–≤–æ—é –∏–¥–µ—é –∏–ª–∏ –≤–æ–ø—Ä–æ—Å –¥–ª—è –ò–ò.** –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏: ‚Äú–î–æ–±–∞–≤—å —Ç–µ–º–Ω—É—é —Ç–µ–º—É‚Äù, ‚Äú–ò—Å–ø—Ä–∞–≤—å –æ—à–∏–±–∫—É‚Äù, ‚Äú–°–¥–µ–ª–∞–π –ø–æ-–∫–∏–±–µ—Ä–ø–∞–Ω–∫–æ–≤—Å–∫–∏‚Äù.",
      "**–ò–ò + –¢–´ = PR** –ë–æ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–¥, –æ–±—ä—è—Å–Ω–∏—Ç, –∏ –¥–∞—Å—Ç —Å—Ä–∞–∑—É —Å–æ–∑–¥–∞—Ç—å Pull Request ‚Äî –±–µ–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–±–æ—Ä–∫–∏, –±–µ–∑ –≥–∏—Ç–∞-–∫–æ–ª–¥—É–Ω—Å—Ç–≤–∞.",
      "**–ü—Ä–æ–∫–∞—á–∫–∞!** –õ—é–±–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –Ω–æ–≤—ã–µ –ø–µ—Ä–∫–∏, –∫–≤–µ—Å—Ç—ã –∏ —Ñ–∏—á–∏ (–≤—Å—ë –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤ —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å CyberFitness). –°–ª–µ–¥–∏ –∑–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º, —Å–æ–±–∏—Ä–∞–π –∞—á–∏–≤–∫–∏, –∏ —Å—Ç–∞–Ω–æ–≤–∏—Å—å —á–∞—Å—Ç—å—é VIBE TRIBE."
    ],
    whatisit: `/repo-xml = –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è —Ä–µ–º–∏–∫—Å–æ–≤ –Ω–∞ –±–∞–∑–µ –ò–ò –¥–ª—è —ç—Ç–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞.
SUPERVIBE ENGINE: –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –≤–æ—Ä–∫—Ñ–ª–æ—É: –ò–∑–≤–ª–µ–∫–∞–π –∫–æ–Ω—Ç–µ–∫—Å—Ç ‚Üí –ö–∏–¥–∞–π –≤ –ò–ò ‚Üí –°–æ–±–∏—Ä–∞–π, —á–∏–Ω–∏, –º–µ—Ä–∂–∏ ‚Üí –ü–æ–≤—Ç–æ—Ä–∏
–ë–µ–∑ —É—Å—Ç–∞–Ω–æ–≤–∫–∏, –±–µ–∑ –±–∞—Ä—å–µ—Ä–æ–≤, –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–π —Å—Ç–∞—Ä—Ç –∏ –æ–±—É—á–µ–Ω–∏–µ.`,
    youare: `–¢—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø–æ–ª—å–∑—É–µ—à—å—Å—è —Ç—É–ª–∑–æ–π.  
–¢—ã –∫–æ-–ø–∏–ª–æ—Ç–∏—Ä—É–µ—à—å –ò–ò-–∫–∏–±–µ—Ä–ø–∞–Ω–∫ —Å—Ç—É–¥–∏—é, –≥–¥–µ –∫–∞–∂–¥–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ ‚Äî –Ω–æ–≤—ã–π –ª–µ–≤–µ–ª.  
–¢—É—Ç –Ω–µ —Å–ø—Ä–∞—à–∏–≤–∞—é—Ç ‚Äú–∫–∞–∫ —ç—Ç–æ –∑–∞–∫–æ–¥–∏—Ç—å‚Äù,  
—Ç—É—Ç —Å–ø—Ä–∞—à–∏–≤–∞—é—Ç ‚Äú–∫–∞–∫ –ü–†–û–ö–ê–ß–ê–¢–¨–°–Ø?‚Äù`,
    levels: `üèÜ **–ê–ß–ò–í–ö–ò, –£–†–û–í–ù–ò –ò –ö–í–ï–°–¢–´**
- –õ—é–±–æ–π PR, —Ñ–∞–π–ª –∏–ª–∏ –∑–∞–ø—Ä–æ—Å –∫ –ò–ò = –ø—Ä–æ–≥—Ä–µ—Å—Å
- –ö–≤–µ—Å—Ç—ã: ‚Äú–ü–æ—á–∏–Ω–∏ –∫–∞—Ä—Ç–∏–Ω–∫—É‚Äù, ‚Äú–ó–∞–ø—É—Å—Ç–∏ –∏–¥–µ—é‚Äù, ‚Äú–†–µ–º–∏–∫—Å—É–π –º–∞—Ç—Ä–∏—Ü—É‚Äù, ‚ÄúInception Swap‚Äù –∏ –¥—Ä—É–≥–∏–µ
- –¢–≤–æ–π CyberFitness –ø—Ä–æ—Ñ–∏–ª—å —Ä–∞—Å—Ç–µ—Ç: –ù–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å, –ø–µ—Ä–∫–∏, –∞—á–∏–≤–∫–∏, –∏ ‚ÄúCognitive OS Version‚Äù ‚Äî –∫–∞–∫ —É –ø–µ—Ä—Å–æ–Ω–∞–∂–∞.`,
    faq: [
      { q: "–ü–æ—á–µ–º—É —ç—Ç–æ –ø–æ—Ö–æ–∂–µ –Ω–∞ –∏–≥—Ä—É?", a: "–ü–æ—Ç–æ–º—É —á—Ç–æ —É—á–∏—Ç—å—Å—è, –ø–∏–ª–∏—Ç—å –∏ –ø—Ä–æ–∫–∞—á–∏–≤–∞—Ç—å—Å—è ‚Äî –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤–µ—Å–µ–ª–æ." },
      { q: "–ó–∞—á–µ–º –î–ù–ö –∏ –Ω–µ–æ–Ω?", a: "–¢—ã —Ä–µ–∞–ª—å–Ω–æ –º–µ–Ω—è–µ—à—å —Å–≤–æ–π –∫–æ–¥–æ–≤—ã–π –î–ù–ö, –∏ –ø—É—Å—Ç—å —ç—Ç–æ –±—É–¥–µ—Ç –∫—Ä–∞—Å–∏–≤–æ." },
      { q: "–≠—Ç–æ –ª—É—á—à–µ –æ–±—ã—á–Ω–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞?", a: "–î–∞ ‚Äî –Ω–µ –Ω—É–∂–Ω–æ –Ω–∏—á–µ–≥–æ —Å—Ç–∞–≤–∏—Ç—å, –±–æ—è—Ç—å—Å—è –∏ —Ä–∞–∑–±–∏—Ä–∞—Ç—å—Å—è. –ü—Ä–æ—Å—Ç–æ —Å–æ–∑–¥–∞–≤–∞–π, —Ä–µ–º–∏–∫—Å—É–π –∏ –≤—ã–∏–≥—Ä—ã–≤–∞–π." },
      { q: "–ê –µ—Å–ª–∏ —è —á—Ç–æ-—Ç–æ —Å–ª–æ–º–∞—é?", a: "–ù–µ –±–æ–π—Å—è ‚Äî –≤—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –ø–µ—Å–æ—á–Ω–∏—Ü–µ, –Ω–∏—á–µ–≥–æ –Ω–µ —Å–ª–æ–º–∞—Ç—å. –ö–∞–∂–¥—ã–π PR –ø—Ä–æ—Ö–æ–¥–∏—Ç —Ä–µ–≤—å—é." },
      { q: "–í—Å—ë —Ä–∞–≤–Ω–æ –Ω–µ –ø–æ–Ω—è–ª(–∞)!", a: "–ü—Ä–æ–ª–∏—Å—Ç–∞–π –≤–≤–µ—Ä—Ö. –ö–ª–∏–∫–Ω–∏. –ü–æ–ø—Ä–æ–±—É–π. –¢—ã –ø–æ–π–º–µ—à—å, –∫–æ–≥–¥–∞ –Ω–∞—á–Ω–µ—à—å –≤–∞–π–±–∏—Ç—å." },
    ],
    tribe: [
      { label: "CYBERVIBE Sandbox (—ç—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞)", url: "https://github.com/salavey13/carTest/app/repo-xml" },
      { label: "–í—Ö–æ–¥ –≤ Telegram", url: "https://t.me/oneSitePlsBot" },
      { label: "CYBERFITNESS Engine (–ì–µ–π–º–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–æ)", url: "https://t.me/oneSitePlsBot/app" },
      { label: "–í—Å—è –∏—Å—Ç–æ—Ä–∏—è –∞—á–∏–≤–æ–∫, –ø–µ—Ä–∫–æ–≤ –∏ –∫–æ–¥–∞", url: "https://github.com/salavey13/carTest/blob/main/hooks/cyberFitnessSupabase.ts" },
    ],
    ready: "–ì–æ—Ç–æ–≤(–∞)? –ü–æ–≥–Ω–∞–ª–∏! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ CYBERVIBE."
  }
};

function LangOnboardingBlock({ lang }: { lang: "en" | "ru" }) {
  const t = onboardingBlocks[lang];
  return (
    <Card className="max-w-3xl mx-auto mb-10 bg-black/90 border border-fuchsia-600 shadow-2xl rounded-3xl p-0 overflow-hidden">
      <div className="flex flex-col items-center py-6">
        <img src={XUINITY_EMBLEM} alt="Xuinity emblem" className="w-28 mb-2 drop-shadow-glow" />
        <img src={CYBERWTF_BADGE} alt="CYBERWTF badge" className="w-52 mb-2 drop-shadow-glow" />
      </div>
      <CardHeader>
        <CardTitle className="text-2xl md:text-3xl font-bold text-center text-fuchsia-400 font-orbitron">{t.title}</CardTitle>
      </CardHeader>
      <CardContent className="space-y-4 text-base md:text-lg text-gray-200">
        <div className="whitespace-pre-line">{t.intro}</div>
        <div className="bg-gradient-to-r from-green-400/10 via-pink-400/10 to-purple-800/20 border-l-4 border-pink-500 rounded p-4 my-2 text-lg font-bold shadow-inner">
          <div className="mb-1">üö¶ <span className="text-pink-300 font-extrabold">TL;DR / –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç:</span></div>
          <ul className="list-disc ml-7 space-y-1">
            {t.tldr.map((l, i) => <li key={i} dangerouslySetInnerHTML={{ __html: l }} />)}
          </ul>
        </div>
        <div>
          <b>üåÄ {lang === "en" ? "What even is this?" : "–ß—Ç–æ —ç—Ç–æ –≤–æ–æ–±—â–µ?"}</b>
          <div className="whitespace-pre-line mt-2">{t.whatisit}</div>
        </div>
        <div className="italic text-pink-300 whitespace-pre-line">{t.youare}</div>
        <div className="mt-3 whitespace-pre-line">{t.levels}</div>
        <details className="mt-3 bg-slate-900/80 rounded p-3 border-l-4 border-fuchsia-600">
          <summary className="font-bold cursor-pointer">{lang === "en" ? "FAQ (Still lost? Read this!)" : "FAQ (–í—Å—ë –µ—â—ë WTF? –ß–∏—Ç–∞–π —ç—Ç–æ!)"}</summary>
          <ul className="mt-2 space-y-1">
            {t.faq.map((f, i) => (
              <li key={i}><b>{f.q}</b><br /><span>{f.a}</span></li>
            ))}
          </ul>
        </details>
        <div className="mt-4">
          <b>üî• {lang === "en" ? "Join the Tribe:" : "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ Tribe:"}</b>
          <ul className="mt-1 space-y-1">
            {t.tribe.map((l, i) => (
              <li key={i}><a href={l.url} target="_blank" rel="noopener noreferrer" className="text-fuchsia-400 underline hover:text-pink-400">{l.label}</a></li>
            ))}
          </ul>
        </div>
        <p className="text-center mt-6 text-2xl font-bold text-pink-400">{t.ready}</p>
      </CardContent>
    </Card>
  );
}

// --- I18N Translations ---
const translations = {
  en: {
    loading: "Booting SUPERVIBE ENGINE...",
    pageTitle: "SUPERVIBE STUDIO 2.0",
    welcome: "Yo,",
    intro1: "Code scary? Forget that noise! This is the <strong>NOW</strong>. Your personal <strong>dev accelerator</strong>. Instant Level UP!",
    intro2: "Think: Magic Playground. Got ideas? Speak 'em. AI builds, system checks, PR ships. <strong>Boom.</strong> You guide the process.",
    intro3: "Stop consuming, start <strong>CREATING</strong>. Build YOUR reality, crush YOUR problems, <strong>validate ideas INSTANTLY</strong>. This is how you vibe.",
    cyberVibeTitle: "The Vibe Loop: Your Level Up Engine <FaUpLong/>",
    cyberVibe1: "This ain't just tools ‚Äì it's a <strong>compounding feedback loop</strong>. Every action levels you up, makes the next step easier. You evolve.",
    cyberVibe2: "<FaGithub class='inline mr-1 text-gray-400 align-baseline'/> is your <strong>cyberchest</strong>. This Studio + AI? Your interface to <strong>remix and transmute</strong> that knowledge into new vibes, features, fixes... <strong>instantly</strong>.",
    cyberVibe3: "You're not <em>learning</em> code; you're <strong>remixing the matrix</strong>. You interact, you understand structure, you <strong>command the AI</strong>. You're the Vibe Master.",
    cyberVibe4: "It's <strong>co-creation</strong> with the machine. Push boundaries. Earn bandwidth. Infinite context. Infinite power. This is <strong>CYBERVIBE 2.0</strong>.",
    communityWisdomTitle: "Community Wisdom <FaUsers/>",
    quote1: "Sam Altman on the dream: 'Getting the whole app after a prompt.' That's what we're building. Full app from a thought. <a href='https://youtube.com/clip/Ugkx1LAX6-gO4J8hC6HoHbg0_KMlBHcsKX3V' target='_blank' class='text-brand-blue hover:underline font-semibold'>(Clip <FaArrowUpRightFromSquare class='inline h-3 w-3 ml-px align-baseline'/>)</a>",
    quote2: "Vibecoding? 'Yeah, he does.' From video idea to gamified app. Turning vision into interactive reality. <a href='https://youtube.com/clip/UgkxZVMHbEo2XwO-sayoxskH89zzrDdN6vsx' target='_blank' class='text-brand-blue hover:underline font-semibold'>(Clip <FaArrowUpRightFromSquare class='inline h-3 w-3 ml-px align-baseline'/>)</a>",
    quote3: "Monetization: 'Sell outcomes, not just pickaxes.' Automated, 10x cheaper solutions. That's the real product. <a href='https://youtube.com/clip/UgkxvGYsRm3HezCgOyqszCbn5DfDDx7LixPE' target='_blank' class='text-brand-blue hover:underline font-semibold'>(Clip <FaArrowUpRightFromSquare class='inline h-3 w-3 ml-px align-baseline'/>)</a>",
    ctaHotChickQuote: "Got the fire? Let's build something epic. Hit me up <strong>@SALAVEY13</strong> NOW!",
    philosophyTitle: "Your Vibe Path: Level Up & the Autonomy Slider (Andrej Karpathy + Salavey13)",
    philosophyVideoTitle: "üé• Watch: Vibe Level System (Salavey13) + Karpathy's 'Software is Changing (Again)'",
    philosophyCore: `
<strong>Andrej Karpathy</strong> calls it the "automation slider": from full human control to full agent autonomy. <br/>
<strong>CyberVibe Studio</strong> lets you move the slider yourself‚Äîstep-by-step, never forced, always in the loop.<br/>
Each level = more AI power, more trust, more speed. Verification gets easier. You learn to <em>orchestrate</em> the bots, not just prompt them.<br/>
<b>This is how you become Iron Man, not just a passenger.</b>
`,
    philosophyLvl0_1: `
<div style="background:#f8fafc;color:#0f172a;padding:12px 16px;border-radius:12px;margin-bottom:8px;">
<b>Lv.0 ‚Üí 1 <FaBolt className="inline text-yellow-500" /> (Full Auto, "One-Click Fix")</b><br/>
<span>
üü¢ <b>Automation Slider:</b> <span style="color:#0ea5e9;">100% agent</span> <span style="color:#64748b;">‚Üí</span> <span style="color:#0ea5e9;">0% human</span><br/>
Broken image? Paste link ‚Üí Upload replacement. <b>PR is auto-created.</b> You simply review & merge.<br/>
<i>Karpathy: ‚ÄúLet the agent do it, but keep it small, safe, and auditable.‚Äù</i>
</span>
</div>
`,
    philosophyLvl1_2: `
<div style="background:#e0e7ef;color:#0f172a;padding:12px 16px;border-radius:12px;margin-bottom:8px;">
<b>Lv.1 ‚Üí 2 <FaToolbox className="inline text-blue-600" /> (Prompt+File, "Vibe Request")</b><br/>
üü¢ <b>Automation Slider:</b> <span style="color:#0ea5e9;">80% agent</span> <span style="color:#64748b;">‚Üí</span> <span style="color:#0ea5e9;">20% human</span><br/>
Describe a tiny change (text/button) + pick 1 file. AI does the work, you check the diff.<br/>
<i>Partial autonomy: You‚Äôre the final editor.</i>
</div>
`,
    philosophyLvl2_3: `
<div style="background:#f1f5f9;color:#0f172a;padding:12px 16px;border-radius:12px;margin-bottom:8px;">
<b>Lv.2 ‚Üí 3 <FaCode className="inline text-pink-600" /> (Multi-File, "Prompt Orchestra")</b><br/>
üü¢ <b>Automation Slider:</b> <span style="color:#0ea5e9;">60% agent</span> <span style="color:#64748b;">‚Üí</span> <span style="color:#0ea5e9;">40% human</span><br/>
Bigger refactor? Select 2-5 files, describe the change, AI proposes, you verify and merge.<br/>
<i>Human-in-the-loop, but AI does the heavy lifting.</i>
</div>
`,
    philosophyLvl3_4: `
<div style="background:#f8fafc;color:#0f172a;padding:12px 16px;border-radius:12px;margin-bottom:8px;">
<b>Lv.3 ‚Üí 4 <FaBug className="inline text-red-600" /> (Debug/Logs, "AI as Rubber Duck")</b><br/>
üü¢ <b>Automation Slider:</b> <span style="color:#0ea5e9;">50% agent</span> <span style="color:#64748b;">‚Üí</span> <span style="color:#0ea5e9;">50% human</span><br/>
Build fails? Copy error/log, feed it with code to AI. AI suggests fix, you approve.<br/>
<i>Trust grows as verification gets easier.</i>
</div>
`,
    philosophyLvl4_5: `
<div style="background:#e0e7ef;color:#0f172a;padding:12px 16px;border-radius:12px;margin-bottom:8px;">
<b>Lv.4 ‚Üí 5 <FaLink className="inline text-green-600" /> (Proactive / Icon Hunt)</b><br/>
üü¢ <b>Automation Slider:</b> <span style="color:#0ea5e9;">40% agent</span> <span style="color:#64748b;">‚Üí</span> <span style="color:#0ea5e9;">60% human</span><br/>
You teach the agent new tricks: find icons, fix warnings, hunt for issues before they break things.<br/>
<i>You and the AI start to co-pilot.</i>
</div>
`,
    philosophyLvl5_6: `
<div style="background:#f1f5f9;color:#0f172a;padding:12px 16px;border-radius:12px;margin-bottom:8px;">
<b>Lv.5 ‚Üí 6 <FaMicrophone className="inline text-fuchsia-600" />/<FaVideo className="inline text-blue-400" /> (Multimodal Inputs)</b><br/>
üü¢ <b>Automation Slider:</b> <span style="color:#0ea5e9;">Variable</span>: Audio, video, images, text ‚Äî AI can handle all, you pick what feels best.<br/>
<i>Full spectrum orchestration.</i>
</div>
`,
    philosophyLvl6_7: `
<div style="background:#f8fafc;color:#0f172a;padding:12px 16px;border-radius:12px;margin-bottom:8px;">
<b>Lv.6 ‚Üí 7 <FaDatabase className="inline text-cyan-600" /> (Data/SQL, "AI DB Assistant")</b><br/>
üü¢ <b>Automation Slider:</b> <span style="color:#0ea5e9;">50% agent</span> <span style="color:#64748b;">‚Üí</span> <span style="color:#0ea5e9;">50% human</span><br/>
Let AI generate SQL, migrations, or data scripts. You check logic, paste where needed, or let it update your DB code.<br/>
<i>The agent can propose, but only you approve the merge!</i>
</div>
`,
    philosophyLvl8_10: `
<div style="background:#e0e7ef;color:#0f172a;padding:12px 16px;border-radius:12px;margin-bottom:8px;">
<b>Lv.8-10+ <FaServer className="inline text-green-700" />/<FaRocket className="inline text-orange-500" /> (Independence, "Your Own Stack")</b><br/>
üü¢ <b>Automation Slider:</b> <span style="color:#0ea5e9;">70% agent</span> <span style="color:#64748b;">‚Üí</span> <span style="color:#0ea5e9;">30% human</span><br/>
Deploy your own CyberVibe. Plug in your own API keys, bot tokens, custom XTRs. Run the full workflow‚Äîagent proposes, you verify, system can even auto-merge with your blessing.<br/>
<i>You‚Äôre running your own AI-powered studio, but still in control.</i>
</div>
`,
    philosophyLvl11: `
<div style="background:#f1f5f9;color:#0f172a;padding:12px 16px;border-radius:12px;margin-bottom:8px;">
<b>Lv.11 <FaMagnifyingGlass className="inline text-yellow-600" /> (Code Scanner)</b><br/>
üü¢ <b>Automation Slider:</b> <span style="color:#0ea5e9;">60% agent</span> <span style="color:#64748b;">‚Üí</span> <span style="color:#0ea5e9;">40% human</span><br/>
You see like the agent: instant find missing imports, typos, logic bugs. Human and agent both on audit, visual and code diff.<br/>
<i>Visual GUI + AI: Karpathy‚Äôs dream realized.</i>
</div>
`,
    philosophyLvl12: `
<div style="background:#18181b;color:#f1f5f9;padding:12px 16px;border-radius:12px;margin-bottom:8px;">
<b>Lv.12 <FaMemory className="inline text-purple-400" /> (Context Commander)</b><br/>
üü¢ <b>Automation Slider:</b> <span style="color:#0ea5e9;">Variable ‚Äì max context</span><br/>
AI can handle massive context windows (65k+ tokens). You steer high-level refactors, agent keeps context, you keep vision.<br/>
<i>Symbiosis: context, code, and intent are orchestrated by both sides.</i>
</div>
`,
    philosophyLvl13: `
<div style="background:#e0e7ef;color:#0f172a;padding:12px 16px;border-radius:12px;margin-bottom:8px;">
<b>Lv.13 <FaKeyboard className="inline text-pink-400" /> (Vibe Channeler)</b><br/>
üü¢ <b>Automation Slider:</b> <span style="color:#0ea5e9;">Variable ‚Äì deep prompt engineering</span><br/>
You write, dictate, or vibe prompts at pro level. AI listens, proposes, you review, merge. Workflow is flow, not friction.<br/>
<i>Your brain, AI‚Äôs hands‚Äîthe slider is wherever you want.</i>
</div>
`,
    philosophyLvl14: `
<div style="background:#f8fafc;color:#0f172a;padding:12px 16px;border-radius:12px;margin-bottom:8px;">
<b>Lv.14 <FaBriefcase className="inline text-cyan-700" /> (Efficiency Ninja)</b><br/>
üü¢ <b>Automation Slider:</b> <span style="color:#0ea5e9;">Variable ‚Äì multi-task orchestration</span><br/>
You batch small and big tasks in one AI run. Agent proposes, you verify, ship in record time.<br/>
<i>Ultimate synthesis of batching, review, and automation.</i>
</div>
`,
    philosophyLvl15: `
<div style="background:#262833;color:#f1f5f9;padding:12px 16px;border-radius:12px;margin-bottom:8px;">
<b>Lv.15 <FaMagnifyingGlassChart className="inline text-yellow-400" />/<FaBrain className="inline text-green-400" /> (Log Whisperer, AI Auditor)</b><br/>
üü¢ <b>Automation Slider:</b> <span style="color:#0ea5e9;">Variable ‚Äì AI audits reality</span><br/>
You and the AI don‚Äôt just read logs, you interrogate them. See the gap between plan and reality, root causes pop out.<br/>
<i>Ultimate human+agent audit loop.</i>
</div>
`,
    philosophyEnd: `
<div style="background:#fff;color:#0f172a;padding:14px 18px;border-radius:16px;margin-top:18px;font-weight:bold;">
Every level = one more notch on your <b>automation slider</b>.<br/>
Start with full auto (even auto-merge via GitHub Actions ü§ñ), then add more human review and orchestration as you grow.<br/>
<b>Karpathy + CyberVibe: The future is not "full agent" or "full human"‚Äîit's <span style="color:#22c55e">collab, audit, remix, and always leveling up.</span></b>
<br/>
<span style="color:#f59e42;">Watch <a href="#philosophy-steps" class="underline">Salavey13‚Äôs explainer</a> and <a href="https://m.youtube.com/watch?v=LCEmiRjPEtQ" target="_blank" class="underline">Andrej Karpathy‚Äôs ‚ÄúSoftware is Changing (Again)‚Äù</a> back-to-back. You‚Äôre living the future!</span>
</div>
`,
    stepsTitle: "–ö—Ä–∞—Ç–∫–∏–π –ì–∞–π–¥:",
    step1Title: "1. –•–≤–∞—Ç–∞–π –†–µ–ø—É / –£–∫–∞–∂–∏ –ñ–µ–ª–∞–Ω–∏–µ:",
    step1Desc: "–í–≤–µ–¥–∏ GitHub URL -> –ñ–º–∏ <FaDownload class='inline mx-1 text-purple-400 align-baseline'/> OR Spot bug/idea -> Activate Buddy <FaRobot class='inline mx-1 text-indigo-400 align-baseline'/> -> Describe.",
    step1DescEnd: "–î–ª—è –∫–∞—Ä—Ç–∏–Ω–æ–∫ (–õ–≤.1): Copy broken URL, paste in Buddy/Input.",
    step2Title: "2. AI –ú–∞–≥–∏—è & Ship:",
    step2Desc: "If needed (Lv.2+), use <span class='text-blue-400 font-semibold'>\"ü§ñ –°–ø—Ä–æ—Å–∏—Ç—å AI\"</span> -> Check Assistant <FaWandMagicSparkles class='inline mx-1 text-yellow-400 align-baseline'/> -> Hit <FaGithub class='inline mx-1 text-green-400 align-baseline'/> PR Button.",
    step2DescEnd: "<strong>DONE.</strong> Site updates automagically.",
    readyButton: "LET'S F*CKING GO!",
    componentsTitle: "–í—Ä—É–±–∞–π –î–≤–∏–∂–∫–∏ –í–∞–π–±–∞!",
    ctaTitle: "Ready to Level Up, {USERNAME}?",
    ctaDesc: "Seriously. Stop doubting. Start <strong>DOING</strong>. That first level is calling. Level up NOW!",
    ctaHotChick: "Got the fire? Let's build something epic. Hit me up <strong>@SALAVEY13</strong> NOW!",
    ctaDude: "(Everyone else? Just f*cking try it. Level 1 is a button click away. You got this!)",
    navGrabber: "Grabber <FaDownload/>",
    navAssistant: "Assistant <FaRobot/>",
    navIntro: "Intro <FaCircleInfo/>",
    navCyberVibe: "Vibe Loop <FaUpLong/>",
    collapseAll: "Collapse All Sections",
    expandAll: "Expand All Sections",
  },
  ru: {
    loading: "–ó–∞–ø—É—Å–∫ SUPERVIBE –î–í–ò–ñ–ö–ê...",
    pageTitle: "SUPERVIBE –°–¢–£–î–ò–Ø 2.0",
    welcome: "–ô–æ—É,",
    intro1: "–ö–æ–¥ –ø—É–≥–∞–µ—Ç? –ó–∞–±—É–¥—å! –≠—Ç–æ <strong>–°–ï–ô–ß–ê–°</strong>. –¢–≤–æ–π –ª–∏—á–Ω—ã–π <strong>dev-—É—Å–∫–æ—Ä–∏—Ç–µ–ª—å</strong>. –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π Level UP!",
    intro2: "–î—É–º–∞–π: –í–æ–ª—à–µ–±–Ω–∞—è –ü–µ—Å–æ—á–Ω–∏—Ü–∞. –ï—Å—Ç—å –∏–¥–µ–∏? –ì–æ–≤–æ—Ä–∏. AI —Å—Ç—Ä–æ–∏—Ç, —Å–∏—Å—Ç–µ–º–∞ —á–µ–∫–∞–µ—Ç, PR —É–ª–µ—Ç–∞–µ—Ç. <strong>–ë—É–º.</strong> –¢—ã —Ä—É–ª–∏—à—å –ø—Ä–æ—Ü–µ—Å—Å–æ–º.",
    intro3: "–•–≤–∞—Ç–∏—Ç –ø–æ—Ç—Ä–µ–±–ª—è—Ç—å, —Å—Ç–∞–Ω—å <strong>–¢–í–û–†–¶–û–ú</strong>. –°—Ç—Ä–æ–π –°–í–û–Æ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å, —Ä–µ—à–∞–π –°–í–û–ò –ø—Ä–æ–±–ª–µ–º—ã, <strong>–≤–∞–ª–∏–¥–∏—Ä—É–π –∏–¥–µ–∏ –ú–ì–ù–û–í–ï–ù–ù–û</strong>. –í–æ—Ç —ç—Ç–æ –≤–∞–π–±.",
    cyberVibeTitle: "–ü–µ—Ç–ª—è –í–∞–π–±–∞: –¢–≤–æ–π –î–≤–∏–∂–æ–∫ –ü—Ä–æ–∫–∞—á–∫–∏ <FaUpLong/>",
    cyberVibe1: "–≠—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç—É–ª–∑—ã ‚Äì —ç—Ç–æ <strong>–Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ç–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏</strong>. –ö–∞–∂–¥–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –∫–∞—á–∞–µ—Ç —Ç–µ–±—è, –¥–µ–ª–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –ª–µ–≥—á–µ. –¢—ã —ç–≤–æ–ª—é—Ü–∏–æ–Ω–∏—Ä—É–µ—à—å.",
    cyberVibe2: "<FaGithub class='inline mr-1 text-gray-400 align-baseline'/> - —Ç–≤–æ–π <strong>–∫–∏–±–µ—Ä-—Å—É–Ω–¥—É–∫</strong>. –≠—Ç–∞ –°—Ç—É–¥–∏—è + AI? –¢–≤–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è <strong>—Ä–µ–º–∏–∫—Å–∞ –∏ —Ç—Ä–∞–Ω—Å–º—É—Ç–∞—Ü–∏–∏</strong> —ç—Ç–∏—Ö –∑–Ω–∞–Ω–∏–π –≤ –Ω–æ–≤—ã–µ –≤–∞–π–±—ã, —Ñ–∏—á–∏, —Ñ–∏–∫—Å—ã... <strong>–º–≥–Ω–æ–≤–µ–Ω–Ω–æ</strong>.",
    cyberVibe3: "–¢—ã –Ω–µ <em>—É—á–∏—à—å</em> –∫–æ–¥; —Ç—ã <strong>—Ä–µ–º–∏–∫—Å—É–µ—à—å –º–∞—Ç—Ä–∏—Ü—É</strong>. –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–µ—à—å, –ø–æ–Ω–∏–º–∞–µ—à—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É, <strong>–∫–æ–º–∞–Ω–¥—É–µ—à—å AI</strong>. –¢—ã - –í–∞–π–± –ú–∞—Å—Ç–µ—Ä.",
    cyberVibe4: "–≠—Ç–æ <strong>—Å–æ-—Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ</strong> —Å –º–∞—à–∏–Ω–æ–π. –î–≤–∏–≥–∞–π –≥—Ä–∞–Ω–∏—Ü—ã. –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π bandwidth. –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç. –ë–µ—Å–∫–æ–Ω–µ—á–Ω–∞—è –º–æ—â—å. –≠—Ç–æ <strong>CYBERVIBE 2.0</strong>.",
    communityWisdomTitle: "–ú—É–¥—Ä–æ—Å—Ç—å –°–æ–æ–±—â–µ—Å—Ç–≤–∞ <FaUsers/>",
    quote1: "–°—ç–º –ê–ª—å—Ç–º–∞–Ω –æ –º–µ—á—Ç–µ: '–ü–æ–ª—É—á–∏—Ç—å —Ü–µ–ª–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ –ø—Ä–æ–º–ø—Ç–∞.' –≠—Ç–æ —Ç–æ, —á—Ç–æ –º—ã —Å—Ç—Ä–æ–∏–º. –¶–µ–ª–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–∑ –º—ã—Å–ª–∏. <a href='https://youtube.com/clip/Ugkx1LAX6-gO4J8hC6HoHbg0_KMlBHcsKX3V' target='_blank' class='text-brand-blue hover:underline font-semibold'>(–ê–ª—å—Ç–º–∞–Ω —á—É—Ö–∞–µ—Ç —Ñ–∏—à–∫—É <FaArrowUpRightFromSquare class='inline h-3 w-3 ml-px align-baseline'/>)</a>",
    quote2: "–í–∞–π–±–∫–æ–¥–∏–Ω–≥? '–ê–≥–∞, –æ–Ω –º–æ–≥—ë—Ç.' –û—Ç –∏–¥–µ–∏ –≤–∏–¥–µ–æ –¥–æ –≥–µ–π–º–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –ü—Ä–µ–≤—Ä–∞—â–µ–Ω–∏–µ –≤–∏–¥–µ–Ω–∏—è –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å. <a href='https://youtube.com/clip/UgkxZVMHbEo2XwO-sayoxskH89zzrDdN6vsx' target='_blank' class='text-brand-blue hover:underline font-semibold'>(I do vibe <FaArrowUpRightFromSquare class='inline h-3 w-3 ml-px align-baseline'/>)</a>",
    quote3: "–ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è: '–ü—Ä–æ–¥–∞–≤–∞–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ –∫–∏—Ä–∫–∏.' –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ, –≤ 10 —Ä–∞–∑ –¥–µ—à–µ–≤–ª–µ —Ä–µ—à–µ–Ω–∏—è. –í–æ—Ç –Ω–∞—Å—Ç–æ—è—â–∏–π –ø—Ä–æ–¥—É–∫—Ç. <a href='https://youtube.com/clip/UgkxvGYsRm3HezCgOyqszCbn5DfDDx7LixPE' target='_blank' class='text-brand-blue hover:underline font-semibold'>('Fucking ez' <FaArrowUpRightFromSquare class='inline h-3 w-3 ml-px align-baseline'/>)</a>",
    ctaHotChickQuote: "–ï—Å—Ç—å –∏—Å–∫—Ä–∞? –î–∞–≤–∞–π –∑–∞–º—É—Ç–∏–º —á—Ç–æ-—Ç–æ —ç–ø–∏—á–Ω–æ–µ. –ü–∏—à–∏ <strong>@SALAVEY13</strong> –°–ï–ô–ß–ê–°!",
    philosophyTitle: "–¢–≤–æ–π –ø—É—Ç—å –≤–∞–π–±–∞: –ê–≤—Ç–æ–Ω–æ–º–∏—è –∏ —Å–ª–∞–π–¥–µ—Ä –ö–∞—Ä–ø–∞—Ç–∏ (Karpathy + Salavey13)",
    philosophyVideoTitle: "üé• –°–º–æ—Ç—Ä–∏: –£—Ä–æ–≤–Ω–µ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ (Salavey13) + –ö–∞—Ä–ø–∞—Ç–∏ ¬´Software is Changing (Again)¬ª",
    philosophyCore: `
<strong>Andrej Karpathy</strong> –Ω–∞–∑—ã–≤–∞–µ—Ç —ç—Ç–æ "—Å–ª–∞–π–¥–µ—Ä–æ–º –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏": –æ—Ç –ø–æ–ª–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è —á–µ–ª–æ–≤–µ–∫–∞ –¥–æ –ø–æ–ª–Ω–æ–π –∞–≤—Ç–æ–Ω–æ–º–∏–∏ –∞–≥–µ–Ω—Ç–∞.<br/>
<strong>CyberVibe Studio</strong> –¥–∞—ë—Ç —Ç–µ–±–µ —ç—Ç–æ—Ç —Å–ª–∞–π–¥–µ—Ä –≤ —Ä—É–∫–∏ ‚Äî —à–∞–≥ –∑–∞ —à–∞–≥–æ–º, –±–µ–∑ –ø—Ä–∏–Ω—É–∂–¥–µ–Ω–∏—è, –≤—Å–µ–≥–¥–∞ —Å —Ç–æ–±–æ–π –≤ –ø–µ—Ç–ª–µ.<br/>
–ö–∞–∂–¥—ã–π –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å ‚Äî —ç—Ç–æ –±–æ–ª—å—à–µ AI, –±–æ–ª—å—à–µ –¥–æ–≤–µ—Ä–∏—è, –±–æ–ª—å—à–µ —Å–∫–æ—Ä–æ—Å—Ç–∏. –¢—ã —É—á–∏—à—å—Å—è –Ω–µ —Ç–æ–ª—å–∫–æ –ø—Ä–æ–º–ø—Ç–∏—Ç—å, –∞ <em>–æ—Ä–∫–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å</em> –∞–≥–µ–Ω—Ç–æ–≤.<br/>
<b>–¢–∞–∫ —Ç—ã —Å—Ç–∞–Ω–æ–≤–∏—à—å—Å—è –Ω–µ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–º, –∞ –ø–∏–ª–æ—Ç–æ–º –≤ Iron Man suit.</b>
`,
    philosophyLvl0_1: `
<div style="background:#18181b;color:#f1f5f9;padding:12px 16px;border-radius:12px;margin-bottom:8px;">
<b>–õ–≤.0 ‚Üí 1 <FaBolt className="inline text-yellow-400" /> (–ü–æ–ª–Ω—ã–π –∞–≤—Ç–æ–º–∞—Ç, "–û–¥–∏–Ω –∫–ª–∏–∫ ‚Äî —Ñ–∏–∫—Å")</b><br/>
üü¢ <b>–°–ª–∞–π–¥–µ—Ä:</b> <span style="color:#22d3ee;">100% –∞–≥–µ–Ω—Ç</span> <span style="color:#64748b;">‚Üí</span> <span style="color:#22d3ee;">0% —á–µ–ª–æ–≤–µ–∫</span><br/>
–ë–∏—Ç–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞? –í—Å—Ç–∞–≤—å —Å—Å—ã–ª–∫—É ‚Äî –∑–∞–≥—Ä—É–∑–∏ –∑–∞–º–µ–Ω—É. <b>PR ‚Äî —Å–∞–º–æ—Å–æ–∑–¥–∞–Ω.</b> –¢—ã –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ—à—å.<br/>
<i>–ö–∞—Ä–ø–∞—Ç–∏: ‚Äú–î–∞–π –∞–≥–µ–Ω—Ç—É –¥–µ–ª–∞—Ç—å –ø—Ä–æ—Å—Ç–æ–µ, –Ω–æ –≤—Å—ë –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º –∏ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ.‚Äù</i>
</div>
`,
    philosophyLvl1_2: `
<div style="background:#262833;color:#f1f5f9;padding:12px 16px;border-radius:12px;margin-bottom:8px;">
<b>–õ–≤.1 ‚Üí 2 <FaToolbox className="inline text-blue-400" /> (–ü—Ä–æ–º–ø—Ç + –§–∞–π–ª, "–í–∞–π–±-–∑–∞–ø—Ä–æ—Å")</b><br/>
üü¢ <b>–°–ª–∞–π–¥–µ—Ä:</b> <span style="color:#22d3ee;">80% –∞–≥–µ–Ω—Ç</span> <span style="color:#64748b;">‚Üí</span> <span style="color:#22d3ee;">20% —á–µ–ª–æ–≤–µ–∫</span><br/>
–ü–∏—à–∏ –∏–¥–µ—é –¥–ª—è –ø—Ä–∞–≤–∫–∏ + –≤—ã–±–µ—Ä–∏ 1 —Ñ–∞–π–ª. AI –¥–µ–ª–∞–µ—Ç, —Ç—ã —É—Ç–≤–µ—Ä–∂–¥–∞–µ—à—å.<br/>
<i>–ß–∞—Å—Ç–∏—á–Ω–∞—è –∞–≤—Ç–æ–Ω–æ–º–∏—è: —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–ª–æ–≤–æ –∑–∞ —Ç–æ–±–æ–π.</i>
</div>
`,
    philosophyLvl2_3: `
<div style="background:#18181b;color:#f1f5f9;padding:12px 16px;border-radius:12px;margin-bottom:8px;">
<b>–õ–≤.2 ‚Üí 3 <FaCode className="inline text-pink-400" /> (–ú—É–ª—å—Ç–∏-—Ñ–∞–π–ª, "–û—Ä–∫–µ—Å—Ç—Ä –ø—Ä–æ–º–ø—Ç–æ–≤")</b><br/>
üü¢ <b>–°–ª–∞–π–¥–µ—Ä:</b> <span style="color:#22d3ee;">60% –∞–≥–µ–Ω—Ç</span> <span style="color:#64748b;">‚Üí</span> <span style="color:#22d3ee;">40% —á–µ–ª–æ–≤–µ–∫</span><br/>
–†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥? 2-5 —Ñ–∞–π–ª–æ–≤, —Ç–≤–æ–π –ø—Ä–æ–º–ø—Ç, AI –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç, —Ç—ã –ø—Ä–æ–≤–µ—Ä—è–µ—à—å.<br/>
<i>AI –±–µ—Ä–µ—Ç –Ω–∞ —Å–µ–±—è —Ä—É—Ç–∏–Ω—É, —Ç—ã –¥–µ—Ä–∂–∏—à—å —Ä—É–∫—É –Ω–∞ –ø—É–ª—å—Å–µ.</i>
</div>
`,
    philosophyLvl3_4: `
<div style="background:#262833;color:#f1f5f9;padding:12px 16px;border-radius:12px;margin-bottom:8px;">
<b>–õ–≤.3 ‚Üí 4 <FaBug className="inline text-red-400" /> (–î–µ–±–∞–≥/–ª–æ–≥–∏, "AI ‚Äî —Ç–≤–æ—è —É—Ç–æ—á–∫–∞")</b><br/>
üü¢ <b>–°–ª–∞–π–¥–µ—Ä:</b> <span style="color:#22d3ee;">50% –∞–≥–µ–Ω—Ç</span> <span style="color:#64748b;">‚Üí</span> <span style="color:#22d3ee;">50% —á–µ–ª–æ–≤–µ–∫</span><br/>
–ü–∞–¥–µ–Ω–∏–µ –±–∏–ª–¥–∞? –ö–æ–ø–∏—Ä—É–π –æ—à–∏–±–∫—É, –∫–∏–¥–∞–π –ª–æ–≥–∏ –≤ AI. AI –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Ñ–∏–∫—Å, —Ç—ã —Ñ–∏–Ω–∞–ª–∏—à—å.<br/>
<i>–° –∫–∞–∂–¥—ã–º —Ü–∏–∫–ª–æ–º –¥–æ–≤–µ—Ä–∏–µ —Ä–∞—Å—Ç—ë—Ç.</i>
</div>
`,
    philosophyLvl4_5: `
<div style="background:#18181b;color:#f1f5f9;padding:12px 16px;border-radius:12px;margin-bottom:8px;">
<b>–õ–≤.4 ‚Üí 5 <FaLink className="inline text-green-400" /> (–ü—Ä–æ–∞–∫—Ç–∏–≤–Ω–æ/–û—Ö–æ—Ç–∞ –∑–∞ –∏–∫–æ–Ω–∫–∞–º–∏)</b><br/>
üü¢ <b>–°–ª–∞–π–¥–µ—Ä:</b> <span style="color:#22d3ee;">40% –∞–≥–µ–Ω—Ç</span> <span style="color:#64748b;">‚Üí</span> <span style="color:#22d3ee;">60% —á–µ–ª–æ–≤–µ–∫</span><br/>
–¢—ã —Å–∞–º —É—á–∏—à—å –∞–≥–µ–Ω—Ç–∞: –∏—â–µ—à—å –∏–∫–æ–Ω–∫–∏, –ª–æ–≤–∏—à—å –±–∞–≥–∏ –¥–æ —Ç–æ–≥–æ, –∫–∞–∫ –æ–Ω–∏ –∞—É–∫–Ω—É—Ç—Å—è. <br/>
<i>AI ‚Äî —Ç–≤–æ–π –∫–æ-–ø–∏–ª–æ—Ç, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å.</i>
</div>
`,
    philosophyLvl5_6: `
<div style="background:#262833;color:#f1f5f9;padding:12px 16px;border-radius:12px;margin-bottom:8px;">
<b>–õ–≤.5 ‚Üí 6 <FaMicrophone className="inline text-fuchsia-400" />/<FaVideo className="inline text-blue-400" /> (–ú—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω—ã–µ –≤—Ö–æ–¥—ã)</b><br/>
üü¢ <b>–°–ª–∞–π–¥–µ—Ä:</b> <span style="color:#22d3ee;">–í–∞—Ä–∏–∞—Ç–∏–≤–Ω–æ</span>: –∞—É–¥–∏–æ, –≤–∏–¥–µ–æ, –∫–∞—Ä—Ç–∏–Ω–∫–∏, —Ç–µ–∫—Å—Ç ‚Äî AI —Å–ø—Ä–∞–≤–∏—Ç—Å—è, —Ç—ã –≤—ã–±–∏—Ä–∞–µ—à—å –∫–∞–Ω–∞–ª.<br/>
<i>–û—Ä–∫–µ—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –º–∞–∫—Å–∏–º–∞–ª–∫–∞—Ö.</i>
</div>
`,
    philosophyLvl6_7: `
<div style="background:#18181b;color:#f1f5f9;padding:12px 16px;border-radius:12px;margin-bottom:8px;">
<b>–õ–≤.6 ‚Üí 7 <FaDatabase className="inline text-cyan-300" /> (–î–∞–Ω–Ω—ã–µ/SQL)</b><br/>
üü¢ <b>–°–ª–∞–π–¥–µ—Ä:</b> <span style="color:#22d3ee;">50% –∞–≥–µ–Ω—Ç</span> <span style="color:#64748b;">‚Üí</span> <span style="color:#22d3ee;">50% —á–µ–ª–æ–≤–µ–∫</span><br/>
AI –≥–µ–Ω–µ—Ä–∏—Ç SQL, –º–∏–≥—Ä–∞—Ü–∏–∏, —Å–∫—Ä–∏–ø—Ç—ã. –¢—ã –ø—Ä–æ–≤–µ—Ä—è–µ—à—å –∏ –ø—Ä–∏–º–µ–Ω—è–µ—à—å. –ê–≥–µ–Ω—Ç –º–æ–∂–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å, –Ω–æ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ ‚Äî –∑–∞ —Ç–æ–±–æ–π!
</div>
`,
    philosophyLvl8_10: `
<div style="background:#262833;color:#f1f5f9;padding:12px 16px;border-radius:12px;margin-bottom:8px;">
<b>–õ–≤.8-10+ <FaServer className="inline text-green-400" />/<FaRocket className="inline text-orange-400" /> (–°–≤–æ—è —Å—Ç—É–¥–∏—è, "Full Stack")</b><br/>
üü¢ <b>–°–ª–∞–π–¥–µ—Ä:</b> <span style="color:#22d3ee;">70% –∞–≥–µ–Ω—Ç</span> <span style="color:#64748b;">‚Üí</span> <span style="color:#22d3ee;">30% —á–µ–ª–æ–≤–µ–∫</span><br/>
–†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ—à—å —Å–≤–æ–π CyberVibe. –ö–∞—Å—Ç–æ–º–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã, –∫–ª—é—á–∏, –ø–ª–∞–≥–∏–Ω—ã. –ê–≥–µ–Ω—Ç –º–æ–∂–µ—Ç –¥–µ–ª–∞—Ç—å –≤—Å—ë ‚Äî –¥–∞–∂–µ –∞–≤—Ç–æ-–º–µ—Ä–∂–∏—Ç—å —á–µ—Ä–µ–∑ GitHub Action ‚Äî –Ω–æ —Ç–≤–æ–π –∫–æ–Ω—Ç—Ä–æ–ª—å –≤—Å–µ–≥–¥–∞ –≤—ã—à–µ!
</div>
`,
    philosophyLvl11: `
<div style="background:#f8fafc;color:#0f172a;padding:12px 16px;border-radius:12px;margin-bottom:8px;">
<b>–õ–≤.11 <FaMagnifyingGlass className="inline text-yellow-500" /> (–°–∫–∞–Ω–µ—Ä –∫–æ–¥–∞)</b><br/>
üü¢ <b>–°–ª–∞–π–¥–µ—Ä:</b> <span style="color:#22d3ee;">60% –∞–≥–µ–Ω—Ç</span> <span style="color:#64748b;">‚Üí</span> <span style="color:#22d3ee;">40% —á–µ–ª–æ–≤–µ–∫</span><br/>
–í–∏–¥–∏—à—å –∫–∞–∫ –∞–≥–µ–Ω—Ç: –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ –ª–æ–≤–∏—à—å –æ—à–∏–±–∫–∏, –∏–º–ø–æ—Ä—Ç—ã, –±–∞–≥–∏. –ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –¥–∏—Ñ—Ñ—ã –∏ AI ‚Äî –º–µ—á—Ç–∞ –ö–∞—Ä–ø–∞—Ç–∏ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞!
</div>
`,
    philosophyLvl12: `
<div style="background:#18181b;color:#f1f5f9;padding:12px 16px;border-radius:12px;margin-bottom:8px;">
<b>–õ–≤.12 <FaMemory className="inline text-purple-400" /> (–ö–æ–º–∞–Ω–¥–∏—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞)</b><br/>
üü¢ <b>–°–ª–∞–π–¥–µ—Ä:</b> <span style="color:#22d3ee;">–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç</span><br/>
AI –¥–µ—Ä–∂–∏—Ç —Ç—ã—Å—è—á–∏ —Å—Ç—Ä–æ–∫ –∫–æ–¥–∞ –≤ –ø–∞–º—è—Ç–∏. –¢—ã –∑–∞–¥–∞—ë—à—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –∞–≥–µ–Ω—Ç –ø–æ–º–æ–≥–∞–µ—Ç —Å–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π. –ß–∏—Å—Ç–∞—è —Å–∏–Ω–µ—Ä–≥–∏—è.
</div>
`,
    philosophyLvl13: `
<div style="background:#262833;color:#f1f5f9;padding:12px 16px;border-radius:12px;margin-bottom:8px;">
<b>–õ–≤.13 <FaKeyboard className="inline text-pink-400" /> (–ß–µ–Ω–Ω–µ–ª–µ—Ä –≤–∞–π–±–∞)</b><br/>
üü¢ <b>–°–ª–∞–π–¥–µ—Ä:</b> <span style="color:#22d3ee;">–ì–∏–±–∫–æ ‚Äî –≥–ª—É–±–æ–∫–∏–µ –ø—Ä–æ–º–ø—Ç—ã</span><br/>
–¢—ã –¥–∏–∫—Ç—É–µ—à—å –∏–ª–∏ –ø–∏—à–µ—à—å –ø—Ä–æ–º–ø—Ç—ã –∫–∞–∫ –ø—Ä–æ—Ñ–∏. AI —Å–ª—É—à–∞–µ—Ç, –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç, —Ç—ã –ø—Ä–æ–≤–µ—Ä—è–µ—à—å. –í—Å—ë –≤ –ø–æ—Ç–æ–∫–µ, –±–µ–∑ —Ñ—Ä–∏–∫—Ü–∏–π.
</div>
`,
    philosophyLvl14: `
<div style="background:#18181b;color:#f1f5f9;padding:12px 16px;border-radius:12px;margin-bottom:8px;">
<b>–õ–≤.14 <FaBriefcase className="inline text-cyan-300" /> (–ù–∏–Ω–¥–∑—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏)</b><br/>
üü¢ <b>–°–ª–∞–π–¥–µ—Ä:</b> <span style="color:#22d3ee;">–ì–∏–±–∫–æ ‚Äî –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–¥–∞—á</span><br/>
–ù–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–¥–∞—á –≤ –æ–¥–Ω–æ–º –∑–∞–ø—Ä–æ—Å–µ ‚Äî –∞–≥–µ–Ω—Ç –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—Å—ë —Å—Ä–∞–∑—É, —Ç—ã –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä—É–µ—à—å –∏ –ø—É—à–∏—à—å –∑–∞ —Ä–∞–∑.
</div>
`,
    philosophyLvl15: `
<div style="background:#262833;color:#f1f5f9;padding:12px 16px;border-radius:12px;margin-bottom:8px;">
<b>–õ–≤.15 <FaMagnifyingGlassChart className="inline text-yellow-400" />/<FaBrain className="inline text-green-400" /> (–õ–æ–≥-–í–∏—Å–ø–µ—Ä–µ—Ä, AI-–ê—É–¥–∏—Ç–æ—Ä)</b><br/>
üü¢ <b>–°–ª–∞–π–¥–µ—Ä:</b> <span style="color:#22d3ee;">AI –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å</span><br/>
–¢—ã –∏ AI –Ω–µ –ø—Ä–æ—Å—Ç–æ —á–∏—Ç–∞–µ—Ç–µ –ª–æ–≥–∏ ‚Äî –≤—ã –∏—Ö –¥–æ–ø—Ä–∞—à–∏–≤–∞–µ—Ç–µ. –†–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É –ø–ª–∞–Ω–æ–º –∏ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å—é –≤–∏–¥–Ω–æ —Å—Ä–∞–∑—É. –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –∞—É–¥–∏—Ç.
</div>
`,
    philosophyEnd: `
<div style="background:#18181b;color:#f1f5f9;padding:14px 18px;border-radius:16px;margin-top:18px;font-weight:bold;">
–ù–∞ –∫–∞–∂–¥–æ–º —É—Ä–æ–≤–Ω–µ —Ç—ã –¥–≤–∏–≥–∞–µ—à—å <b>—Å–ª–∞–π–¥–µ—Ä –∞–≤—Ç–æ–Ω–æ–º–∏–∏</b>.<br/>
–°–Ω–∞—á–∞–ª–∞ –≤—Å—ë –∞–≤—Ç–æ–º–∞—Ç–æ–º (–¥–∞–∂–µ –∞–≤—Ç–æ-–º–µ—Ä–∂ —á–µ—Ä–µ–∑ GitHub Actions ü§ñ), –ø–æ—Ç–æ–º –≤—Å—ë –±–æ–ª—å—à–µ –∫–æ–Ω—Ç—Ä–æ–ª—è –∏ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ü–∏–∏.<br/>
<b>–ö–∞—Ä–ø–∞—Ç–∏ + CyberVibe: –ë—É–¥—É—â–µ–µ ‚Äî –Ω–µ ‚Äú—Ç–æ–ª—å–∫–æ –∞–≥–µ–Ω—Ç‚Äù –∏–ª–∏ ‚Äú—Ç–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫‚Äù, –∞ <span style="color:#22c55e">—Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ, –∞—É–¥–∏—Ç, —Ä–µ–º–∏–∫—Å –∏ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π –ª–µ–≤–µ–ª-–∞–ø.</span></b>
<br/>
<span style="color:#f59e42;">–°–º–æ—Ç—Ä–∏ <a href="#philosophy-steps" class="underline">—Ä–∞–∑–±–æ—Ä —Å–∏—Å—Ç–µ–º—ã Salavey13</a> –∏ <a href="https://m.youtube.com/watch?v=LCEmiRjPEtQ" target="_blank" class="underline">–¥–æ–∫–ª–∞–¥ –ö–∞—Ä–ø–∞—Ç–∏ ‚ÄúSoftware is Changing (Again)‚Äù</a> ‚Äî —Ç—ã —É–∂–µ –∂–∏–≤—ë—à—å –≤ –±—É–¥—É—â–µ–º!</span>
</div>
`,
    stepsTitle: "–ö—Ä–∞—Ç–∫–∏–π –ì–∞–π–¥:",
    step1Title: "1. –•–≤–∞—Ç–∞–π –†–µ–ø—É / –£–∫–∞–∂–∏ –ñ–µ–ª–∞–Ω–∏–µ:",
    step1Desc: "–í–≤–µ–¥–∏ GitHub URL -> –ñ–º–∏ <FaDownload class='inline mx-1 text-purple-400 align-baseline'/> –ò–õ–ò –í–∏–¥–∏—à—å –±–∞–≥/–∏–¥–µ—é -> –í—ã–∑–æ–≤–∏ –ë–∞–¥–¥–∏ <FaRobot class='inline mx-1 text-indigo-400 align-baseline'/> -> –û–ø–∏—à–∏.",
    step1DescEnd: "–î–ª—è –∫–∞—Ä—Ç–∏–Ω–æ–∫ (–õ–≤.1): –°–∫–æ–ø–∏—Ä—É–π –±–∏—Ç—ã–π URL, –≤—Å—Ç–∞–≤—å –ë–∞–¥–¥–∏/–≤ –ò–Ω–ø—É—Ç.",
    step2Title: "2. AI –ú–∞–≥–∏—è & –û—Ç–ø—Ä–∞–≤–∫–∞:",
    step2Desc: "–ï—Å–ª–∏ –Ω—É–∂–Ω–æ (–õ–≤.2+), —é–∑–∞–π <span class='text-blue-400 font-semibold'>\"ü§ñ –°–ø—Ä–æ—Å–∏—Ç—å AI\"</span> -> –ü—Ä–æ–≤–µ—Ä—å –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ <FaWandMagicSparkles class='inline mx-1 text-yellow-400 align-baseline'/> -> –ñ–º–∏ <FaGithub class='inline mx-1 text-green-400 align-baseline'/> –ö–Ω–æ–ø–∫—É PR.",
    step2DescEnd: "<strong>–ì–û–¢–û–í–û.</strong> –°–∞–π—Ç –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ-–º–∞–≥–∏—á–µ—Å–∫–∏.",
    readyButton: "–ü–û–ì–ù–ê–õ–ò, –ë–õ*–¢–¨!",
    componentsTitle: "–í—Ä—É–±–∞–π –î–≤–∏–∂–∫–∏ –í–∞–π–±–∞!",
    ctaTitle: "–ì–æ—Ç–æ–≤(–∞) –ê–ø–Ω—É—Ç—å—Å—è, {USERNAME}?",
    ctaDesc: "–°–µ—Ä—å–µ–∑–Ω–æ. –•–≤–∞—Ç–∏—Ç —Å–æ–º–Ω–µ–≤–∞—Ç—å—Å—è. –ù–∞—á–Ω–∏ <strong>–î–ï–õ–ê–¢–¨</strong>. –ü–µ—Ä–≤—ã–π –ª–µ–≤–µ–ª –∑–æ–≤–µ—Ç. –ö–∞—á–∞–π—Å—è –°–ï–ô–ß–ê–°!",
    ctaHotChick: "–ï—Å—Ç—å –∏—Å–∫—Ä–∞? –î–∞–≤–∞–π –∑–∞–º—É—Ç–∏–º —á—Ç–æ-—Ç–æ —ç–ø–∏—á–Ω–æ–µ. –ü–∏—à–∏ <strong>@SALAVEY13</strong> –°–ï–ô–ß–ê–°!",
    ctaDude: "(–í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ? –ü—Ä–æ—Å—Ç–æ, –±–ª*—Ç—å, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ. –õ–µ–≤–µ–ª 1 - —ç—Ç–æ –∫–ª–∏–∫ –º—ã—à–∫–∏. –£ –≤–∞—Å –ø–æ–ª—É—á–∏—Ç—Å—è!)",
    navGrabber: "–ì—Ä–∞–±–±–µ—Ä <FaDownload/>",
    navAssistant: "–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç <FaRobot/>",
    navIntro: "–ò–Ω—Ç—Ä–æ <FaCircleInfo/>",
    navCyberVibe: "–ü–µ—Ç–ª—è –í–∞–π–±–∞ <FaUpLong/>",
    collapseAll: "–°–≤–µ—Ä–Ω—É—Ç—å –í—Å–µ –°–µ–∫—Ü–∏–∏",
    expandAll: "–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –í—Å–µ –°–µ–∫—Ü–∏–∏",
  }
};
// --- End I18N ---

// --- Fallback component for AutomationBuddy ---
function LoadingBuddyFallback() {
    return ( <div className="fixed bottom-4 right-4 z-50 w-12 h-12 rounded-full bg-gradient-to-br from-purple-600 to-indigo-700 animate-pulse" aria-hidden="true" ></div> );
}

// --- getPlainText helper ---
const getPlainText = (htmlString: string | null | undefined): string => {
    if (typeof htmlString !== 'string' || !htmlString) { return ''; }
    try {
        let text = htmlString.replace(/<Fa[A-Z][a-zA-Z0-9]+(?:\s+[^>]*?)?\s*\/?>/g, ''); 
        text = text.replace(/::(Fa[A-Z][a-zA-Z0-9]+.*?)::/g, ''); 
        text = text.replace(/\[\?\]/g, '');
        text = text.replace(/\[ICON ERR!\]/g, '');
        text = text.replace(/<[^>]*>/g, ''); 
        return text.replace(/&nbsp;/g, ' ').replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&amp;/g, '&').trim();
    } catch (e) {
        console.error("[getPlainText] Error stripping HTML for title:", e, "Input:", htmlString);
        return htmlString.replace(/<[^>]*>/g, '').trim();
    }
};

// --- ActualPageContent Component ---
interface ActualPageContentProps {
  initialPath: string | null;
  initialIdea: string | null;
}
function ActualPageContent({ initialPath, initialIdea }: ActualPageContentProps) {
    const log = logger.log;
    const debug = logger.debug;
    const error = logger.error;

    log("[ActualPageContent] START Render - Top Level");

    const { user } = useAppContext();
    const pageContext = useRepoXmlPageContext();
    const { info: toastInfo, error: toastError } = useAppToast();

    const [lang, setLang] = useState<keyof typeof translations>('en');
    const [t, setT] = useState<typeof translations.en | null>(null);
    const [isPageLoading, setIsPageLoading] = useState<boolean>(true);
    
    // State for sections visibility
    const [isIntroVisible, setIsIntroVisible] = useState(true);
    const [isCyberVibeVisible, setIsCyberVibeVisible] = useState(true);
    const [isCommunityWisdomVisible, setIsCommunityWisdomVisible] = useState(true);
    const [isPhilosophyStepsVisible, setIsPhilosophyStepsVisible] = useState(true);
    const [isCtaVisible, setIsCtaVisible] = useState(true); 
    const [sectionsCollapsed, setSectionsCollapsed] = useState(false);

    if (!pageContext || typeof pageContext.addToast !== 'function') {
         error("[ActualPageContent] CRITICAL: RepoXmlPageContext is missing or invalid!");
         return <div className="text-red-500 p-4">–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω.</div>;
    }

    const {
        fetcherRef, assistantRef, kworkInputRef,
        showComponents, setShowComponents,
    } = pageContext;

    useEffect(() => {
      debug("[Effect Lang] START");
      const browserLang = typeof navigator !== 'undefined' ? navigator.language.split('-')[0] : 'en';
      const userLang = user?.language_code;
      const resolvedLang: keyof typeof translations = userLang === 'ru' || (!userLang && browserLang === 'ru') ? 'ru' : 'en';
      setLang(resolvedLang);
      const newTranslations = translations[resolvedLang] ?? translations.en;
      setT(newTranslations);
      log(`[Effect Lang] Language set to: ${resolvedLang}. Translations loaded.`);
    }, [user]);

    useEffect(() => {
        log("[ActualPageContent Effect] Loading status check.");
        setIsPageLoading(!t);
        log(`[ActualPageContent Effect] Loading check: translations=${!!t}, resulting isPageLoading=${!t}`);
    }, [t]);

    const toggleAllSections = useCallback(() => {
        setSectionsCollapsed(prev => !prev);
    }, []);

    useEffect(() => {
        if (!t) return; // Don't run if translations are not loaded
        const newVisibility = !sectionsCollapsed;
        setIsIntroVisible(newVisibility);
        setIsCyberVibeVisible(newVisibility);
        setIsCommunityWisdomVisible(newVisibility);
        setIsPhilosophyStepsVisible(newVisibility);
        
        
            setIsCtaVisible(newVisibility);
        
        log(`[Effect SectionsToggle] Info sections visibility set to: ${newVisibility}. CTA controlled separately: ${isCtaVisible}`);
    }, [sectionsCollapsed, t, showComponents, isCtaVisible]); 

    const memoizedGetPlainText = useCallback(getPlainText, []);
    const scrollToSectionNav = useCallback((id: string) => {
        debug(`[CB ScrollNav] Attempting scroll to: ${id}`);
        const sectionsRequiringReveal = ['extractor', 'executor', 'cybervibe-section', 'philosophy-steps', 'community-wisdom-section'];
        const targetElement = document.getElementById(id);
        const headerOffset = 80; 

        const scroll = (element: HTMLElement) => {
             try {
                const elementTop = element.getBoundingClientRect().top + window.scrollY;
                const offsetTop = elementTop - headerOffset;
                window.scrollTo({ top: offsetTop, behavior: 'smooth' });
                log(`[CB ScrollNav] Scrolled to "${id}" at offsetTop: ${offsetTop}`);
            } catch (e) {
                error(`[CB ScrollNav] Error scrolling to "${id}":`, e);
            }
        };

        if (sectionsRequiringReveal.includes(id) && !showComponents) {
            log(`[CB ScrollNav] Revealing components for "${id}"`);
            setShowComponents(true);
            setIsCtaVisible(true); // Ensure CTA is visible when components are shown for the first time
            requestAnimationFrame(() => {
                const el = document.getElementById(id);
                if (el) {
                    scroll(el);
                } else {
                    error(`[CB ScrollNav] Target "${id}" not found after reveal and animation frame.`);
                }
            });
        } else if (targetElement) {
            scroll(targetElement);
        } else {
            error(`[CB ScrollNav] Target element "${id}" not found.`);
        }
    }, [showComponents, setShowComponents, log, debug, error]);

    const handleShowComponents = useCallback(() => {
        log("[Button Click] handleShowComponents (Reveal)");
        setShowComponents(true);
        if (sectionsCollapsed) { // If user had previously collapsed all, expand them when showing components
            setSectionsCollapsed(false);
        }
        toastInfo("–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã!", { duration: 1500 });
        setTimeout(() => scrollToSectionNav('extractor'), 100);
    }, [setShowComponents, toastInfo, log, scrollToSectionNav, sectionsCollapsed]);

     if (isPageLoading) {
         log(`[Render] ActualPageContent: Rendering Loading State (Waiting for translations)`);
         const loadingLang = typeof navigator !== 'undefined' && navigator.language.startsWith('ru') ? 'ru' : 'en';
         const loadingText = translations[loadingLang]?.loading ?? translations.en.loading;
         return ( <div className="flex justify-center items-center min-h-screen pt-20 bg-dark-bg"> <FaSpinner className="text-brand-green animate-spin text-3xl mr-4" /> <p className="text-brand-green animate-pulse text-xl font-mono">{loadingText}</p> </div> );
     }
     if (!t) {
         error("[Render] ActualPageContent: Critical - translations (t) are null after loading.");
         return <div className="text-red-500 p-4">–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ–∫—Å—Ç—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã.</div>;
     }

    const userName = user?.first_name || 'Vibe Master';
    const navTitleIntro = memoizedGetPlainText(t.navIntro);
    const navTitleVibeLoop = memoizedGetPlainText(t.navCyberVibe);
    const navTitleGrabber = memoizedGetPlainText(t.navGrabber);
    const navTitleAssistant = memoizedGetPlainText(t.navAssistant);
    const masterToggleTitle = sectionsCollapsed ? t.expandAll : t.collapseAll;

    const CloseButton = ({ onClick, ariaLabel }: { onClick: () => void; ariaLabel: string }) => (
        <button
            onClick={onClick}
            className="absolute top-2 right-2 text-slate-400 hover:text-white z-20 p-1 rounded-full hover:bg-black/30 transition-colors"
            aria-label={ariaLabel}
        >
            <FaCircleXmark className="w-5 h-5" />
        </button>
    );

    log("[ActualPageContent] Preparing to render JSX...");

    try {
       return (
            <>
                <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
                <div className="min-h-screen bg-dark-bg p-4 sm:p-6 pt-24 text-light-text flex flex-col items-center relative overflow-y-auto">
                    
                    <button
                        onClick={toggleAllSections}
                        className="fixed top-20 left-4 sm:left-6 text-slate-300 hover:text-white z-50 p-2 rounded-full bg-dark-card/70 hover:bg-dark-card/90 backdrop-blur-sm shadow-lg border border-slate-700 hover:border-slate-500 transition-all"
                        title={masterToggleTitle}
                        aria-label={masterToggleTitle}
                    >
                        {sectionsCollapsed ? <FaAnglesUp className="w-5 h-5" /> : <FaAnglesDown className="w-5 h-5" />}
                    </button>

                    
        {/* === NEW: Xuinity + CYBERWTF badge and onboarding block === */}
        <LangOnboardingBlock lang={lang} />

                    {isIntroVisible && (
                        <section id="intro" className="mb-12 text-center max-w-3xl w-full relative">
                            <CloseButton onClick={() => setIsIntroVisible(false)} ariaLabel="Close Intro Section" />
                            <div className="flex justify-center mb-4"> <FaBolt className="w-16 h-16 text-brand-yellow text-shadow-[0_0_15px_hsl(var(--brand-yellow))] animate-pulse" /> </div>
                            <h1 className="text-4xl md:text-5xl font-orbitron font-bold text-brand-yellow text-shadow-[0_0_10px_hsl(var(--brand-yellow))] mb-4">
                               <VibeContentRenderer content={t.pageTitle} />
                            </h1>
                            <p className="text-xl md:text-2xl text-light-text mt-4 font-semibold">
                               <VibeContentRenderer content={t.welcome} /> <span className="text-brand-cyan">{userName}!</span>
                            </p>
                            <div className="text-lg md:text-xl text-muted-foreground mt-3 space-y-3 prose prose-invert prose-p:my-2 prose-strong:text-brand-yellow prose-em:text-brand-purple prose-a:text-brand-blue max-w-none">
                                <VibeContentRenderer content={t.intro1} />
                                <VibeContentRenderer content={t.intro2} />
                                <div className="font-semibold text-brand-green"><VibeContentRenderer content={t.intro3} /></div>
                            </div>
                        </section>
                    )}

                    {isCyberVibeVisible && (
                        <section id="cybervibe-section" className="mb-12 w-full max-w-3xl relative">
                            <CloseButton onClick={() => setIsCyberVibeVisible(false)} ariaLabel="Close Vibe Loop Section" />
                            <Card className="bg-gradient-to-br from-purple-900/40 via-black/60 to-indigo-900/40 border border-purple-600/60 shadow-xl rounded-lg p-6 backdrop-blur-sm bg-dark-card/80">
                                 <CardHeader className="p-0 mb-4">
                                     <CardTitle className="text-2xl md:text-3xl font-bold text-center text-brand-purple flex items-center justify-center gap-2">
                                        <FaAtom className="animate-spin-slow"/> <VibeContentRenderer content={t.cyberVibeTitle} /> <FaBrain className="animate-pulse"/>
                                    </CardTitle>
                                 </CardHeader>
                                 <CardContent className="p-0 text-muted-foreground text-base md:text-lg space-y-3 prose prose-invert prose-p:my-2 prose-strong:text-brand-purple prose-em:text-brand-cyan prose-a:text-brand-blue max-w-none">
                                    <VibeContentRenderer content={t.cyberVibe1} />
                                    <VibeContentRenderer content={t.cyberVibe2} />
                                    <VibeContentRenderer content={t.cyberVibe3} />
                                    <div className="text-purple-300 font-semibold"><VibeContentRenderer content={t.cyberVibe4} /></div>
                                 </CardContent>
                             </Card>
                         </section>
                     )}
                    
                    {isCommunityWisdomVisible && (
                        <section id="community-wisdom-section" className="mb-12 w-full max-w-3xl relative">
                            <CloseButton onClick={() => setIsCommunityWisdomVisible(false)} ariaLabel="Close Community Wisdom Section" />
                            <h3 className="text-2xl md:text-3xl font-orbitron text-brand-cyan mb-6 text-center flex items-center justify-center gap-2">
                               <VibeContentRenderer content={t.communityWisdomTitle} />
                            </h3>
                            <div className="space-y-8">
                                {[
                                    { videoId: "ctcMA6chfDY", start: 1261, title: "YouTube: Sam Altman's Dream", quote: t.quote1, borderColor: "border-brand-cyan", inspiredBy: "- Inspired by Sam Altman" },
                                    { videoId: "dq8MhTFCs80", start: 1197, title: "YouTube: Do you Vibecode?", quote: t.quote2, borderColor: "border-brand-pink", inspiredBy: "- Inspired by Vibe Master" },
                                    { videoId: "xlQB_0Nzoog", start: 743, title: "YouTube: Really F*cking EZ!", quote: t.quote3, borderColor: "border-brand-yellow", inspiredBy: "- Inspired by Strategic Thinking" }
                                ].map(item => (
                                    <div key={item.videoId}>
                                        <div className={`aspect-video w-full rounded-lg overflow-hidden border-2 ${item.borderColor}/50 shadow-lg`}>
                                            <iframe className="w-full h-full" src={`https://www.youtube.com/embed/${item.videoId}?start=${item.start}`} title={item.title} allow="accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowFullScreen></iframe>
                                        </div>
                                        <div className={`mt-3 p-3 bg-dark-card/70 border-l-4 ${item.borderColor} rounded-r-md text-muted-foreground max-w-none`}>
                                            <div className="flex items-start">
                                                <VibeContentRenderer content="::FaQuoteLeft className='text-current opacity-70 text-lg mr-2 shrink-0'::" />
                                                <div className="prose prose-sm prose-invert max-w-none flex-grow">
                                                    <VibeContentRenderer content={item.quote} />
                                                </div>
                                                <VibeContentRenderer content="::FaQuoteRight className='text-current opacity-70 text-lg mr-2 shrink-0'::" />
                                            </div>
                                            <p className="text-xs text-right opacity-70 mt-1">{item.inspiredBy}</p>
                                        </div>
                                    </div>
                                ))}
                            </div>
                        </section>
                    )}

                    {isPhilosophyStepsVisible && (
                        <section id="philosophy-steps" className="mb-12 w-full max-w-3xl relative">
                            <CloseButton onClick={() => setIsPhilosophyStepsVisible(false)} ariaLabel="Close Philosophy/Steps Section" />
                            <details className="bg-dark-card/80 border border-border rounded-lg shadow-md backdrop-blur-sm transition-all duration-300 ease-in-out open:pb-4 open:shadow-lg open:border-indigo-500/50" open={!sectionsCollapsed}>
                                <summary className="text-xl md:text-2xl font-semibold text-brand-green p-4 cursor-pointer list-none flex justify-between items-center hover:bg-card/50 rounded-t-lg transition-colors group">
                                    <span className="flex items-center gap-2"><FaCodeBranch /> <VibeContentRenderer content={t.philosophyTitle} /></span>
                                    <span className="text-xs text-gray-500 group-open:rotate-180 transition-transform duration-300">‚ñº</span>
                                </summary>
                                <div className="px-6 pt-2 text-muted-foreground space-y-4 text-base prose prose-invert prose-p:my-2 prose-li:my-1 prose-strong:text-brand-yellow prose-em:text-brand-cyan prose-a:text-brand-blue max-w-none">
                                     <div className="my-4 not-prose">
                                         <h4 className="text-lg font-semibold text-brand-cyan mb-2"><VibeContentRenderer content={t.philosophyVideoTitle} /></h4>
                                         <div className="aspect-video w-full rounded-lg overflow-hidden border border-cyan-700/50 shadow-lg">
                                             <iframe className="w-full h-full" src="https://www.youtube.com/embed/imxzYWYKCyQ" title="YouTube video player - Vibe Level Explanation by Salavey13" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowFullScreen></iframe>
                                         </div>
                                     </div>
                                    <hr className="border-border my-3"/>
                                     <div className="p-4 bg-gradient-to-tr from-purple-900/50 to-indigo-900/40 rounded-lg border border-purple-500/30 shadow-inner">
                                        <VibeContentRenderer content={t.philosophyCore} />
                                     </div>
                                     <hr className="border-border my-3"/>
                                    <h4 className="text-lg font-semibold text-brand-cyan pt-1">Level Progression (Your Autonomy Slider):</h4>
                                    <div className="list-none space-y-2 p-0 text-sm md:text-base not-prose">
                                        {[t.philosophyLvl0_1, t.philosophyLvl1_2, t.philosophyLvl2_3, t.philosophyLvl3_4, t.philosophyLvl4_5, t.philosophyLvl5_6, t.philosophyLvl6_7, t.philosophyLvl8_10, t.philosophyLvl11, t.philosophyLvl12, t.philosophyLvl13, t.philosophyLvl14, t.philosophyLvl15].map((levelContent, index) => (
                                            <div key={`lvl-${index}`}><VibeContentRenderer content={levelContent} /></div>
                                        ))}
                                    </div>
                                    <hr className="border-border my-3"/>
                                    <div className="not-prose"><VibeContentRenderer content={t.philosophyEnd} /></div>
                                    <hr className="border-border my-4"/>
                                    <h4 className="text-lg font-semibold text-brand-cyan pt-2"><VibeContentRenderer content={t.stepsTitle} /></h4>
                                    <ol className="list-decimal list-inside text-sm space-y-1">
                                         <li><VibeContentRenderer content={"–ù–∞—Å—Ç—Ä–æ–π <FaCodeBranch title='–ù–∞—Å—Ç—Ä–æ–π–∫–∏' class='inline text-cyan-400'/>"} /></li>
                                         <li><VibeContentRenderer content={"–ñ–º–∏ <span class='font-bold text-purple-400 mx-1'>\"–ò–∑–≤–ª–µ—á—å —Ñ–∞–π–ª—ã\"</span>"} /></li>
                                         <li><VibeContentRenderer content={"–í—ã–±–µ—Ä–∏ —Ñ–∞–π–ª—ã –∏–ª–∏ <span class='font-bold text-teal-400 mx-1'>—Å–≤—è–∑–∞–Ω–Ω—ã–µ</span> / <span class='font-bold text-orange-400 mx-1'>–≤–∞–∂–Ω—ã–µ</span>"} /></li>
                                         <li><VibeContentRenderer content={"–û–ø–∏—à–∏ –∑–∞–¥–∞—á—É –ò–õ–ò –¥–æ–±–∞–≤—å —Ñ–∞–π–ª—ã <FaPlus title='–î–æ–±–∞–≤–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –≤ –∑–∞–ø—Ä–æ—Å' class='inline text-sm'/> / –≤—Å–µ <FaTree title='–î–æ–±–∞–≤–∏—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã –≤ –∑–∞–ø—Ä–æ—Å' class='inline text-sm'/>"} /></li>
                                         <li><VibeContentRenderer content={"–°–∫–æ–ø–∏—Ä—É–π <FaCopy title='–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å' class='inline text-sm mx-px'/> –∏–ª–∏ –ø–µ—Ä–µ–¥–∞–π –¥–∞–ª—å—à–µ"} /></li>
                                    </ol>
                                </div>
                            </details>
                        </section>
                    )}

                    {!showComponents && (
                        <section id="reveal-trigger" className="mb-12 w-full max-w-3xl text-center">
                            <Button onClick={handleShowComponents} className="bg-gradient-to-r from-brand-green via-brand-cyan to-brand-purple text-black font-bold py-3 px-8 rounded-full text-lg shadow-lg hover:scale-105 transform transition duration-300 animate-bounce hover:animate-none ring-2 ring-offset-2 ring-offset-dark-bg ring-transparent hover:ring-brand-cyan" size="lg">
                                <FaHandSparkles className="mr-2"/> <VibeContentRenderer content={t.readyButton} />
                            </Button>
                        </section>
                    )}

                    {showComponents && ( // Core components are always shown if showComponents is true
                         <>
                            <h2 className="text-3xl font-bold text-center text-brand-green mb-8 animate-pulse"><VibeContentRenderer content={t.componentsTitle} /></h2>
                             <section id="extractor" className="mb-12 w-full max-w-4xl">
                                 <Card className="bg-dark-card/80 border border-blue-700/50 shadow-lg backdrop-blur-sm">
                                     <CardContent className="p-4">
                                         <RepoTxtFetcher
                                             ref={fetcherRef}
                                             highlightedPathProp={initialPath}
                                             ideaProp={initialIdea}
                                         />
                                     </CardContent>
                                 </Card>
                             </section>

                             <section id="executor" className="mb-12 w-full max-w-4xl pb-16">
                                 <Card className="bg-dark-card/80 border border-purple-700/50 shadow-lg backdrop-blur-sm">
                                     <CardContent className="p-4">
                                         <AICodeAssistant ref={assistantRef} kworkInputRefPassed={kworkInputRef} aiResponseInputRefPassed={pageContext.aiResponseInputRef} />
                                     </CardContent>
                                 </Card>
                             </section>
                         </>
                     )}

                    {isCtaVisible && ( 
                        <section id="cta-final" className="w-full max-w-3xl mt-4 mb-12 text-center">
                            {/* Outer Border Div */}
                            <div className="relative p-1.5 rounded-xl bg-gradient-to-b from-blue-800 to-purple-700 shadow-2xl">
                                {/* Middle Border Div */}
                                <div className="p-1 rounded-lg bg-gradient-to-b from-orange-400 via-pink-400 to-purple-700">
                                    {/* Content Div */}
                                    <div className="relative bg-gradient-to-b from-indigo-600 via-pink-600 to-orange-500 p-6 rounded-md prose-strong:text-yellow-200 prose-a:text-brand-blue max-w-none">
                                        <button 
                                            onClick={() => setIsCtaVisible(false)} 
                                            className="absolute top-2 right-2 text-white/70 hover:text-white z-20 p-1 rounded-full hover:bg-black/50 transition-colors"
                                            aria-label="Close CTA"
                                        >
                                            <FaCircleXmark className="w-6 h-6" />
                                        </button>
                                        <h3 className="text-2xl font-bold text-white mb-3 prose-invert"><VibeContentRenderer content={t?.ctaTitle?.replace('{USERNAME}', userName) ?? ''} /></h3>
                                        <div className="text-white text-lg mb-4 prose-invert"> <VibeContentRenderer content={t.ctaDesc} /> </div>
                                        
                                        <div className="aspect-video w-full rounded-lg overflow-hidden border-2 border-orange-500/70 shadow-lg my-6">
                                            <iframe className="w-full h-full" src={`https://www.youtube.com/embed/qCkPM_f3V5c?autoplay=1&mute=0`} title="YouTube: GTA Vibe" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowFullScreen></iframe>
                                        </div>
                                        
                                        <div className="mt-3 mb-4 p-3 bg-black/50 border-l-4 border-pink-500 rounded-r-md text-white max-w-none">
                                            <div className="flex items-center">
                                                <VibeContentRenderer content="::FaQuoteLeft className='text-current opacity-80 text-xl mr-2 shrink-0'::" />
                                                <div className="prose prose-sm prose-invert text-center flex-grow max-w-none">
                                                    <VibeContentRenderer content={t.ctaHotChickQuote} />
                                                </div>
                                                <VibeContentRenderer content="::FaQuoteRight className='text-current opacity-80 text-xl ml-2 shrink-0'::" />
                                            </div>
                                            <p className="text-xs text-right opacity-70 mt-1">- Vibe by @SALAVEY13</p>
                                        </div>

                                        
                                        <div className="text-slate-300 text-base prose-invert"> <VibeContentRenderer content={t.ctaDude} /> </div>
                                    </div>
                                </div>
                            </div>
                        </section>
                    )}

                     <motion.nav className="fixed right-2 sm:right-3 top-1/2 transform -translate-y-1/2 flex flex-col space-y-3 z-40" animate={{ scale: [1, 1.03, 1] }} transition={{ duration: 2.0, repeat: Infinity, repeatType: 'reverse', ease: "easeInOut" }}>
                         <button onClick={() => scrollToSectionNav("intro")} className="p-2 bg-muted/80 backdrop-blur-sm rounded-full hover:bg-muted/60 transition shadow-md" title={navTitleIntro} aria-label={navTitleIntro || "Scroll to Intro"} > <FaCircleInfo className="text-lg text-foreground/80" /> </button>
                         <button onClick={() => scrollToSectionNav("cybervibe-section")} className="p-2 bg-brand-purple/80 backdrop-blur-sm rounded-full hover:bg-brand-purple/70 transition shadow-md" title={navTitleVibeLoop} aria-label={navTitleVibeLoop || "Scroll to Vibe Loop"} > <FaUpLong className="text-lg text-white" /> </button>
                         {showComponents && ( /* Navigation for components is always available if showComponents is true, regardless of sectionsCollapsed */
                            <>
                                <button onClick={() => scrollToSectionNav("extractor")} className="p-2 bg-brand-blue/80 backdrop-blur-sm rounded-full hover:bg-brand-blue/70 transition shadow-md" title={navTitleGrabber} aria-label={navTitleGrabber || "Scroll to Grabber"} > <FaDownload className="text-lg text-white" /> </button>
                                <button onClick={() => scrollToSectionNav("executor")} className="p-2 bg-brand-cyan/80 backdrop-blur-sm rounded-full hover:bg-brand-cyan/70 transition shadow-md" title={navTitleAssistant} aria-label={navTitleAssistant || "Scroll to Assistant"} > <FaRobot className="text-lg text-white" /> </button>
                            </> 
                         )}
                    </motion.nav>

                    <Suspense fallback={<LoadingBuddyFallback />}>
                        <AutomationBuddy />
                    </Suspense>
                </div>
            </>
       );
    } catch (renderError: any) {
         error("[ActualPageContent] CRITICAL RENDER ERROR in return JSX:", renderError);
         return <div className="text-red-500 p-4">–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {renderError.message}</div>;
    } finally {
        log("[ActualPageContent] END Render");
    }
}

function RepoXmlPageInternalContent() {
  const searchParams = useSearchParams();
  const path = searchParams.get('path');
  const idea = searchParams.get('idea');
  logger.log(`[RepoXmlPageInternalContent] Extracted from URL - path: ${path}, idea: ${idea ? idea.substring(0,30)+'...' : null}`);
  return <ActualPageContent initialPath={path} initialIdea={idea} />;
}

function RepoXmlPageLayout() {
    const log = logger.log;
    const error = logger.error;

    log("[RepoXmlPageLayout] START Render");
    try {
      return (
           <RepoXmlPageProvider>
               <RepoXmlPageInternalContent />
           </RepoXmlPageProvider>
       );
    } catch (layoutError: any) {
      error("[RepoXmlPageLayout] CRITICAL RENDER ERROR:", layoutError);
      return <div className="text-red-500 p-4">–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ —Å–ª–æ–µ —Ä–∞–∑–º–µ—Ç–∫–∏: {layoutError.message}</div>;
    } finally {
       log("[RepoXmlPageLayout] END Render");
    }
}

export default function RepoXmlPage() {
     const log = logger.log;
     const error = logger.error;

     log("[RepoXmlPage] START Render (Exported Component)");
    const fallbackLoadingLang = typeof navigator !== 'undefined' && navigator.language.startsWith('ru') ? 'ru' : 'en';
    const fallbackLoadingText = translations[fallbackLoadingLang]?.loading ?? translations.en.loading;
    const fallbackLoading = ( <div className="flex justify-center items-center min-h-screen pt-20 bg-dark-bg"> <FaSpinner className="text-brand-green animate-spin text-3xl mr-4" /> <p className="text-brand-green animate-pulse text-xl font-mono">{fallbackLoadingText}</p> </div> );

    try {
        return (
            <Suspense fallback={fallbackLoading}>
                <RepoXmlPageLayout />
            </Suspense>
        );
    } catch (pageError: any) {
         error("[RepoXmlPage] CRITICAL RENDER ERROR:", pageError);
         return <div className="text-red-500 p-4">–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {pageError.message}</div>;
    } finally {
        log("[RepoXmlPage] END Render (Exported Component)");
    }
}