"use client"

import { useEffect } from "react"
import Link from "next/link"
import { Button } from "@/components/ui/button"
import { debugLogger } from "@/lib/debugLogger"
import { useAppContext } from "@/contexts/AppContext"

export default function Home() {
  const { dbUser, telegramUser, isAuthenticated, isLoading, error, isInTelegramContext } = useAppContext()

  useEffect(() => {
    debugLogger.log("Home component mounted", { isLoading, isInTelegramContext, telegramUser, dbUser, error })
  }, [isLoading, isInTelegramContext, telegramUser, dbUser, error])

  if (isLoading) {
    return <div className="min-h-screen bg-gray-100 text-gray-900 flex items-center justify-center">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
  }

  if (error) {
    debugLogger.error("Error in Home component:", error)
    return (
      <div className="min-h-screen bg-gray-100 text-gray-900 flex items-center justify-center">–û—à–∏–±–∫–∞: {error.message}</div>
    )
  }

  return (
    <div className="min-h-screen bg-gray-100 text-gray-900 relative overflow-hidden">
      {/* –ì–ª–∞–≤–Ω–∞—è —Å–µ–∫—Ü–∏—è */}
      <main className="pt-20 relative min-h-[60vh] flex items-center justify-center bg-gradient-to-b from-gray-200 to-gray-100">
        <div className="absolute inset-0 overflow-hidden">
          <div className="absolute inset-0 bg-gradient-to-r from-blue-100 to-green-100 mix-blend-overlay" />
        </div>
        <div className="relative container mx-auto px-4 text-center">
          <h2 className="text-5xl sm:text-6xl md:text-8xl font-bold text-blue-900 font-sans mb-8">
            ChinaCarRent
          </h2>
          <p className="text-green-700 text-md sm:text-xl md:text-2xl font-sans mb-8">
            –ê—Ä–µ–Ω–¥–∞ –∫–∏—Ç–∞–π—Å–∫–∏—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –≤ –†–æ—Å—Å–∏–∏. –ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å.
          </p>
          <div className="flex flex-wrap justify-center gap-4">
            <Button className="bg-blue-600 text-white hover:bg-blue-700 font-sans text-lg px-8 py-6">
              <Link href="/rent-car">–ê—Ä–µ–Ω–¥–æ–≤–∞—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å</Link>
            </Button>
            <Button className="bg-green-600 text-white hover:bg-green-700 font-sans text-lg px-8 py-6">
              <Link href="/buy-subscription">–ö—É–ø–∏—Ç—å –∞–±–æ–Ω–µ–º–µ–Ω—Ç</Link>
            </Button>
            <Button className="bg-amber-500 text-white hover:bg-amber-600 font-sans text-lg px-8 py-6">
              <Link href="/supercar-test">–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –Ω–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—å</Link>
            </Button>
          </div>
        </div>
      </main>

      {/* –°–µ–∫—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–π */}
      <div className="container mx-auto px-4 py-16">
        <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
          {[
            {
              title: "–£–¥–æ–±–Ω–∞—è –æ–ø–ª–∞—Ç–∞",
              icon: "üí≥",
              description: "–û–ø–ª–∞—Ç–∞ –∫–∞—Ä—Ç–æ–π –∏–ª–∏ –Ω–∞–ª–∏—á–Ω—ã–º–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏",
            },
            {
              title: "–î–æ—Å—Ç–∞–≤–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è",
              icon: "üöó",
              description: "–î–æ—Å—Ç–∞–≤–∏–º –∞–≤—Ç–æ–º–æ–±–∏–ª—å –∫ –≤–∞—à–µ–º—É –¥–æ–º—É –∑–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –ø–ª–∞—Ç—É",
            },
            {
              title: "–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏",
              icon: "üìç",
              description: "–°–ª–µ–¥–∏—Ç–µ –∑–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è",
            },
          ].map((feature, index) => (
            <div
              key={index}
              className="border border-gray-300 bg-white rounded-lg p-6 hover:border-blue-500 transition-colors"
            >
              <div className="text-4xl mb-4">{feature.icon}</div>
              <h3 className="text-blue-900 font-sans text-xl mb-2">{feature.title}</h3>
              <p className="text-gray-700 font-sans text-sm">{feature.description}</p>
            </div>
          ))}
        </div>
      </div>

      {/* –ò–∫–æ–Ω–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ */}
      {isAuthenticated && dbUser?.role === "admin" && (
        <div className="fixed bottom-4 right-4 z-50">
          <Link href="/admin">
            <Button variant="ghost" className="text-blue-900 hover:text-blue-700">
              üõ†Ô∏è –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            </Button>
          </Link>
        </div>
      )}
    </div>
  )
}

