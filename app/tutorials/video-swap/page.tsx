"use client";

import React, { useState, useEffect, Suspense, useCallback } from 'react'; 
import Link from 'next/link';
import { useSearchParams, useRouter } from 'next/navigation';
import { cn } from '@/lib/utils';
import ScrollControlledVideoPlayer from '@/components/ScrollControlledVideoPlayer';
import { VibeContentRenderer } from '@/components/VibeContentRenderer';
import { Button } from '@/components/ui/button';
import TutorialLoader from '../TutorialLoader'; 
import { useAppContext } from '@/contexts/AppContext';
import { markTutorialAsCompleted } from '@/hooks/cyberFitnessSupabase';
import { useAppToast } from '@/hooks/useAppToast';


const videoSwapTutorialTranslations = {
  ru: {
    pageTitle: "–ú–∏—Å—Å–∏—è 3: –í–∏–¥–µ–æ-–†–µ–Ω–¥–µ—Ä",
    pageSubtitle: "–ê–≥–µ–Ω—Ç, –≤—Ä–µ–º—è –¥–ª—è —Ç—è–∂–µ–ª–æ–π –∞—Ä—Ç–∏–ª–ª–µ—Ä–∏–∏ ‚Äì –∑–∞–º–µ–Ω–∞ –≤–∏–¥–µ–æ! –≠—Ç–æ –∫–∞–∫ –æ–±–Ω–æ–≤–∏—Ç—å –≥–æ–ª–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫—É—é –ø—Ä–æ–µ–∫—Ü–∏—é –≤ —à—Ç–∞–±–µ: ::FaVideoSlash:: -> ::FaToolbox:: -> ::FaVideo::. –ü—Ä–∏–Ω—Ü–∏–ø —Ç–æ—Ç –∂–µ, —á—Ç–æ –∏ —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏, –Ω–æ —Ñ–∞–π–ª—ã –±–æ–ª—å—à–µ, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –≤—ã—à–µ!",
    steps: [
      {
        id: 1,
        title: "–®–∞–≥ 1: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –°—Ç–∞—Ä–æ–≥–æ –í–∏–¥–µ–æ-–ø–æ—Ç–æ–∫–∞ (URL)",
        description: "–¢–≤–æ—è –ø–µ—Ä–≤–∞—è –∑–∞–¥–∞—á–∞: –Ω–∞–π—Ç–∏ –≤ –∫–æ–¥–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∏–ª–∏ —Ç–µ–≥, –æ—Ç–æ–±—Ä–∞–∂–∞—é—â–∏–π –≤–∏–¥–µ–æ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å. –°–∫–æ–ø–∏—Ä—É–π –ø–æ–ª–Ω—ã–π URL —Ç–µ–∫—É—â–µ–≥–æ –≤–∏–¥–µ–æ-–∏—Å—Ç–æ—á–Ω–∏–∫–∞ (–∞—Ç—Ä–∏–±—É—Ç `src` –∏–ª–∏ –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–π). –≠—Ç–æ —Ç–≤–æ—è —Ü–µ–ª—å –Ω–æ–º–µ—Ä –æ–¥–∏–Ω.",
        icon: "FaLink",
        color: "brand-pink",
        videoSrc: "https://inmctohsodgdohamhzag.supabase.co/storage/v1/object/public/tutorial-1-img-swap//1_copy_image_link.mp4" 
      },
      {
        id: 2,
        title: "–®–∞–≥ 2: –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –ü–æ–ª—É—á–µ–Ω–∏–µ URL –ù–æ–≤–æ–≥–æ –í–∏–¥–µ–æ-—Ñ–∞–π–ª–∞",
        description: "–ó–∞–≥—Ä—É–∑–∏ –Ω–æ–≤—ã–π –≤–∏–¥–µ–æ-—Ñ–∞–π–ª –Ω–∞ —Ö–æ—Å—Ç–∏–Ω–≥ (–Ω–∞–ø—Ä–∏–º–µ—Ä, Supabase Storage). –£–±–µ–¥–∏—Å—å, —á—Ç–æ —Ñ–∞–π–ª –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –ø—É–±–ª–∏—á–Ω–æ–º—É URL. –°–∫–æ–ø–∏—Ä—É–π —ç—Ç–æ—Ç –Ω–æ–≤—ã–π URL ‚Äì —ç—Ç–æ —Ç–≤–æ–π –∫–ª—é—á –∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—é.",
        icon: "FaUpload",
        color: "brand-blue",
        videoSrc: "https://inmctohsodgdohamhzag.supabase.co/storage/v1/object/public/tutorial-1-img-swap//2_upload_new_image.mp4" 
      },
      {
        id: 3,
        title: "–®–∞–≥ 3: –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ó–∞–º–µ–Ω—ã –≤ SUPERVIBE Studio",
        description: "–ü–µ—Ä–µ–π–¥–∏ –≤ SUPERVIBE Studio. –í —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ –¥–ª—è –∑–∞–º–µ–Ω—ã (Image/Video Swap) —É–∫–∞–∂–∏ —Å—Ç–∞—Ä—ã–π URL –≤–∏–¥–µ–æ –∏ –Ω–æ–≤—ã–π URL. AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–æ–¥ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è.",
        icon: "FaWandMagicSparkles",
        color: "brand-purple",
        videoSrc: "https://inmctohsodgdohamhzag.supabase.co/storage/v1/object/public/tutorial-1-img-swap//3_sitback_and_relax_its_swappin.mp4" 
      },
      {
        id: 4,
        title: "–®–∞–≥ 4: –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –ó–∞–º–µ–Ω—ã –∏ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è (PR)",
        description: "–ú–∏—Å—Å–∏—è –ø–æ—á—Ç–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞! SUPERVIBE Studio –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—Å—Ç Pull Request —Å –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äì –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∑–∞–º–µ–Ω—ã –≤ PR, —Å–º–µ—Ä–¥–∂–∏—Ç—å –µ–≥–æ –∏ —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –Ω–æ–≤–æ–µ –≤–∏–¥–µ–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –Ω–∞ —Å–∞–π—Ç–µ. –ü–æ–±–µ–¥–∞!",
        icon: "FaCheckDouble",
        color: "brand-green",
        videoSrc: "https://inmctohsodgdohamhzag.supabase.co/storage/v1/object/public/tutorial-1-img-swap//4_profit_check.mp4" 
      }
    ],
    nextLevelTitle: "::FaFilm:: –ö–∏–Ω–æ–º–µ—Ö–∞–Ω–∏–∫ –ì–æ—Ç–æ–≤!",
    nextLevelText: "–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞, –ê–≥–µ–Ω—Ç! –¢—ã –æ—Å–≤–æ–∏–ª –∑–∞–º–µ–Ω—É –≤–∏–¥–µ–æ. <Link href='/repo-xml?flow=imageSwap' class='text-brand-blue hover:underline font-semibold'>SUPERVIBE Studio</Link> –∂–¥–µ—Ç —Ç–≤–æ–∏—Ö –Ω–æ–≤—ã—Ö –ø–æ–¥–≤–∏–≥–æ–≤ —Å –≤–∏–¥–µ–æ-–∫–æ–Ω—Ç–µ–Ω—Ç–æ–º. *–ó–∞–º–µ—Ç–∫–∞: –¥–ª—è –≤–∏–¥–µ–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ—Ç –∂–µ ImageSwap —Ñ–ª–æ—É –≤ —Å—Ç—É–¥–∏–∏.*",
    tryLiveButton: "::FaWandMagicSparkles:: –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –≤ –°—Ç—É–¥–∏–∏",
    toggleButtonToWtf: "::FaPooStorm:: –í–∫–ª—é—á–∏—Ç—å –†–µ–∂–∏–º –ë–û–ì–ê (WTF?!)",
  },
  wtf: {
    pageTitle: "–í–ò–î–û–°–´ –ú–ï–ù–Ø–¢–¨ ‚Äì –ï–©–Å –ü–†–û–©–ï, –ß–ï–ú –¢–´ –î–£–ú–ê–õ!",
    pageSubtitle: "–ë–æ–ª—å—à–∏–µ —Ñ–∞–π–ª—ã? –ë–æ–ª—å—à–∞—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å? –•–ê! –¢–µ –∂–µ 4 –∫–Ω–æ–ø–∫–∏, –±—Ä–∞—Ç–∞–Ω. ::FaVideo::",
    steps: [
      {
        id: 1,
        title: "–®–ê–ì 1: –°–¢–ê–†–´–ô URL –í–ò–î–û–°–ê ‚Äì COPY!",
        description: "–ù–∞—à–µ–ª –°–¢–ê–†–û–ï –≤–∏–¥–µ–æ –≤ –∫–æ–¥–µ? –ê–¥—Ä–µ—Å (URL) —Å–∫–æ–ø–∏—Ä–æ–≤–∞–ª. –ü–æ–µ—Ö–∞–ª–∏ –¥–∞–ª—å—à–µ.",
        icon: "FaFilm",
        color: "brand-pink",
        videoSrc: "https://inmctohsodgdohamhzag.supabase.co/storage/v1/object/public/tutorial-1-img-swap//1_copy_image_link.mp4" 
      },
      {
        id: 2,
        title: "–®–ê–ì 2: –ù–û–í–´–ô –í–ò–î–û–° –ó–ê–õ–ï–ô, URL ‚Äì COPY!",
        description: "–ó–∞–≥—Ä—É–∑–∏ –ù–û–í–û–ï –≤–∏–¥–µ–æ. –ê–¥—Ä–µ—Å (URL) —Å–∫–æ–ø–∏—Ä–æ–≤–∞–ª. –ù–µ —Å–ª–æ–∂–Ω–µ–µ, —á–µ–º –º–µ–º –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –∑–∞–ª–∏—Ç—å.",
        icon: "FaServer",
        color: "brand-blue",
        videoSrc: "https://inmctohsodgdohamhzag.supabase.co/storage/v1/object/public/tutorial-1-img-swap//2_upload_new_image.mp4" 
      },
      {
        id: 3,
        title: "–®–ê–ì 3: –°–¢–£–î–ò–Ø! URL_–°–¢–ê–†–´–ô -> URL_–ù–û–í–´–ô -> GO!",
        description: "SUPERVIBE Studio (–¥–∞, —Ç–∞ –∂–µ, —á—Ç–æ –¥–ª—è –∫–∞—Ä—Ç–∏–Ω–æ–∫). –°—Ç–∞—Ä—ã–π URL, –Ω–æ–≤—ã–π URL. –ö–Ω–æ–ø–∫–∞ '–í–ü–ï–†–ï–î'. AI –Ω–µ —Ç—É–ø–æ–π, —Ä–∞–∑–±–µ—Ä–µ—Ç—Å—è.",
        icon: "FaVideo", 
        color: "brand-purple",
        videoSrc: "https://inmctohsodgdohamhzag.supabase.co/storage/v1/object/public/tutorial-1-img-swap//3_sitback_and_relax_its_swappin.mp4" 
      },
      {
        id: 4,
        title: "–®–ê–ì 4: PR –°–û–ó–î–ê–ù! –¢–´ ‚Äì –¢–ê–†–ê–ù–¢–ò–ù–û!",
        description: "PR –≥–æ—Ç–æ–≤. –ü—Ä–æ–≤–µ—Ä—å, —Å–º–µ—Ä–¥–∂–∏. –ì–æ—Ç–æ–≤–æ! –¢–≤–æ–∏ –≤–∏–¥–æ—Å—ã —Ç–µ–ø–µ—Ä—å —Ç–æ–ø—á–∏–∫. –°—á–∏—Ç–∞–π, –û—Å–∫–∞—Ä —Ç–≤–æ–π.",
        icon: "FaMedal",
        color: "brand-green",
        videoSrc: "https://inmctohsodgdohamhzag.supabase.co/storage/v1/object/public/tutorial-1-img-swap//4_profit_check.mp4" 
      }
    ],
    nextLevelTitle: "::FaPhotoFilm:: –¢–´ –¢–ï–ü–ï–†–¨ –í–ò–î–ï–û-–ú–ê–ì–ù–ê–¢!",
    nextLevelText: "–ö–∞—Ä—Ç–∏–Ω–∫–∏, –∏–∫–æ–Ω–∫–∏, –≤–∏–¥–æ—Å—ã... –ß—Ç–æ –¥–∞–ª—å—à–µ? –í–µ—Å—å –ì–æ–ª–ª–∏–≤—É–¥ —Ç–≤–æ–π! <Link href='/repo-xml?flow=imageSwap' class='text-brand-blue hover:underline font-semibold'>SUPERVIBE Studio</Link> –∂–¥–µ—Ç.",
    tryLiveButton: "::FaVideoCamera:: –í –ú–æ–Ω—Ç–∞–∂–Ω—É—é!",
    toggleButtonToNormal: "::FaBook:: –í–µ—Ä–Ω—É—Ç—å –°–∫—É—á–Ω—É—é –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—é", 
  }
};

const colorClasses: Record<string, { text: string; border: string; shadow: string }> = {
  "brand-pink": { text: "text-brand-pink", border: "border-brand-pink/50", shadow: "shadow-brand-pink/40" },
  "brand-blue": { text: "text-brand-blue", border: "border-brand-blue/50", shadow: "shadow-brand-blue/40" },
  "brand-purple": { text: "text-brand-purple", border: "border-brand-purple/50", shadow: "shadow-brand-purple/40" },
  "brand-green": { text: "text-brand-green", border: "border-brand-green/50", shadow: "shadow-brand-green/40" },
  "brand-cyan": { text: "text-brand-cyan", border: "border-brand-cyan/50", shadow: "shadow-brand-cyan/40" },
  "brand-orange": { text: "text-brand-orange", border: "border-brand-orange/50", shadow: "shadow-brand-orange/40" },
};

function VideoSwapTutorialContent() {
  const searchParams = useSearchParams();
  const router = useRouter();
  const { dbUser, isAuthenticated } = useAppContext();
  const { addToast } = useAppToast();

  const initialModeFromUrl = searchParams.get('mode') === 'wtf';
  const [currentMode, setCurrentMode] = useState<'ru' | 'wtf'>(initialModeFromUrl ? 'wtf' : 'ru');
  
  const t = videoSwapTutorialTranslations[currentMode];
  const tutorialQuestId = "video-swap-mission";

  const handleTutorialCompletion = useCallback(async () => {
    if (isAuthenticated && dbUser?.user_id) {
      const result = await markTutorialAsCompleted(dbUser.user_id, tutorialQuestId);
      if (result.success && result.kiloVibesAwarded && result.kiloVibesAwarded > 0) {
        addToast(`::FaCheckCircle:: –ú–∏—Å—Å–∏—è "${videoSwapTutorialTranslations.ru.pageTitle}" –ø—Ä–æ–π–¥–µ–Ω–∞! +${result.kiloVibesAwarded} KiloVibes!`, "success");
      }
      result.newAchievements?.forEach(ach => {
        addToast(`üèÜ –ê—á–∏–≤–∫–∞: ${ach.name}!`, "success", 5000, { description: ach.description });
      });
    }
  }, [isAuthenticated, dbUser, addToast, tutorialQuestId]);

  useEffect(() => {
    handleTutorialCompletion();
  }, [handleTutorialCompletion]);

  const toggleMode = () => {
    const newMode = currentMode === 'ru' ? 'wtf' : 'ru';
    setCurrentMode(newMode);
    if (newMode === 'wtf') {
      router.replace(`/tutorials/video-swap?mode=wtf`);
    }
  };

  useEffect(() => {
    const modeFromUrl = searchParams.get('mode') === 'wtf' ? 'wtf' : 'ru';
    if (modeFromUrl !== currentMode) {
      setCurrentMode(modeFromUrl);
    }
  }, [searchParams, currentMode]);

  const stepsToRender = t.steps; 
  const pageMainColor = "brand-cyan"; 

  return (
    <div className="relative min-h-screen bg-gradient-to-br from-gray-900 via-black to-blue-900/30 text-gray-200 pt-24 pb-20 overflow-x-hidden">
      <div
        className="absolute inset-0 bg-repeat opacity-[0.04] -z-10"
        style={{
          backgroundImage: `linear-gradient(to right, rgba(0, 194, 255, 0.1) 1px, transparent 1px),
                            linear-gradient(to bottom, rgba(0, 194, 255, 0.1) 1px, transparent 1px)`,
          backgroundSize: '45px 45px',
        }}
      ></div>

      <div className="container mx-auto px-4">
        <header className="text-center mb-12 md:mb-16">
          <h1 className={cn(
            "text-4xl sm:text-5xl md:text-6xl font-orbitron font-bold cyber-text glitch mb-4",
            colorClasses[pageMainColor]?.text || "text-brand-cyan"
          )} data-text={t.pageTitle}>
            <VibeContentRenderer content={t.pageTitle} />
          </h1>
          <p className="text-md sm:text-lg md:text-xl text-gray-300 font-mono max-w-3xl mx-auto">
            <VibeContentRenderer content={t.pageSubtitle} />
          </p>
          {!initialModeFromUrl && currentMode === 'ru' && (
           <Button 
            onClick={toggleMode} 
            variant="outline" 
            className={cn(
              "mt-6 bg-card/50 hover:bg-brand-pink/20 transition-all duration-200 text-sm px-4 py-2",
               "border-brand-pink/70 text-brand-pink/90 hover:text-brand-pink"
            )}
          >
            <VibeContentRenderer content={videoSwapTutorialTranslations.ru.toggleButtonToWtf} />
          </Button>
          )}
        </header>

        <div className="space-y-12 md:space-y-20">
          {stepsToRender.map((step, index) => {
            const stepColor = colorClasses[step.color] || colorClasses["brand-purple"];
            const hasVideo = step.hasOwnProperty('videoSrc') && (step as any).videoSrc;

            return (
              <section key={step.id} className={cn(index > 0 && "border-t border-gray-700/50 pt-10 md:pt-14")}>
                <div className={cn(
                  "flex flex-col gap-6 md:gap-10",
                  index % 2 === 0 ? "md:flex-row" : "md:flex-row-reverse"
                )}>
                  <div className={cn("space-y-4 flex flex-col items-start justify-center", hasVideo ? "md:w-2/5 lg:w-1/3" : "w-full")}>
                    <h2 className={cn("text-3xl md:text-4xl font-orbitron flex items-center gap-3", stepColor.text)}>
                      <VibeContentRenderer content={`::${step.icon}::`} className="text-3xl opacity-90" />
                      <VibeContentRenderer content={step.title} />
                    </h2>
                    <div className="text-gray-300 text-base md:text-lg leading-relaxed prose prose-invert prose-sm md:prose-base max-w-none prose-p:my-2 prose-ul:my-2 prose-li:my-1 prose-headings:my-3 prose-a:text-brand-blue hover:prose-a:text-brand-cyan">
                      <VibeContentRenderer content={step.description} />
                    </div>
                  </div>

                  {hasVideo && (
                    <div className="md:w-3/5 lg:w-2/3">
                      <div className={cn("rounded-xl overflow-hidden border-2 shadow-2xl", stepColor.border, stepColor.shadow, "bg-black")}>
                        <ScrollControlledVideoPlayer 
                          src={(step as any).videoSrc}
                          className="w-full" 
                        />
                      </div>
                    </div>
                  )}
                </div>
              </section>
            );
          })}
        </div>

        <section className={cn(
            "mt-20 md:mt-32 text-center pt-12 md:pt-16",
            colorClasses[pageMainColor]?.border ? `border-t ${colorClasses[pageMainColor]?.border}/40` : "border-t border-brand-cyan/40"
            )}>
          <h2 className={cn("text-3xl md:text-4xl font-orbitron mb-6", colorClasses[pageMainColor]?.text || "text-brand-cyan")}>
             <VibeContentRenderer content={t.nextLevelTitle} />
          </h2>
          <p className="text-lg md:text-xl text-gray-300 font-mono max-w-2xl mx-auto mb-8">
            <VibeContentRenderer content={t.nextLevelText} />
          </p>
          <Button asChild className={cn(
             "inline-flex items-center justify-center px-8 py-4 border border-transparent text-lg font-semibold rounded-full text-black transition-transform transform hover:scale-105",
             "shadow-xl",
             pageMainColor === "brand-cyan" && "bg-brand-cyan hover:bg-brand-cyan/80 hover:shadow-cyan-glow/60",
             pageMainColor === "brand-green" && "bg-brand-green hover:bg-brand-green/80 hover:shadow-green-glow/60",
             pageMainColor === "brand-purple" && "bg-brand-purple hover:bg-brand-purple/80 hover:shadow-purple-glow/60"
             )}>
            <Link href="/repo-xml?flow=imageSwap">
                <VibeContentRenderer content={t.tryLiveButton} />
            </Link>
          </Button>
        </section>
      </div>
    </div>
  );
}

export default function VideoSwapTutorialPage() {
  return (
    <Suspense fallback={<TutorialLoader />}>
      <VideoSwapTutorialContent />
    </Suspense>
  );
}