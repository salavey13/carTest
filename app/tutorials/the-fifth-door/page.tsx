"use client";

import React, { useState, useEffect, Suspense, useCallback } from 'react'; 
import Link from 'next/link';
import { useSearchParams, useRouter } from 'next/navigation';
import { cn } from '@/lib/utils';
import { VibeContentRenderer } from '@/components/VibeContentRenderer';
import { Button } from '@/components/ui/button';
import TutorialLoader from '../TutorialLoader'; 
import { useAppContext } from '@/contexts/AppContext';
import { markTutorialAsCompleted } from '@/hooks/cyberFitnessSupabase';
import { useAppToast } from '@/hooks/useAppToast';


const theFifthDoorTutorialTranslations = {
  ru: {
    pageTitle: "–ú–∏—Å—Å–∏—è 5: ::FaKey:: –ü—è—Ç–∞—è –î–≤–µ—Ä—å",
    pageSubtitle: "–ê–≥–µ–Ω—Ç, —ç—Ç–æ —Ñ–∏–Ω–∞–ª. –¢—ã –ø—Ä–æ—à–µ–ª –≤—Å–µ –∫—Ä—É–≥–∏ –æ–±—É—á–µ–Ω–∏—è. –û—Å—Ç–∞–ª—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥ ‚Äì –æ–±—Ä–µ—Å—Ç–∏ –ü–û–õ–ù–£–Æ –°–í–û–ë–û–î–£ –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å. –ó–∞ —ç—Ç–æ–π –¥–≤–µ—Ä—å—é ‚Äì —Ä–µ–∞–ª—å–Ω—ã–π –º–∏—Ä.",
    steps: [
      {
        id: 1,
        title: "–®–∞–≥ 1: –ü–∞—Ç—Ç–µ—Ä–Ω –û—Å–æ–∑–Ω–∞–Ω (–°–Ω–æ–≤–∞!)",
        description: "–¢—ã —É–∂–µ –∑–Ω–∞–µ—à—å: –°—Ç–∞—Ä–æ–µ -> –ù–æ–≤–æ–µ -> Studio -> PR. –≠—Ç–æ—Ç –ø–∞—Ç—Ç–µ—Ä–Ω ‚Äì –∫–ª—é—á –∫–æ –≤—Å–µ–º—É. –ù–æ —á—Ç–æ–±—ã –∏–º –≤–ª–∞–¥–µ—Ç—å –≤ –ø–æ–ª–Ω–æ–π –º–µ—Ä–µ, –Ω—É–∂–Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω–∞—è '–ø–µ—Å–æ—á–Ω–∏—Ü–∞' –∏ –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø.",
        icon: "FaRecycle",
        color: "brand-pink"
      },
      {
        id: 2,
        title: "–®–∞–≥ 2: Google –ê–∫–∫–∞—É–Ω—Ç ‚Äì –ö–ª—é—á –∫ –í—Å–µ–ª–µ–Ω–Ω–æ–π",
        description: "–ë–µ–∑ Google-–∞–∫–∫–∞—É–Ω—Ç–∞ –≤ 2024 ‚Äì –Ω–∏–∫—É–¥–∞. –û–Ω –Ω—É–∂–µ–Ω –¥–ª—è GitHub, –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤–æ –º–Ω–æ–≥–∏—Ö —Å–µ—Ä–≤–∏—Å–∞—Ö. –ï—Å–ª–∏ —É —Ç–µ–±—è –µ–≥–æ –µ—â–µ –Ω–µ—Ç (—Å–µ—Ä—å–µ–∑–Ω–æ?!), <Link href='https://accounts.google.com/signup' target='_blank' class='text-brand-blue hover:underline'>—Å–æ–∑–¥–∞–π</Link>. –≠—Ç–æ —Ç–≤–æ—è —Ü–∏—Ñ—Ä–æ–≤–∞—è –ª–∏—á–Ω–æ—Å—Ç—å.",
        icon: "FaGoogle",
        color: "brand-blue"
      },
      {
        id: 3,
        title: "–®–∞–≥ 3: GitHub ‚Äì –¢–≤–æ—è –¶–∏—Ñ—Ä–æ–≤–∞—è –ö—Ä–µ–ø–æ—Å—Ç—å",
        description: "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è –Ω–∞ <Link href='https://github.com/signup' target='_blank' class='text-brand-blue hover:underline'>GitHub</Link> –∏—Å–ø–æ–ª—å–∑—É—è —Å–≤–æ–π Google-–∞–∫–∫–∞—É–Ω—Ç. GitHub ‚Äì —ç—Ç–æ –º–µ—Å—Ç–æ, –≥–¥–µ —Ö—Ä–∞–Ω–∏—Ç—Å—è –∫–æ–¥, –≥–¥–µ —Ç—ã –±—É–¥–µ—à—å –≤–∏–¥–µ—Ç—å —Å–≤–æ–∏ PR, —É–ø—Ä–∞–≤–ª—è—Ç—å –≤–µ—Ä—Å–∏—è–º–∏. –≠—Ç–æ —Ç–≤–æ–π –¥–æ–º –∫–∞–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞.",
        icon: "FaGithub",
        color: "brand-purple"
      },
      {
        id: 4,
        title: "–®–∞–≥ 4: 2FA ‚Äì –©–∏—Ç –ê–≥–µ–Ω—Ç–∞",
        description: "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –ø—Ä–µ–≤—ã—à–µ –≤—Å–µ–≥–æ. –ù–∞—Å—Ç—Ä–æ–π –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é (2FA) –Ω–∞ GitHub. –≠—Ç–æ –∫–∞–∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–º–æ–∫ –Ω–∞ —Ç–≤–æ–µ–π –∫—Ä–µ–ø–æ—Å—Ç–∏. –ò—Å–ø–æ–ª—å–∑—É–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ-–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä (Google Authenticator, Authy –∏ —Ç.–ø.).",
        icon: "FaUserShield",
        color: "brand-green"
      },
      {
        id: 5,
        title: "–®–∞–≥ 5: –ü—è—Ç–∞—è –î–≤–µ—Ä—å –û—Ç–∫—Ä—ã—Ç–∞!",
        description: "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –ê–≥–µ–Ω—Ç! –¢—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é —ç–∫–∏–ø–∏—Ä–æ–≤–∞–Ω. –£ —Ç–µ–±—è –µ—Å—Ç—å –∑–Ω–∞–Ω–∏—è (–º–∏—Å—Å–∏–∏ 1-4), –ø–æ–Ω–∏–º–∞–Ω–∏–µ (–º–∏—Å—Å–∏—è 4) –∏ —Ç–µ–ø–µ—Ä—å ‚Äì –±–µ–∑–æ–ø–∞—Å–Ω—ã–π, –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø (–º–∏—Å—Å–∏—è 5). –¢—ã –≥–æ—Ç–æ–≤ —Å–æ–∑–¥–∞–≤–∞—Ç—å, –∏–∑–º–µ–Ω—è—Ç—å –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏. –ú–∏—Ä ‚Äì —Ç–≤–æ—è –ø–µ—Å–æ—á–Ω–∏—Ü–∞. THE END... IS JUST THE BEGINNING.",
        icon: "FaDoorOpen",
        color: "brand-yellow"
      }
    ],
    nextLevelTitle: "::FaInfinity:: –¢—ã ‚Äì –ü–æ–≤–µ–ª–∏—Ç–µ–ª—å –ö–æ–¥–∞!",
    nextLevelText: "–í—Å–µ –º–∏—Å—Å–∏–∏ –ø—Ä–æ–π–¥–µ–Ω—ã. –í—Å–µ –ø–µ—á–∞—Ç–∏ —Å–ª–æ–º–∞–Ω—ã. –¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è –µ—Å—Ç—å –≤—Å—ë, —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –ª–µ–≥–µ–Ω–¥–æ–π. <Link href='/repo-xml' class='text-brand-blue hover:underline font-semibold'>SUPERVIBE Studio</Link> –∂–¥–µ—Ç —Ç–≤–æ–∏—Ö –≥–µ–Ω–∏–∞–ª—å–Ω—ã—Ö –∏–¥–µ–π. –í–ø–µ—Ä—ë–¥, —Ç–≤–æ—Ä–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é!",
    tryLiveButton: "::FaRocket:: –ö –ó–í–Å–ó–î–ê–ú!",
    toggleButtonToWtf: "::FaPooStorm:: –í–∫–ª—é—á–∏—Ç—å –†–µ–∂–∏–º –ë–û–ì–ê (WTF?!)",
  },
  wtf: {
    pageTitle: "::FaKey:: –ü–Ø–¢–ê–Ø –î–í–ï–†–¨! –í–´–•–û–î –ò–ó –ú–ê–¢–†–ò–¶–´, –ë–õ*–¢–¨!",
    pageSubtitle: "–•–í–ê–¢–ò–¢ –î–†–û–ß–ò–¢–¨ –ù–ê –õ–û–ö–ê–õ–ö–ï –ò –°–ú–û–¢–†–ï–¢–¨ –Æ–¢–£–ë–ß–ò–ö! –í–†–ï–ú–Ø –°–¢–ê–¢–¨ –†–ï–ê–õ–¨–ù–´–ú –ö–ò–ë–ï–†-–ü–ê–ü–û–ô, –ö–û–¢–û–†–´–ô –ö–û–ù–¢–†–û–õ–ò–†–£–ï–¢ –°–í–û–ô –ö–û–î –ò –°–í–û–Æ –ñ–ò–ó–ù–¨! –≠–¢–û –§–ò–ù–ê–õ–¨–ù–´–ô –ë–û–°–° –û–ë–£–ß–ï–ù–ò–Ø ‚Äì –¢–´ –°–ê–ú!",
    steps: [
      {
        id: 1,
        title: "–®–ê–ì 1: 4 –®–ê–ì–ê? –¢–´ –£–ñ–ï –ë–û–ì –≠–¢–û–ì–û –î–ï–†–¨–ú–ê!",
        description: "–°—Ç–∞—Ä–æ–µ -> –ù–æ–≤–æ–µ -> Studio -> PR. –ï—Å–ª–∏ —Ç—ã –¥–æ —Å–∏—Ö –ø–æ—Ä –Ω–µ –ø–æ–Ω—è–ª —ç—Ç–æ—Ç –ø—Ä–∏–∫–æ–ª, —Ç–æ —Ç–µ–±–µ –Ω–µ —Å—é–¥–∞, –±—Ä–∞—Ç–∞–Ω. –≠—Ç–æ –∫–∞–∫ –ø—ã—Ç–∞—Ç—å—Å—è –∏–≥—Ä–∞—Ç—å –≤ –î–æ—Ç—É –±–µ–∑ –º—ã—à–∫–∏. –ó–∞–∫—Ä—ã–≤–∞–π –≤–∫–ª–∞–¥–∫—É.",
        icon: "FaRecycle",
        color: "brand-pink"
      },
      {
        id: 2,
        title: "–®–ê–ì 2: GOOGLE –ê–ö–ö ‚Äì –¢–í–û–ô –ü–ê–°–ü–û–†–¢ –í –ö–ò–ë–ï–†–ü–ê–ù–ö!",
        description: "–ù–µ—Ç –≥—É–≥–ª-–∞–∫–∫–∞? –¢—ã —Ç–∏–ø–∞ –∏–∑ –ø–µ—â–µ—Ä—ã –≤—ã–ª–µ–∑? <Link href='https://accounts.google.com/signup' target='_blank' class='text-brand-blue hover:underline'>–ë–ï–ì–û–ú –î–ï–õ–ê–¢–¨!</Link> Google - —ç—Ç–æ –¢–≤–æ–π –ü–∞–ø–∞–†–∏–º—Å–∫–∏–π –≤ –ò–Ω–µ—Ç–µ!",
        icon: "FaGoogle",
        color: "brand-blue"
      },
      {
        id: 3,
        title: "–®–ê–ì 3: GITHUB ‚Äì –¢–í–û–Ø –ö–ò–ë–ï–†-–ë–ê–ó–ê –û–ü–ï–†–ê–¶–ò–ô!",
        description: "<Link href='https://github.com/signup' target='_blank' class='text-brand-blue hover:underline'>–†–µ–≥–∞–π GitHub</Link> —á–µ—Ä–µ–∑ Google. –¢–∞–º —Ç–≤–æ–π –∫–æ–¥ –±—É–¥–µ—Ç –∂–∏—Ç—å, —Ç–∞–º —Ç–≤–æ–∏ PR-—á–∏–∫–∏. –≠—Ç–æ –∫–∞–∫ —Ç–≤–æ—è –ª–∏—á–Ω–∞—è –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏—è Arasaka, —Ç–æ–ª—å–∫–æ —Ç—ã —Ç—É—Ç —Ä–µ—à–∞–µ—à—å.",
        icon: "FaGithub",
        color: "brand-purple"
      },
      {
        id: 4,
        title: "–®–ê–ì 4: 2FA ‚Äì –¢–í–û–ô –õ–ò–ß–ù–´–ô \"SANDIVISTAN\"!",
        description: "–î–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–∫–∞ –Ω–∞ GitHub ‚Äì –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û! –ß—Ç–æ–±—ã –Ω–∏–∫–∞–∫–æ–π netrunner –Ω–µ —É–≥–Ω–∞–ª —Ç–≤–æ–π –∫–æ–¥. –°–∫–∞—á–∞–π Authy –∏–ª–∏ Google Authenticator. –≠—Ç–æ –∫–∞–∫ –∏–º–ø–ª–∞–Ω—Ç –¥–ª—è –∫–∏–±–µ—Ä-–Ω–∏–Ω–¥–∑—è ‚Äì –±–µ–∑ –Ω–µ–≥–æ —Ç—ã –º—è—Å–æ.",
        icon: "FaUserShield",
        color: "brand-green"
      },
      {
        id: 5,
        title: "–®–ê–ì 5: –î–í–ï–†–¨ –û–¢–ö–†–´–¢–ê! –¢–´ ‚Äì JOHNNY SILVERHAND!",
        description: "–í–°–Å! –¢—ã –ø—Ä–æ—à–µ–ª –∏–≥—Ä—É! –£ —Ç–µ–±—è –µ—Å—Ç—å —Å–∫–∏–ª–ª—ã, –º–æ–∑–≥ –∏ —Ç–µ–ø–µ—Ä—å –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø! –¢—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ –∫–æ–¥–µ—Ä, —Ç—ã ‚Äì –ö–ò–ë–ï–†–ë–û–ì —Å–≤–æ–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞! –ò–¥–∏ –∏ WAKE THE FUCK UP, SAMURAI! WE HAVE A CITY TO BURN!",
        icon: "FaDoorOpen",
        color: "brand-yellow"
      }
    ],
    nextLevelTitle: "::FaSatelliteDish:: –¢–´ –ù–ï –ü–†–û–°–¢–û –í –ú–ê–¢–†–ò–¶–ï, –¢–´ –ò –ï–°–¢–¨ –ú–ê–¢–†–ò–¶–ê!",
    nextLevelText: "–¢—ã ‚Äì –î–∂–æ–Ω–Ω–∏ –°–∏–ª—å–≤–µ—Ä—Ö–µ–Ω–¥ —ç—Ç–æ–≥–æ –≥–æ—Ä–æ–¥–∞. –ö–æ–¥ ‚Äì —Ç–≤–æ—è –≥–∏—Ç–∞—Ä–∞. <Link href='/repo-xml' class='text-brand-blue hover:underline font-semibold'>SUPERVIBE Studio</Link> ‚Äì —Ç–≤–æ—è —Å—Ü–µ–Ω–∞. –ó–∞–∂–≥–∏!",
    tryLiveButton: "::FaGuitar:: –í–ü–ï–†–ï–î, –í NIGHT CITY!",
    toggleButtonToNormal: "::FaBook:: –í–µ—Ä–Ω—É—Ç—å –°–∫—É—á–Ω—É—é –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—é", 
  }
};

const colorClasses: Record<string, { text: string; border: string; shadow: string }> = {
  "brand-pink": { text: "text-brand-pink", border: "border-brand-pink/50", shadow: "shadow-brand-pink/40" },
  "brand-blue": { text: "text-brand-blue", border: "border-brand-blue/50", shadow: "shadow-brand-blue/40" },
  "brand-purple": { text: "text-brand-purple", border: "border-brand-purple/50", shadow: "shadow-brand-purple/40" },
  "brand-green": { text: "text-brand-green", border: "border-brand-green/50", shadow: "shadow-brand-green/40" },
  "brand-yellow": { text: "text-brand-yellow", border: "border-brand-yellow/50", shadow: "shadow-brand-yellow/40" }, 
  "brand-lime": { text: "text-neon-lime", border: "border-neon-lime/50", shadow: "shadow-neon-lime/40" }, 
};

function TheFifthDoorTutorialContent() {
  const searchParams = useSearchParams();
  const router = useRouter();
  const { dbUser, isAuthenticated } = useAppContext();
  const { addToast } = useAppToast();

  const initialModeFromUrl = searchParams.get('mode') === 'wtf';
  const [currentMode, setCurrentMode] = useState<'ru' | 'wtf'>(initialModeFromUrl ? 'wtf' : 'ru');
  
  const t = theFifthDoorTutorialTranslations[currentMode];
  const tutorialQuestId = "the-fifth-door-mission";

  const handleTutorialCompletion = useCallback(async () => {
    if (isAuthenticated && dbUser?.user_id) {
      const result = await markTutorialAsCompleted(dbUser.user_id, tutorialQuestId);
      if (result.success && result.kiloVibesAwarded && result.kiloVibesAwarded > 0) {
        addToast(`::FaCheckCircle:: –ú–∏—Å—Å–∏—è "${theFifthDoorTutorialTranslations.ru.pageTitle}" –ø—Ä–æ–π–¥–µ–Ω–∞! +${result.kiloVibesAwarded} KiloVibes!`, "success");
      }
      result.newAchievements?.forEach(ach => {
        addToast(`üèÜ –ê—á–∏–≤–∫–∞: ${ach.name}!`, "success", 5000, { description: ach.description });
      });
    }
  }, [isAuthenticated, dbUser, addToast, tutorialQuestId]);

  useEffect(() => {
    handleTutorialCompletion();
  }, [handleTutorialCompletion]);

  const toggleMode = () => {
    const newMode = currentMode === 'ru' ? 'wtf' : 'ru';
    setCurrentMode(newMode);
    if (newMode === 'wtf') {
      router.replace(`/tutorials/the-fifth-door?mode=wtf`);
    }
  };

  useEffect(() => {
    const modeFromUrl = searchParams.get('mode') === 'wtf' ? 'wtf' : 'ru';
    if (modeFromUrl !== currentMode) {
      setCurrentMode(modeFromUrl);
    }
  }, [searchParams, currentMode]);

  const stepsToRender = t.steps;
  const pageMainColor = "brand-yellow"; 

  return (
    <div className="relative min-h-screen bg-gradient-to-br from-gray-900 via-black to-yellow-900/30 text-gray-200 pt-24 pb-20 overflow-x-hidden">
      <div
        className="absolute inset-0 bg-repeat opacity-[0.04] -z-10"
        style={{
          backgroundImage: `linear-gradient(to right, rgba(229, 191, 76, 0.1) 1px, transparent 1px),
                            linear-gradient(to bottom, rgba(229, 191, 76, 0.1) 1px, transparent 1px)`,
          backgroundSize: '45px 45px',
        }}
      ></div>

      <div className="container mx-auto px-4">
        <header className="text-center mb-12 md:mb-16">
          <h1 className={cn(
            "text-4xl sm:text-5xl md:text-6xl font-orbitron font-bold cyber-text glitch mb-4",
            colorClasses[pageMainColor]?.text || "text-brand-yellow"
          )} data-text={t.pageTitle}>
            <VibeContentRenderer content={t.pageTitle} />
          </h1>
          <p className="text-md sm:text-lg md:text-xl text-gray-300 font-mono max-w-3xl mx-auto">
            <VibeContentRenderer content={t.pageSubtitle} />
          </p>
           {!initialModeFromUrl && currentMode === 'ru' && (
           <Button 
            onClick={toggleMode} 
            variant="outline" 
            className={cn(
              "mt-6 bg-card/50 hover:bg-brand-pink/20 transition-all duration-200 text-sm px-4 py-2",
              "border-brand-pink/70 text-brand-pink/90 hover:text-brand-pink"
            )}
          >
            <VibeContentRenderer content={theFifthDoorTutorialTranslations.ru.toggleButtonToWtf} />
          </Button>
           )}
        </header>

        <div className="space-y-12 md:space-y-16">
          {stepsToRender.map((step, index) => {
            const stepColor = colorClasses[step.color] || colorClasses["brand-purple"];

            return (
              <section key={step.id} className={cn(index > 0 && "border-t border-gray-700/50 pt-10 md:pt-12")}>
                <div className={cn(
                  "flex flex-col items-center text-center gap-4 md:gap-6",
                )}>
                  <div className={cn("space-y-3 flex flex-col items-center justify-center w-full max-w-2xl")}>
                    <h2 className={cn("text-3xl md:text-4xl font-orbitron flex items-center justify-center gap-3", stepColor.text)}>
                      <VibeContentRenderer content={`::${step.icon}::`} className="text-3xl opacity-90" />
                      <VibeContentRenderer content={step.title} />
                    </h2>
                    <div className="text-gray-300 text-base md:text-lg leading-relaxed prose prose-invert prose-sm md:prose-base max-w-none prose-p:my-2 prose-ul:my-2 prose-li:my-1 prose-headings:my-3 prose-a:text-brand-blue hover:prose-a:text-brand-cyan">
                      <VibeContentRenderer content={step.description} />
                    </div>
                  </div>
                </div>
              </section>
            );
          })}
        </div>

        <section className={cn(
            "mt-20 md:mt-24 text-center pt-12 md:pt-16",
            colorClasses[pageMainColor]?.border ? `border-t ${colorClasses[pageMainColor]?.border}/40` : "border-t border-brand-yellow/40"
            )}>
          <h2 className={cn("text-3xl md:text-4xl font-orbitron mb-6", colorClasses[pageMainColor]?.text || "text-brand-yellow")}>
             <VibeContentRenderer content={t.nextLevelTitle} />
          </h2>
          <p className="text-lg md:text-xl text-gray-300 font-mono max-w-2xl mx-auto mb-8">
            <VibeContentRenderer content={t.nextLevelText} />
          </p>
          <Button asChild className={cn(
             "inline-flex items-center justify-center px-8 py-4 border border-transparent text-lg font-semibold rounded-full text-black transition-transform transform hover:scale-105",
             "shadow-xl",
             pageMainColor === "brand-yellow" && "bg-brand-yellow hover:bg-yellow-400 text-black hover:shadow-yellow-glow/60",
             )}>
            <Link href="/repo-xml">
                <VibeContentRenderer content={t.tryLiveButton} />
            </Link>
          </Button>
        </section>
      </div>
    </div>
  );
}

export default function TheFifthDoorPage() {
  return (
    <Suspense fallback={<TutorialLoader />}>
      <TheFifthDoorTutorialContent />
    </Suspense>
  );
}