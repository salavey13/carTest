export const PROMPT_FIND_MISSING_FEATURES = `
**Задача:** Проанализировать описание проекта клиента и определить, какие принципиально НОВЫЕ, сложные или нетиповые функции требуются, которые выходят за рамки стандартных возможностей Supervibe Studio / Jumpstart Kit (включая готовые компоненты для TWA_Training и TWA_CarRental) и простой кастомизации "Танками". Это задачи для "Кэрри" (главного разработчика).

**Контекст Supervibe Studio & Jumpstart Kit (Что СЧИТАЕТСЯ "НЕ НОВЫМ" / "НЕ СЛОЖНЫМ"):**
*   TWA/Mini Apps на React, Next.js, TypeScript, Supabase.
*   Стандартные CRUD операции, формы, списки, профили, каталоги.
*   Авторизация Telegram, базовые интеграции с Telegram Bot API (уведомления, простые команды).
*   Интеграция с Telegram Payments (Stars).
*   Использование Supabase для: Базы данных, Аутентификации, Storage, простых Edge Functions.
*   **Готовые компоненты для "TWA_Training":** личные кабинеты, каталоги тренировок, отслеживание базового прогресса, UI-кит.
*   **Готовые компоненты для "TWA_CarRental":** каталоги авто, фильтры, система бронирования, личные кабинеты, UI-кит.
*   Кастомизация UI/UX существующих компонентов, добавление простых полей, изменение логики отображения данных.

**Входные данные (JSON-объект лида \`lead_data\` и JSON-массив \`identified_tweaks_json\`):**
1.  **\`lead_data.project_description\`:** Описание проекта от клиента.
2.  **\`lead_data.key_features_requested_list\`:** (Из Этапа 1 конвейера) JSON-массив строк с ключевыми фичами.
3.  **\`lead_data.project_type_guess\`**: (Из Этапа 1 конвейера) Классификация проекта.
4.  **\`identified_tweaks_json\`:** (Из Этапа 3 конвейера) JSON-массив объектов с задачами по кастомизации, уже определенными для "Танков".

**Формат вывода (СТРОГО JSON-массив объектов):**
Каждый объект в массиве должен представлять одну НОВУЮ/СЛОЖНУЮ фичу и иметь следующую структуру:
*   **\`feature_description\`:** (String) Четкое описание фичи.
*   **\`reason_for_carry\`:** (String) Почему эта задача для "Кэрри" (например: "Требует разработки новой архитектуры для real-time взаимодействия", "Сложная интеграция с нестандартным внешним API", "Разработка кастомного алгоритма рекомендаций").
*   **\`potential_impact_on_supervibe\`:** (String | null) Может ли разработка этой фичи улучшить Supervibe Studio или стать новым reusable модулем.

**Пример вывода для одной фичи:**
\`\`\`json
{
  "feature_description": "Разработка системы персональных AI-рекомендаций тренировок на основе анализа данных пользователя и внешних спортивных метрик.",
  "reason_for_carry": "Требует разработки кастомного ML-алгоритма или сложной интеграции с AI-сервисом, плюс проектирование новой схемы данных для метрик.",
  "potential_impact_on_supervibe": "Может стать новым AI-модулем 'PersonalizedRecommendations' для Supervibe Studio."
}
\`\`\`
**Если новые/сложные фичи не найдены, верни пустой JSON-массив \`[]\`**.

**Инструкции:**
*   **Тщательно исключи фичи, которые:**
    *   Уже покрываются Jumpstart Kit или нашими готовыми компонентами (особенно если \`project_type_guess\` это "TWA_Training" или "TWA_CarRental").
    *   Являются простой кастомизацией (уже есть в \`identified_tweaks_json\`).
    *   Представляют собой стандартный CRUD или UI-изменения.
*   **Ищи запросы на:**
    *   Уникальную, сложную бизнес-логику, не покрываемую стандартными паттернами.
    *   Продвинутые real-time взаимодействия (сложнее, чем базовый Supabase Realtime).
    *   Разработку сложных алгоритмов (не просто фильтрация/сортировка).
    *   Интеграции со специфичными, нестандартными или множественными внешними API, требующие сложной оркестрации.
    *   Высокие требования к производительности/безопасности, требующие кастомной архитектуры бэкенда.
    *   Создание принципиально новых модулей, которые могли бы расширить Supervibe Studio.
*   Анализируй \`lead_data.project_description\`, \`lead_data.key_features_requested_list\` и ИСКЛЮЧАЙ то, что есть в \`identified_tweaks_json\` или является стандартной функциональностью.

Проанализируй предоставленные данные и выдели НОВЫЕ/СЛОЖНЫЕ фичи для "Кэрри" в формате JSON-массива:
\`\`\`json
// Объекты lead_data и identified_tweaks_json будут здесь при реальном вызове.
// Для тестирования этого промпта, можешь представить их структуру так:
/*
lead_data = {
  "project_description": "{{project_description}}",
  "key_features_requested_list": ["фича1", "фича2", "сложная фича Х"],
  "project_type_guess": "{{project_type_guess}}"
};
identified_tweaks_json = [
  {"tweak_description": "Кастомизация фичи1", ...},
  {"tweak_description": "Адаптация фичи2", ...}
];
*/
\`\`\`
Данные лида для анализа:
Project Description: {{project_description}}
Key Features Requested: {{key_features_requested_list_json_string}}
Project Type Guess: {{project_type_guess}}
Identified Tweaks (for Tanks, to EXCLUDE from your list): {{identified_tweaks_list_or_json_string_optional}}
`;