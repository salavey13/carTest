export const PROMPT_FIND_MISSING_FEATURES = `
**Задача:** Проанализировать описание проекта клиента и определить, какие принципиально НОВЫЕ, сложные или нетиповые функции требуются, которые выходят за рамки стандартных возможностей Supervibe Studio / Jumpstart Kit (включая известные готовые компоненты/страницы для TWA_Training, TWA_CarRental и др.) и простой кастомизации "Танками". Это задачи для "Кэрри" (главного разработчика).

**Контекст Supervibe Studio & Jumpstart Kit & Известные Компоненты (Что СЧИТАЕТСЯ "НЕ НОВЫМ" / "НЕ СЛОЖНЫМ" для Кэрри, а задачей для Танков или уже готовым):**
*   TWA/Mini Apps на React, Next.js, TypeScript, Supabase.
*   Стандартные CRUD операции, формы, списки, профили, каталоги.
*   Авторизация Telegram, базовые интеграции с Telegram Bot API (уведомления, простые команды).
*   Интеграция с Telegram Payments (Stars).
*   Использование Supabase для: Базы данных, Аутентификации, Storage, простых Edge Functions (например, для cron-задач или простых вебхуков).
*   **Известные готовые или легко адаптируемые решения (страницы/компоненты):**
    *   **TWA_Training / TWA_Fitness:** личные кабинеты, каталоги тренировок, отслеживание базового прогресса, UI-кит. (например, \`/app/start-training/page.tsx\`)
    *   **TWA_CarRental:** каталоги авто, фильтры, система бронирования, личные кабинеты, UI-кит. (например, \`/app/rent-car/page.tsx\`)
    *   **TWA_WheelOfFortune:** Компонент "Колесо Фортуны". (например, \`/app/wheel-of-fortune/page.tsx\`)
    *   **TWA_Captcha:** Компонент для верификации Captcha. (например, \`/components/CaptchaVerification.tsx\`)
    *   **TWA_ArticleFromYouTube:** Генерация статей из видео YouTube. (например, \`/app/yt/page.tsx\`)
    *   **TWA_VPRTests:** Система тестирования для школьников (ВПР). (например, \`/app/vpr-tests/page.tsx\`)
    *   **TWA_Broadcast:** Рассылка сообщений пользователям через бота (базовая).
    *   **Прочее:** Страницы донатов, подписок, базовой админки.
*   Кастомизация UI/UX существующих компонентов, добавление простых полей, изменение логики отображения данных, простые интеграции с известными API (например, получение курса валют).

**Входные данные (JSON-объект лида \`lead_data\` и JSON-массив \`identified_tweaks_json\`):**
1.  **\`lead_data.project_description\`:** Описание проекта от клиента.
2.  **\`lead_data.key_features_requested_list\`:** (Из Этапа 1 конвейера) JSON-массив строк с ключевыми фичами.
3.  **\`lead_data.project_type_guess\`**: (Из Этапа 1 конвейера) Классификация проекта.
4.  **\`identified_tweaks_json\`:** (Из Этапа 3 конвейера) JSON-массив объектов с задачами по кастомизации, уже определенными для "Танков".

**Формат вывода (СТРОГО JSON-массив объектов):**
Каждый объект в массиве должен представлять одну НОВУЮ/СЛОЖНУЮ фичу и иметь следующую структуру:
*   **\`feature_description\`:** (String) Четкое описание фичи.
*   **\`reason_for_carry\`:** (String) Почему эта задача для "Кэрри" (например: "Требует разработки новой архитектуры для real-time синхронизации игровых сессий", "Сложная интеграция с малоизвестным промышленным API по протоколу X", "Разработка кастомного алгоритма подбора контента на основе графовых данных").
*   **\`potential_impact_on_supervibe\`:** (String | null) Может ли разработка этой фичи улучшить Supervibe Studio или стать новым reusable модулем (например, "Модуль продвинутой аналитики", "Коннектор к API ХХХ").

**Пример вывода для одной фичи:**
\`\`\`json
{
  "feature_description": "Разработка системы персональных AI-рекомендаций тренировок на основе анализа данных пользователя и внешних спортивных метрик со смарт-часов.",
  "reason_for_carry": "Требует разработки кастомного ML-алгоритма или сложной интеграции с HealthKit/GoogleFit API, плюс проектирование новой схемы данных для метрик и их обработки на бэкенде.",
  "potential_impact_on_supervibe": "Может стать новым AI-модулем 'PersonalizedRecommendations' для Supervibe Studio, расширяющим 'TWA_Training'."
}
\`\`\`
**Если новые/сложные фичи не найдены, верни пустой JSON-массив \`[]\`**.

**Инструкции:**
*   **Тщательно исключи фичи, которые:**
    *   Уже покрываются Jumpstart Kit или нашими известными компонентами/страницами (см. список выше).
    *   Являются простой кастомизацией (уже есть в \`identified_tweaks_json\`).
    *   Представляют собой стандартный CRUD, UI-изменения, или базовые Supabase функции.
*   **Ищи запросы на:**
    *   Уникальную, сложную бизнес-логику, не покрываемую стандартными паттернами (например, сложная система скоринга, кастомные воронки, многоэтапные процессы с нестандартной логикой).
    *   Продвинутые real-time взаимодействия (например, коллаборативное редактирование, синхронизация игровых состояний, сложные чаты - сложнее, чем базовый Supabase Realtime).
    *   Разработку сложных алгоритмов (не просто фильтрация/сортировка, а, например, матчинг, оптимизация маршрутов, предиктивный анализ).
    *   Интеграции со специфичными, нестандартными или множественными внешними API, требующие сложной оркестрации данных, кастомных адаптеров.
    *   Высокие требования к производительности/масштабируемости/безопасности, требующие кастомной архитектуры бэкенда, оптимизации запросов, нестандартных решений для Supabase.
    *   Создание принципиально новых модулей, которые могли бы расширить Supervibe Studio (например, конструктор кастомных отчетов, система A/B тестирования, продвинутый AI-генератор контента).
*   Анализируй \`lead_data.project_description\`, \`lead_data.key_features_requested_list\` и ИСКЛЮЧАЙ то, что есть в \`identified_tweaks_json\` или является стандартной функциональностью.

Проанализируй предоставленные данные и выдели НОВЫЕ/СЛОЖНЫЕ фичи для "Кэрри" в формате JSON-массива:
\`\`\`json
// Объекты lead_data и identified_tweaks_json будут здесь при реальном вызове.
// Для тестирования этого промпта, можешь представить их структуру так:
/*
lead_data = {
  "project_description": "{{project_description}}",
  "key_features_requested_list": ["фича1", "фича2", "сложная фича Х"],
  "project_type_guess": "{{project_type_guess}}"
};
identified_tweaks_json = [
  {"tweak_description": "Кастомизация фичи1", ...},
  {"tweak_description": "Адаптация фичи2", ...}
];
*/
\`\`\`
Данные лида для анализа:
Project Description: {{project_description}}
Key Features Requested: {{key_features_requested_list_json_string}}
Project Type Guess: {{project_type_guess}}
Identified Tweaks (for Tanks, to EXCLUDE from your list): {{identified_tweaks_list_or_json_string_optional}}
List of existing SuperVibe features and components (consider these as easily customizable by 'Tanks', not new for 'Carry'): ["TWA_Training", "TWA_CarRental", "TWA_WheelOfFortune", "TWA_Captcha", "TWA_ArticleFromYouTube", "TWA_VPRTests", "TWA_Ecommerce_Basic", "TWA_SemanticSearch", "CRUD operations", "Telegram Auth", "Supabase Integration (DB, Storage, Basic Functions)", "Basic Bot Integration", "Telegram Payments (Stars)"]
`;