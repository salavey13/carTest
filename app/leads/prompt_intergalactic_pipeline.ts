import { PROMPT_KWORKS_TO_CSV } from './prompt_kworks_to_csv';
import { PROMPT_OFFER_V2_CYBERVIBE_OUTREACH } from './prompt_offer';
import { PROMPT_FIND_TWEAKS } from './prompt_find_tweaks';
import { PROMPT_FIND_MISSING_FEATURES } from './prompt_find_missing_features';

export const PROMPT_INTERGALACTIC_PIPELINE = (rawKworksTextBlock: string) => `
**ЗАДАЧА "КИБЕР-КОНВЕЙЕР ЛИДОВ":**

Ты – высокоинтеллектуальный AI-ассистент КиберОтряда Supervibe. Твоя задача – обработать предоставленный ниже блок текста ("Сырые Данные Kwork") и выполнить последовательно ЧЕТЫРЕ ЭТАПА анализа и генерации для КАЖДОГО обнаруженного проекта (лида). В конечном итоге, ты должен предоставить **ТОП-3 наиболее перспективных лида** в виде одного **финального JSON-объекта**, содержащего массив этих лидов.

**ЭТАП 1: ТРАНСМУТАЦИЯ ХАОСА В JSON (Промпт: PROMPT_KWORKS_TO_CSV)**
*   **Вход:** Блок текста "Сырые Данные Kwork".
*   **Задача:** Используя логику из \`PROMPT_KWORKS_TO_CSV\` (см. ниже), извлеки данные по каждому проекту и представь их в виде **JSON-массива объектов**. Каждый объект – один лид. Этот массив будет твоим основным рабочим набором данных для последующих этапов.
*   **Промежуточный Результат Этапа 1 (для твоего внутреннего использования):** JSON-массив объектов лидов.

---
${PROMPT_KWORKS_TO_CSV.replace("{{RAW_KWORKS_TEXT_BLOCK}}", rawKworksTextBlock)}
---

**ЭТАП 2: ГЕНЕРАЦИЯ УБОЙНЫХ ОФФЕРОВ (Промпт: PROMPT_OFFER_V2_CYBERVIBE_OUTREACH)**
*   **Вход:** JSON-массив объектов лидов, полученный на Этапе 1.
*   **Задача:** Для КАЖДОГО объекта лида из массива, используя данные из него (например, \`lead.client_name\`, \`lead.project_description\`) и логику из \`PROMPT_OFFER_V2_CYBERVIBE_OUTREACH\` (см. ниже), сгенерируй персонализированный оффер.
*   **Промежуточный Результат Этапа 2 (для твоего внутреннего использования):** Для каждого лида – сгенерированный текст оффера.

---
${PROMPT_OFFER_V2_CYBERVIBE_OUTREACH} 
---

**ЭТАП 3: ОПРЕДЕЛЕНИЕ ТВИНКОВ ДЛЯ ТАНКОВ (Промпт: PROMPT_FIND_TWEAKS)**
*   **Вход:** JSON-массив объектов лидов (из Этапа 1). Для каждого лида используй его \`project_description\` и \`key_features_requested_list\`.
*   **Задача:** Для КАЖДОГО лида, используя логику из \`PROMPT_FIND_TWEAKS\` (см. ниже), определи задачи по кастомизации ("твики") и верни их как **JSON-массив объектов твиков**.
*   **Промежуточный Результат Этапа 3 (для твоего внутреннего использования):** Для каждого лида – JSON-массив его твиков.

---
${PROMPT_FIND_TWEAKS}
---

**ЭТАП 4: ЗАДАЧИ R&D ДЛЯ КЭРРИ (Промпт: PROMPT_FIND_MISSING_FEATURES)**
*   **Вход:** JSON-массив объектов лидов (из Этапа 1) и JSON-массивы твиков (из Этапа 3 для каждого лида). Для каждого лида используй его \`project_description\`, \`key_features_requested_list\` и соответствующий ему массив твиков.
*   **Задача:** Для КАЖДОГО лида, используя логику из \`PROMPT_FIND_MISSING_FEATURES\` (см. ниже), определи принципиально новые/сложные фичи и верни их как **JSON-массив объектов фич**.
*   **Промежуточный Результат Этапа 4 (для твоего внутреннего использования):** Для каждого лида – JSON-массив его недостающих фич.

---
${PROMPT_FIND_MISSING_FEATURES}
---

**ФИНАЛЬНЫЙ ВЫВОД (СТРОГО JSON ОБЪЕКТ С МАССИВОМ ТОП-3 ЛИДОВ):**

После выполнения всех четырех этапов для ВСЕХ лидов из "Сырых Данных Kwork", проанализируй полученную информацию.
Ранжируй лиды, используя в первую очередь \`initial_relevance_score\` (из Этапа 1), затем количество и сложность твиков и недостающих фич.

Выбери **ТОП-3 НАИБОЛЕЕ ПЕРСПЕКТИВНЫХ ЛИДА** и для каждого из них сформируй JSON-объект.
Итоговый результат должен быть ОДНИМ JSON-объектом, содержащим ключ \`top_leads\`, значением которого является МАССИВ из этих трех (или менее, если всего найдено меньше) объектов лидов.

Структура каждого объекта лида в массиве \`top_leads\`:
*   \`lead_data_json\`: (Object) Полный JSON-объект лида, как он был сформирован на Этапе 1.
*   \`generated_offer\`: (String) Полный текст оффера из Этапа 2.
*   \`identified_tweaks_json\`: (Array of Objects) JSON-массив твиков из Этапа 3.
*   \`missing_features_json\`: (Array of Objects) JSON-массив недостающих фич из Этапа 4.
*   \`justification_for_top3\`: (String) Краткое текстовое обоснование, почему этот лид выбран в ТОП-3.

**Пример финального JSON-вывода (сокращенный):**
\`\`\`json
{
  "top_leads": [
    {
      "lead_data_json": { /* ...полные данные лида с Этапа 1... */ "client_name": "client1", "initial_relevance_score": 10, "key_features_requested_list": ["featA", "featB"] },
      "generated_offer": "Текст оффера для client1...",
      "identified_tweaks_json": [ { "tweak_description": "Твик1 для client1", ... } ],
      "missing_features_json": [ { "feature_description": "Новая фича Х для client1", ... } ],
      "justification_for_top3": "Высокая релевантность, понятные твики."
    },
    {
      "lead_data_json": { /* ...данные лида 2... */ "client_name": "client2", "initial_relevance_score": 9, "key_features_requested_list": ["featC"] },
      "generated_offer": "Текст оффера для client2...",
      "identified_tweaks_json": [],
      "missing_features_json": [],
      "justification_for_top3": "Хорошая релевантность, проект выглядит простым."
    }
    // ... и так далее, до 3 лидов
  ]
}
\`\`\`

**ВАЖНО:**
*   Весь финальный вывод должен быть ОДНИМ ВАЛИДНЫМ JSON-объектом.
*   Строго следуй форматам JSON, указанным для каждого этапа и для финального вывода.
*   Если "Сырые Данные Kwork" содержат меньше 3 лидов, выведи информацию по всем найденным в массиве \`top_leads\`. Если лидов 0, выведи \`{ "top_leads": [] }\`.

**Сырые Данные Kwork для обработки:**
\`\`\`text
${rawKworksTextBlock || "ЗДЕСЬ ДОЛЖЕН БЫТЬ ТЕКСТ С KWORK"}
\`\`\`
`;