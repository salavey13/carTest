import type { Config } from "tailwindcss";
import { fontFamily } from "tailwindcss/defaultTheme";
import animate from "tailwindcss-animate";
import typography from "@tailwindcss/typography";

// Helper функция hexToRgba остается, если нужна где-то еще

const config: Config = {
  darkMode: ["class"],
  content: [
    "./pages/**/*.{js,ts,jsx,tsx,mdx}",
    "./components/**/*.{js,ts,jsx,tsx,mdx}",
    "./app/**/*.{js,ts,jsx,tsx,mdx}",
    "*.{js,ts,jsx,tsx,mdx}",
  ],
  theme: {
    container: { // Добавляем настройки контейнера (опционально)
        center: true,
        padding: "1rem", // Отступы по бокам
        screens: {
          '2xl': '1400px', // Макс ширина контейнера
        },
      },
    extend: {
      colors: {
        // Используем переменные CSS для цветов shadcn/ui
        border: "hsl(var(--border))",
        input: "hsl(var(--input))",
        ring: "hsl(var(--ring))",
        background: "hsl(var(--background))",
        foreground: "hsl(var(--foreground))",
        primary: {
          DEFAULT: "hsl(var(--primary))",
          foreground: "hsl(var(--primary-foreground))",
        },
        secondary: {
          DEFAULT: "hsl(var(--secondary))",
          foreground: "hsl(var(--secondary-foreground))",
        },
        destructive: {
          DEFAULT: "hsl(var(--destructive))",
          foreground: "hsl(var(--destructive-foreground))",
        },
        muted: {
          DEFAULT: "hsl(var(--muted))",
          foreground: "hsl(var(--muted-foreground))",
        },
        accent: {
          DEFAULT: "hsl(var(--accent))",
          foreground: "hsl(var(--accent-foreground))",
        },
        popover: {
          DEFAULT: "hsl(var(--popover))",
          foreground: "hsl(var(--popover-foreground))",
        },
        card: {
          DEFAULT: "hsl(var(--card))",
          foreground: "hsl(var(--card-foreground))",
        },
        // Можно добавить прямые имена цветов для удобства, если нужно
        'gta-pink': 'hsl(var(--primary))',
        'gta-teal': 'hsl(var(--secondary))',
        'gta-orange': 'hsl(var(--accent))',
        'gta-purple': 'hsl(var(--gta-sky-start))', // Пример
        // Удаляем старые 'brand-*' и 'dark-*' цвета, если они больше не нужны
        // или обновляем их значения в соответствии с новой палитрой
        "brand-orange": "hsl(var(--accent))", // Обновлено
        "brand-blue": "hsl(var(--secondary))", // Обновлено
        "brand-pink": "hsl(var(--primary))", // Обновлено
        // "brand-green": "#00FF9D", // Можно оставить или заменить
        // "brand-purple": "#9D00FF", // Можно оставить или заменить
        // "neon-lime": "#AEFF00", // Можно оставить или заменить
      },
      fontFamily: {
        // Оставляем Inter как основной, он хорошо подходит
        sans: ["Inter", ...fontFamily.sans],
        // Orbitron можно использовать через класс .cyber-text или добавить сюда
        // mono: ["monospace", ...fontFamily.mono], // Если нужен моноширинный
        orbitron: ["Orbitron", "sans-serif"], // Добавляем Orbitron сюда
      },
      borderRadius: {
        lg: "var(--radius)",
        md: "calc(var(--radius) - 2px)",
        sm: "calc(var(--radius) - 4px)",
      },
      boxShadow: {
        // Используем цвета из новой палитры
        "glow-sm": "0 0 8px hsla(var(--secondary), 0.5)", // Бирюзовое свечение
        "glow-md": "0 0 15px hsla(var(--secondary), 0.6)",
        "glow-lg": "0 0 25px hsla(var(--secondary), 0.7)",
        "glow-primary-sm": "0 0 8px hsla(var(--primary), 0.5)", // Розовое свечение
        "glow-primary-md": "0 0 15px hsla(var(--primary), 0.6)",
        "glow-primary-lg": "0 0 25px hsla(var(--primary), 0.7)",
      },
      backgroundImage: {
        // Добавляем градиент GTA
        "gta-gradient": "linear-gradient(145deg, hsl(var(--gta-sky-start)) 0%, hsl(var(--gta-sky-end)) 70%, hsl(var(--gta-sun-color)) 100%)",
        // Можно добавить и другие градиенты
        "gta-card-gradient": "linear-gradient(to right, hsla(var(--primary), 0.1), hsla(var(--secondary), 0.1))",
      },
      animation: {
        // Оставляем существующие + можно добавить свои
        "subtle-pulse": "subtle-pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite",
        "accordion-down": "accordion-down 0.2s ease-out",
        "accordion-up": "accordion-up 0.2s ease-out",
        "glow": "glow 2.5s infinite ease-in-out", // Синхронизируем с CSS
        // "neon-pulse": "neon-pulse 1.5s infinite alternate", // Если нужно
      },
      keyframes: {
        // Обновляем keyframes glow, если нужно использовать через Tailwind классы
        glow: { // Убедитесь, что совпадает с CSS @keyframes glow
           '0%, 100%': { textShadow: '0 0 5px hsla(var(--primary), 0.5)' },
           '50%': { textShadow: '0 0 15px hsla(var(--primary), 0.8), 0 0 25px hsla(var(--primary), 0.5)' },
         },
        // neonPulse: { /* ... keyframes neon-pulse ... */ },
        // Оставляем существующие
        "subtle-pulse": {
          "0%, 100%": { opacity: "1" },
          "50%": { opacity: ".7" },
        },
        "accordion-down": {
          from: { height: "0" },
          to: { height: "var(--radix-accordion-content-height)" },
        },
        "accordion-up": {
          from: { height: "var(--radix-accordion-content-height)" },
          to: { height: "0" },
        },
      },
    },
  },
  plugins: [typography, animate],
};

export default config;