const { fontFamily } = require('tailwindcss/defaultTheme');

module.exports = {
  darkMode: ["class"], // Kept from original ts config
  content: [             // Kept from original ts config
    "./pages/**/*.{js,ts,jsx,tsx,mdx}",
    "./components/**/*.{js,ts,jsx,tsx,mdx}",
    "./app/**/*.{js,ts,jsx,tsx,mdx}",
    "*.{js,ts,jsx,tsx,mdx}"
  ],
  theme: {
    extend: {
      // --- New Theme Additions ---
      colors: {
        // Основные цвета (можно взять из лого)
        'brand-orange': '#FF6B00',
        'brand-blue': '#00C2FF',
        'brand-green': '#00FF9D',
        'brand-pink': '#FF007A',
        'brand-purple': '#9D00FF', // Дополнительный для градиентов
        'neon-lime': '#AEFF00',   // Акцентный неон
        // Темные для фона/контраста
        'dark-bg': '#1a1a2e', // Пример темного фона
        'dark-card': '#16213e', // Пример фона карточек
        'light-text': '#e0fbfc', // Светлый текст для темного фона
        'accent-text': '#00FF9D', // Акцентный текст

        // Keep HSL colors from original ts config if needed elsewhere,
        // but the new theme primarily uses the named colors above.
        // You might want to map these to the new names or remove if unused.
        background: 'hsl(var(--background))',
        foreground: 'hsl(var(--foreground))',
        card: {
            DEFAULT: 'hsl(var(--card))', // Will likely be overridden by dark-card etc.
            foreground: 'hsl(var(--card-foreground))'
        },
        popover: {
            DEFAULT: 'hsl(var(--popover))',
            foreground: 'hsl(var(--popover-foreground))'
        },
        primary: {
            DEFAULT: 'hsl(var(--primary))', // Map to brand colors?
            foreground: 'hsl(var(--primary-foreground))'
        },
        secondary: {
            DEFAULT: 'hsl(var(--secondary))',
            foreground: 'hsl(var(--secondary-foreground))'
        },
        muted: {
            DEFAULT: 'hsl(var(--muted))',
            foreground: 'hsl(var(--muted-foreground))'
        },
        accent: { // Renamed 'accent-text' might overlap conceptually
            DEFAULT: 'hsl(var(--accent))',
            foreground: 'hsl(var(--accent-foreground))'
        },
        destructive: { // Map to brand-pink?
            DEFAULT: 'hsl(var(--destructive))',
            foreground: 'hsl(var(--destructive-foreground))'
        },
        border: 'hsl(var(--border))', // Consider using brand colors for borders
        input: 'hsl(var(--input))',
        ring: 'hsl(var(--ring))', // Consider using brand colors for rings
        chart: { /* ... keep if needed ... */ },
        sidebar: { /* ... keep if needed ... */ },
      },
      fontFamily: {
        // Основной читаемый шрифт
        sans: ['Inter', ...fontFamily.sans], // Inter - хороший выбор
        // Опционально: Игривый/акцентный шрифт (нужно подключить отдельно)
        // display: ['"Press Start 2P"', ...fontFamily.sans], // Пример пиксельного
        // playful: ['Comic Sans MS', ...fontFamily.sans], // НЕ НАДО :)
        mono: ['monospace', ...fontFamily.mono], // Added mono for timer
      },
      boxShadow: {
        'glow-sm': '0 0 8px rgba(var(--glow-color, 0, 255, 157), 0.5)',
        'glow-md': '0 0 15px rgba(var(--glow-color, 0, 255, 157), 0.6)',
        'glow-lg': '0 0 25px rgba(var(--glow-color, 0, 255, 157), 0.7)',
      },
       backgroundImage: {
         'gradient-radial': 'radial-gradient(var(--tw-gradient-stops))',
         'gradient-conic': 'conic-gradient(from 180deg at 50% 50%, var(--tw-gradient-stops))',
         'page-gradient': 'linear-gradient(145deg, theme(colors.dark-bg / 98%), theme(colors.dark-card / 95%))', // Градиент для фона страницы
       },
       animation: {
         'subtle-pulse': 'subtle-pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite',
         // Keep accordion animations from original ts config
         'accordion-down': 'accordion-down 0.2s ease-out',
         'accordion-up': 'accordion-up 0.2s ease-out'
       },
       keyframes: {
         'subtle-pulse': {
           '0%, 100%': { opacity: '1' },
           '50%': { opacity: '.7' },
         },
         // Keep accordion keyframes from original ts config
         'accordion-down': {
             from: { height: '0' },
             to: { height: 'var(--radix-accordion-content-height)' }
         },
         'accordion-up': {
             from: { height: 'var(--radix-accordion-content-height)' },
             to: { height: '0' }
         }
       },
       // Keep borderRadius from original ts config
       borderRadius: {
         lg: 'var(--radius)',
         md: 'calc(var(--radius) - 2px)',
         sm: 'calc(var(--radius) - 4px)'
       },
    },
  },
  plugins: [
    require('@tailwindcss/typography'), // For styling markdown (New)
    require("tailwindcss-animate"),    // Kept from original ts config
    // ... другие плагины
  ],
}