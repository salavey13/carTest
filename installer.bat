@echo off
:: Check for administrative privileges
>nul 2>&1 "%SYSTEMROOT%\system32\cacls.exe" "%SYSTEMROOT%\system32\config\system"
if '%errorlevel%' NEQ '0' (
    echo –ó–∞–ø—Ä–∞—à–∏–≤–∞—é –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...
    goto :UACPrompt
) else ( goto :AdminAccess )
:UACPrompt
    echo Set UAC = CreateObject^("Shell.Application"^) > "%temp%\getadmin.vbs"
    echo UAC.ShellExecute "%~s0", "", "", "runas", 1 >> "%temp%\getadmin.vbs"
    "%temp%\getadmin.vbs"
    exit /B
:AdminAccess
    if exist "%temp%\getadmin.vbs" ( del "%temp%\getadmin.vbs" )
    pushd "%CD%"
    CD /D "%~dp0"

:: ASCII Art (Razor Scene Group Style with SALAVEY13)
echo.
echo     ________   ________   ________   ________   ________  
echo    /_______/  /_______/  /_______/  /_______/  /_______/  
echo    |  ___  |  |  ___  |  |  ___  |  |  ___  |  |  ___  |  
echo    | /   \ |  | /   \ |  | /   \ |  | /   \ |  | /   \ |  
echo    |/_____\|  |/_____\|  |/_____\|  |/_____\|  |/_____\|  
echo    SALAVEY13 SALAVEY13 SALAVEY13 SALAVEY13 SALAVEY13      
echo.
echo ============================================
echo       –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –£—Å—Ç–∞–Ω–æ–≤—â–∏–∫ by Qwen
echo ============================================

:: Configuration
set REPO_URL=https://github.com/salavey13/cartest.git
set PROJECTS_DIR=%USERPROFILE%\Documents\V0_Projects
set REPO_DIR=%PROJECTS_DIR%\cartest
set VERSION_FILE=%REPO_DIR%\VERSION
set V0_DEV_URL=https://v0.dev/chat/fork-of-rastaman-shop-KvYJosUCML9
set VERCEL_URL=https://vercel.com
set SUPABASE_URL=https://supabase.com
set GITHUB_URL=https://github.com/salavey13/cartest

:: Progress Bar Function
:ProgressBar
setlocal enabledelayedexpansion
set /a total=%1
set /a current=%2
set /a percent=current*100/total
set "bar="
for /L %%i in (1,1,50) do (
    if %%i leq !percent!/2 (
        set "bar=!bar!#"
    ) else (
        set "bar=!bar!."
    )
)
echo [%bar%] !percent!%% %TIPS[%current%]%
exit /b

:: Download Function
:DownloadFile
setlocal
set URL=%1
set FILE=%2
echo –°–∫–∞—á–∏–≤–∞–Ω–∏–µ %FILE%...
powershell -Command "Invoke-WebRequest -Uri '%URL%' -OutFile '%FILE%'"
if %ERRORLEVEL% NEQ 0 (
    echo –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è %FILE%. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º...
    exit /b 1
)
exit /b 0

:: Install Function
:InstallSilently
setlocal
set INSTALLER=%1
set ARGS=%2
if not exist "%INSTALLER%" (
    echo –£—Å—Ç–∞–Ω–æ–≤—â–∏–∫ %INSTALLER% –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º...
    exit /b 1
)
echo –£—Å—Ç–∞–Ω–æ–≤–∫–∞ %INSTALLER%...
start /wait "" "%INSTALLER%" %ARGS%
if %ERRORLEVEL% NEQ 0 (
    echo –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ %INSTALLER%. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º...
    exit /b 1
)
exit /b 0

:: Check if Everything is Already Installed
:CheckInstallation
echo –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã...
where git >nul 2>&1
if %ERRORLEVEL% equ 0 (
    echo ‚úÖ Git —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.
) else (
    echo ‚ùå Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ë—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω –ø—Ä–æ—Ü–µ—Å—Å —É—Å—Ç–∞–Ω–æ–≤–∫–∏.
    set NEED_INSTALL=1
)

where node >nul 2>&1
if %ERRORLEVEL% equ 0 (
    echo ‚úÖ Node.js —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.
) else (
    echo ‚ùå Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ë—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω –ø—Ä–æ—Ü–µ—Å—Å —É—Å—Ç–∞–Ω–æ–≤–∫–∏.
    set NEED_INSTALL=1
)

if exist "%REPO_DIR%" (
    echo ‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É–∂–µ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω.
) else (
    echo ‚ùå –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω. –ë—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω –ø—Ä–æ—Ü–µ—Å—Å –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è.
    set NEED_INSTALL=1
)

if defined NEED_INSTALL (
    echo –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤.
    pause
    goto :MainScript
) else (
    echo –í—Å—ë —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ! –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è...
    goto :Dashboard
)

:: Main Script Execution
:MainScript
echo –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —É—Å—Ç–∞–Ω–æ–≤–∫–∏...

:: Step 1: Create V0_Projects Folder
if not exist "%PROJECTS_DIR%" (
    echo –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ V0_Projects...
    mkdir "%PROJECTS_DIR%"
)
cd /d "%PROJECTS_DIR%"

:: Step 2: Check if Project Exists
if not exist "%REPO_DIR%" (
    echo üõ†Ô∏è –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω. –ö–ª–æ–Ω–∏—Ä—É–µ–º –µ–≥–æ...
    git clone "%REPO_URL%" "%REPO_DIR%"
    cd "%REPO_DIR%"
    call :ProgressBar 15 1
) else (
    echo –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É–∂–µ –Ω–∞ –º–µ—Å—Ç–µ. –í—Å—ë –≥–æ—Ç–æ–≤–æ!
    cd "%REPO_DIR%"
    call :ProgressBar 15 1
)

:: Step 3: Pull Latest Changes
echo üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –ø–µ—Ä–µ–¥ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º –∞—Ä—Ö–∏–≤–∞...
git pull origin main
call :ProgressBar 15 2

:: Step 4: Check for ZIP Files in Multiple Locations
echo üîç –ò—â–µ–º ZIP-–∞—Ä—Ö–∏–≤—ã —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏...
setlocal enabledelayedexpansion
set ZIP_COUNT=0
set LATEST_ZIP=
for %%f in ("%REPO_DIR%\*.zip" "%~dp0*.zip" "%USERPROFILE%\Desktop\*.zip") do (
    set /a ZIP_COUNT+=1
    set LATEST_ZIP=%%~nxf
    set LATEST_ZIP_PATH=%%~ff
)

if %ZIP_COUNT% equ 0 (
    echo ‚ö†Ô∏è ZIP-–∞—Ä—Ö–∏–≤–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –∞—Ä—Ö–∏–≤ –∏–∑ –±–æ—Ç–∞.
    pause
    explorer "%REPO_DIR%"
    exit /b
)

echo ‚úÖ –ù–∞–π–¥–µ–Ω –∞—Ä—Ö–∏–≤: %LATEST_ZIP%

:: Step 5: Extract and Apply ZIP Updates
if exist "%VERSION_FILE%" (
    for /f "tokens=1-3" %%v in ('type "%VERSION_FILE%"') do (
        set CURRENT_VERSION=%%v
        set LAST_APPLIED_ZIP=%%w
    )
    echo –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è –ø—Ä–æ–µ–∫—Ç–∞: %CURRENT_VERSION%, –ø–æ—Å–ª–µ–¥–Ω–∏–π ZIP: %LAST_APPLIED_ZIP%
) else (
    set CURRENT_VERSION=0
    set LAST_APPLIED_ZIP=
    echo 0 > "%VERSION_FILE%"
)

findstr /c:"%LATEST_ZIP%" "%VERSION_FILE%" >nul 2>&1
if %ERRORLEVEL% equ 0 (
    echo üîÑ ZIP "%LATEST_ZIP%" —É–∂–µ –ø—Ä–∏–º–µ–Ω—ë–Ω. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è...
    powershell -Command "Expand-Archive -Force '%LATEST_ZIP_PATH%' -DestinationPath .\temp_unzip"
    for /d %%d in (temp_unzip\*) do set ROOT_UNPACKED_DIR=%%d
    xcopy /s /y "!ROOT_UNPACKED_DIR!\*" "%REPO_DIR%\temp_git_check"
    rmdir /s /q temp_unzip
    git diff --quiet "%REPO_DIR%\temp_git_check" >nul 2>&1
    if %ERRORLEVEL% equ 0 (
        echo üîÑ ZIP "%LATEST_ZIP%" –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π. –ù–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º!
        rmdir /s /q "%REPO_DIR%\temp_git_check"
        pause
        exit /b
    ) else (
        echo ‚ö†Ô∏è ZIP "%LATEST_ZIP%" –∏–∑–º–µ–Ω—ë–Ω. –ü—Ä–∏–º–µ–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.
    )
    rmdir /s /q "%REPO_DIR%\temp_git_check"
)

echo üõ†Ô∏è –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º "%LATEST_ZIP%"...
powershell -Command "Expand-Archive -Force '%LATEST_ZIP_PATH%' -DestinationPath .\temp_unzip"
for /d %%d in (temp_unzip\*) do set ROOT_UNPACKED_DIR=%%d
xcopy /s /y "!ROOT_UNPACKED_DIR!\*" "%REPO_DIR%"
rmdir /s /q temp_unzip

:: Update VERSION File
set /a NEXT_VERSION=%CURRENT_VERSION%+1
echo %NEXT_VERSION% %LATEST_ZIP% > "%VERSION_FILE%"
call :ProgressBar 15 8

:: Step 6: Commit and Push Changes
set COMMIT_MSG="üí• –û–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç %LATEST_ZIP% | –í–µ—Ä—Å–∏—è %NEXT_VERSION%"
echo ‚úÖ –°–æ–∑–¥–∞—ë–º –∫–æ–º–º–∏—Ç —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º: %COMMIT_MSG%

:: Create a New Branch
set BRANCH_NAME=–±–æ—Ç_%DATE:~-4%%DATE:~-7,2%%DATE:~-10,2%_%TIME:~0,2%%TIME:~3,2%
git checkout -b %BRANCH_NAME%
git add .
git commit -m "%COMMIT_MSG%"
call :ProgressBar 15 10

echo üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ GitHub...
git push origin %BRANCH_NAME%
call :ProgressBar 15 12

:: Switch Back to Main Branch
git checkout main
git pull origin main
call :ProgressBar 15 13

:: Step 7: Open Pull Request Page
echo –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É Pull Request –≤ –±—Ä–∞—É–∑–µ—Ä–µ...
start "" "https://github.com/salavey13/cartest/pulls"
call :ProgressBar 15 14

:: Cleanup
echo –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...
del /q "%LATEST_ZIP_PATH%"
call :ProgressBar 15 15



:: Telegram Configuration
set TELEGRAM_BOT_TOKEN=
set ADMIN_CHAT_ID=

:: Load VERSION.ini
if exist "%VERSION_FILE%" (
    for /f "tokens=1,2 delims==" %%a in (%VERSION_FILE%) do (
        if "%%a"=="VERCEL_PROJECT_URL" set VERCEL_PROJECT_URL=%%b
        if "%%a"=="SUPABASE_PROJECT_ID" set SUPABASE_PROJECT_ID=%%b
        if "%%a"=="TELEGRAM_BOT_TOKEN" set TELEGRAM_BOT_TOKEN=%%b
        if "%%a"=="ADMIN_CHAT_ID" set ADMIN_CHAT_ID=%%b
    )
)

:: Gamified Welcome Message
:WelcomeMessage
cls
echo.
echo     ________   ________   ________   ________   ________  
echo    /_______/  /_______/  /_______/  /_______/  /_______/  
echo    |  ___  |  |  ___  |  |  ___  |  |  ___  |  |  ___  |  
echo    | /   \ |  | /   \ |  | /   \ |  | /   \ |  | /   \ |  
echo    |/_____\|  |/_____\|  |/_____\|  |/_____\|  |/_____\|  
echo    SALAVEY13 SALAVEY13 SALAVEY13 SALAVEY13 SALAVEY13      
echo.
echo ============================================
if not defined VERCEL_PROJECT_URL (
    echo üåü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –Ω–æ–≤–∏—á–æ–∫! –ù–∞—á–Ω–∏—Ç–µ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Vercel.
) else if not defined SUPABASE_PROJECT_ID (
    echo üöÄ –•–æ—Ä–æ—à–∞—è —Ä–∞–±–æ—Ç–∞! –¢–µ–ø–µ—Ä—å –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ Supabase –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
) else if not defined TELEGRAM_BOT_TOKEN (
    echo üî• –ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ! –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Telegram Bot –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.
) else (
    echo üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à –ø—Ä–æ–µ–∫—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!
)
echo ============================================

:: Dashboard
:Dashboard
echo.
echo          –ü–ê–ù–ï–õ–¨ –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–†–û–ï–ö–¢–û–ú
echo ============================================
echo 1. –í–µ—Ä—Å–∏—è –ø—Ä–æ–µ–∫—Ç–∞: %NEXT_VERSION%
echo 2. –ü–æ—Å–ª–µ–¥–Ω–∏–π –ø—Ä–∏–º–µ–Ω—ë–Ω–Ω—ã–π ZIP: %LATEST_ZIP%
echo 3. –°—Ç–∞—Ç—É—Å Git:
git status
echo.
echo ====================== –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ======================
if defined VERCEL_PROJECT_URL (
    echo ‚úÖ Vercel URL: %VERCEL_PROJECT_URL%
) else (
    echo ‚ùå Vercel URL: –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–µ–º–æ-–ø—Ä–æ–µ–∫—Ç v0.dev)
)
if defined SUPABASE_PROJECT_ID (
    echo ‚úÖ Supabase Project ID: %SUPABASE_PROJECT_ID%
) else (
    echo ‚ùå Supabase Project ID: –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω (–∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ)
)
if defined TELEGRAM_BOT_TOKEN (
    echo ‚úÖ Telegram Bot Token: –ù–∞—Å—Ç—Ä–æ–µ–Ω
) else (
    echo ‚ùå Telegram Bot Token: –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω
)
if defined ADMIN_CHAT_ID (
    echo ‚úÖ Admin Chat ID: –ù–∞—Å—Ç—Ä–æ–µ–Ω
) else (
    echo ‚ùå Admin Chat ID: –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω
)
echo ============================================================
echo.
echo ====================== –ë–´–°–¢–†–´–ï –°–°–´–õ–ö–ò ======================
echo [1] Vercel: %VERCEL_URL%
echo [2] Supabase: %SUPABASE_URL%
echo [3] GitHub: %GITHUB_URL%
echo [4] v0.dev –ü—Ä–æ–µ–∫—Ç: %V0_DEV_URL%
echo [5] Qwen Chat: https://chat.qwenlm.ai
echo [6] Supabase SQL Console: https://app.supabase.com/project/YOUR_PROJECT_ID/sql
echo ============================================================
echo.
echo ====================== –î–ï–ô–°–¢–í–ò–Ø ============================
echo [A] –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–±–æ—Ä–∫—É –ø—Ä–æ–µ–∫—Ç–∞ (npm run build)
echo [B] –ó–∞–ø—É—Å—Ç–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (npm run dev)
echo [C] –°–æ–∑–¥–∞—Ç—å –≤–µ—Ç–∫—É –∏ Pull Request (–µ—Å–ª–∏ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ Git)
echo [D] –î–æ–±–∞–≤–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–µ —Ñ–∞–π–ª—ã –≤ –∞—Ä—Ö–∏–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
echo [E] –û—Ç–∫—Ä—ã—Ç—å –ø–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ
echo [F] –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Vercel (—Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å –ø—Ä–æ–µ–∫—Ç)
echo [G] –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Supabase (—Å–æ–∑–¥–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö)
echo [H] –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Telegram Bot (—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω –∏ —á–∞—Ç ID)
echo [I] –í—ã—Ö–æ–¥
echo ============================================================
set /p ACTION="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: "

if /i "%ACTION%"=="A" (
    echo –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞...
    npm run build
    pause
    goto :Dashboard
)

if /i "%ACTION%"=="B" (
    echo –ó–∞–ø—É—Å–∫ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...
    npm run dev
    pause
    goto :Dashboard
)

if /i "%ACTION%"=="C" (
    echo –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ Git...
    git diff --quiet
    if %ERRORLEVEL% neq 0 (
        echo ‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è. –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é –≤–µ—Ç–∫—É –∏ Pull Request...
        set BRANCH_NAME=–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ_%DATE:~-4%%DATE:~-7,2%%DATE:~-10,2%_%TIME:~0,2%%TIME:~3,2%
        git checkout -b %BRANCH_NAME%
        git add .
        set /p COMMIT_MSG="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞: "
        git commit -m "%COMMIT_MSG%"
        git push origin %BRANCH_NAME%
        start "" "https://github.com/salavey13/cartest/pulls"
    ) else (
        echo ‚ùå –ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ—Ç. –ù–µ—á–µ–≥–æ –∫–æ–º–º–∏—Ç–∏—Ç—å.
    )
    pause
    goto :Dashboard
)

if /i "%ACTION%"=="D" (
    echo –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ —Ñ–∞–π–ª—ã –≤ –∞—Ä—Ö–∏–≤...
    set /p FILES="–í–≤–µ–¥–∏—Ç–µ –∏–º–µ–Ω–∞ —Ñ–∞–π–ª–æ–≤ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä, file1.txt file2.js): "
    powershell -Command "Compress-Archive -Path %FILES% -DestinationPath '%REPO_DIR%\update.zip' -Force"
    echo –ê—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: update.zip
    pause
    goto :Dashboard
)

if /i "%ACTION%"=="E" (
    echo –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ...
    start "" "%VERCEL_URL%"
    start "" "%SUPABASE_URL%"
    start "" "%GITHUB_URL%"
    start "" "%V0_DEV_URL%"
    start "" "https://chat.qwenlm.ai"
    start "" "https://app.supabase.com/project/YOUR_PROJECT_ID/sql"
    pause
    goto :Dashboard
)

if /i "%ACTION%"=="F" (
    echo –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ Vercel...
    if not defined VERCEL_PROJECT_URL (
        vercel login
        cd "%REPO_DIR%"
        vercel projects create cartest --yes
        vercel deploy --prod
        for /f "tokens=*" %%i in ('vercel inspect --scope') do set VERCEL_PROJECT_URL=%%i
        echo VERCEL_PROJECT_URL=%VERCEL_PROJECT_URL% >> "%VERSION_FILE%"
    ) else (
        echo ‚úÖ Vercel —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω: %VERCEL_PROJECT_URL%
    )
    pause
    goto :WelcomeMessage
)

if /i "%ACTION%"=="G" (
    echo –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Supabase...
    if not defined SUPABASE_PROJECT_ID (
        cd "%REPO_DIR%"
        supabase init
        supabase start
        supabase db reset
        for /f "tokens=*" %%i in ('supabase status ^| findstr "API URL"') do set SUPABASE_PROJECT_ID=%%i
        echo SUPABASE_PROJECT_ID=%SUPABASE_PROJECT_ID% >> "%VERSION_FILE%"
    ) else (
        echo ‚úÖ Supabase —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω: %SUPABASE_PROJECT_ID%
    )
    pause
    goto :WelcomeMessage
)

if /i "%ACTION%"=="H" (
    echo –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram Bot...
    if not defined TELEGRAM_BOT_TOKEN (
        set /p TELEGRAM_BOT_TOKEN="–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ Telegram –±–æ—Ç–∞: "
        echo TELEGRAM_BOT_TOKEN=%TELEGRAM_BOT_TOKEN% >> "%VERSION_FILE%"
    ) else (
        echo ‚úÖ Telegram Bot Token —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω.
    )
    if not defined ADMIN_CHAT_ID (
        set /p ADMIN_CHAT_ID="–í–≤–µ–¥–∏—Ç–µ ID –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ —á–∞—Ç–∞: "
        echo ADMIN_CHAT_ID=%ADMIN_CHAT_ID% >> "%VERSION_FILE%"
    ) else (
        echo ‚úÖ Admin Chat ID —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω.
    )
    if defined VERCEL_PROJECT_URL (
        if defined TELEGRAM_BOT_TOKEN (
            echo –û–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é TELEGRAM_BOT_TOKEN –≤ Vercel...
            vercel env add TELEGRAM_BOT_TOKEN %TELEGRAM_BOT_TOKEN% production
        )
        if defined ADMIN_CHAT_ID (
            echo –û–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é ADMIN_CHAT_ID –≤ Vercel...
            vercel env add ADMIN_CHAT_ID %ADMIN_CHAT_ID% production
        )
    )
    pause
    goto :WelcomeMessage
)

if /i "%ACTION%"=="I" (
    echo –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!
    exit /b
)

echo –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.
pause
goto :Dashboard
