name: Vibe-Driven Auto-Merge & Enhance

on:
  pull_request_target:
    types: [opened, synchronize, reopened, ready_for_review, edited]

jobs:
  auto-merge-and-enhance:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write

    if: >
      github.event.pull_request.user.login == 'salavey13' &&
      (
        startsWith(github.event.pull_request.title, 'Chore: Update image') ||
        startsWith(github.event.pull_request.title, 'Chore: Update icon') ||
        startsWith(github.event.pull_request.title, 'пульс:') ||
        startsWith(github.event.pull_request.title, '⚡:')
      ) &&
      github.event.pull_request.draft == false &&
      github.event.pull_request.state == 'open'

    steps:
      - name: Checkout repository context
        # ЭТОТ ШАГ РЕШАЕТ ПРОБЛЕМУ 'not a git repository'
        uses: actions/checkout@v3

      - name: Fetch changed files list
        id: changed_files
        run: |
          files=$(gh pr diff ${{ github.event.pull_request.number }} --name-only)
          echo "files<<EOF" >> $GITHUB_OUTPUT
          echo "$files" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Title, Edit PR, and Add Label
        # Этот шаг выполняется только для наших "умных" триггеров
        if: startsWith(github.event.pull_request.title, '⚡:') || startsWith(github.event.pull_request.title, 'пульс:')
        run: |
          files="${{ steps.changed_files.outputs.files }}"
          title=""

          if echo "$files" | grep -q 'lib/cyberfitness.ts'; then
            title="Refactor(core): Пересборка Квантового Ядра CyberFitness"
          elif echo "$files" | grep -q 'components/repo/prompt.ts'; then
            title="Refactor(core): Обновление Конституции Vibe"
          elif echo "$files" | grep -q -E 'command-handler.ts|database.types.ts|/api/telegramWebhook/route.ts'; then
            title="Refactor(core): Модификация центрального нейронного ядра"
          elif echo "$files" | grep -q -E 'package.json|yarn.lock'; then
            title="Chore(deps): Синхронизация временных парадоксов зависимостей"
          elif echo "$files" | grep -q -E 'next.config|tailwind.config|eslintrc.json'; then
            title="Chore(config): Калибровка системных параметров"
          else
            title="Chore: Плановая оптимизация систем"
          fi
          
          echo "Generated Title: $title"
          gh pr edit ${{ github.event.pull_request.number }} --title "$title" --add-label "coolvibes"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable Auto-Merge and Store Final Title
        id: automerge
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ github.event.pull_request.number }}
          merge-method: squash
          delete-branch-after-merge: true

      - name: Send Feedback to Telegram Bot
        if: steps.automerge.outputs.automerge-enabled == 'true'
        run: |
          # Используем `gh` для получения финального заголовка PR после всех изменений
          final_title=$(gh pr view ${{ github.event.pull_request.number }} --json title -q '.title')
          
          curl -X POST "${{ secrets.VERCEL_PROJECT_PRODUCTION_URL }}/api/github-action-feedback" \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer ${{ secrets.ACTION_SECRET }}" \
          -d '{
            "pr_number": "${{ github.event.pull_request.number }}",
            "pr_title": "'"$final_title"'",
            "author_id": "${{ github.event.pull_request.user.id }}"
          }'